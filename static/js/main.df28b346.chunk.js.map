{"version":3,"sources":["constants/settings.js","constants/strings.js","components/navbar/Navbar.js","screens/CreateGame.js","screens/Home.js","lib/localStorage.js","screens/SharedWordls.js","context/AlertContext.js","components/alerts/Alert.js","components/alerts/AlertContainer.js","constants/wordlist.js","lib/dateutils.js","lib/words.js","lib/statuses.js","components/grid/Cell.js","components/modals/BaseModal.js","components/modals/DatePickerModal.js","components/modals/InfoModal.js","lib/clipboard.js","lib/encryption.js","lib/stats.js","components/stats/EmigratePanel.js","components/stats/ImmigratePanel.js","components/modals/MigrateStatsModal.js","components/modals/SettingsToggle.js","components/modals/SettingsModal.js","lib/share.js","components/stats/Progress.js","components/stats/Histogram.js","components/stats/MigrationIntro.js","components/stats/StatBar.js","components/modals/StatsModal.js","lib/browser.js","screens/Wordle.js","App.js","reportWebVitals.js","index.js"],"names":["MAX_CHALLENGES","LONG_ALERT_TIME_MS","REVEAL_TIME_MS","WELCOME_INFO_MODAL_MS","DISCOURAGE_INAPP_BROWSERS","DATE_LOCALE","enUS","WIN_MESSAGES","GAME_COPIED_MESSAGE","HARD_MODE_ALERT_MESSAGE","CORRECT_WORD_MESSAGE","solution","concat","SHARE_FAILURE_TEXT","DISCOURAGE_INAPP_BROWSER_TEXT","Navbar","_ref","setIsInfoModalOpen","setIsStatsModalOpen","setIsSettingsModalOpen","setIsDatePickerModalOpen","react","className","index_esm","onClick","dist","to","ChartBarIcon","CogIcon","CreateGame","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","window","matchMedia","matches","esm","Navbar_Navbar","Home","console","log","classnames","type","saveGameStateToLocalStorage","isLatestGame","gameState","key","localStorage","setItem","JSON","stringify","loadGameStateFromLocalStorage","state","getItem","parse","saveStatsToLocalStorage","gameStats","setStoredIsHighContrastMode","isHighContrast","removeItem","getStoredIsHighContrastMode","SharedWordls","setSentWords","useEffect","wordArr","AlertContext","createContext","status","message","isVisible","showSuccess","showError","displayName","useAlert","useContext","AlertProvider","children","setStatus","setMessage","setIsVisible","show","useCallback","showStatus","newMessage","options","_ref2","_ref2$delayMs","delayMs","persist","onClose","_ref2$durationMs","durationMs","setTimeout","Provider","value","Alert","isOpen","_ref$variant","variant","classes","topMost","classNames","bg-rose-500 text-white","bg-blue-500 text-white","transition","as","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","AlertContainer","_useAlert","Alert_Alert","WORD","WORDS","getToday","startOfToday","getYesterday","startOfYesterday","firstGameDate","Date","unicodeSplit","word","GraphemeSplitter","splitGraphemes","localeAwareUpperCase","text","process","REACT_APP_LOCALE_STRING","toLocaleUpperCase","toUpperCase","getLastGameDate","today","t","startOfDay","daysSinceLastGame","differenceInDays","addDays","isValidGameDate","date","getGameDate","getIsLatestGame","parsed","queryString","location","search","d","parseISO","toString","setGameDate","e","href","formatISO","representation","gameDate","nextGameDate","index","start","getIndex","wordOfTheDay","Error","urlParams","URLSearchParams","currentEncWord","get","decodedData","atob","WordBefore","length","push","toLowerCase","getWordOfDay","solutionGameDate","solutionIndex","tomorrow","valueOf","getSolution","getGuessStatuses","guess","splitSolution","splitGuess","solutionCharsTaken","map","_","statuses","Array","from","forEach","letter","i","includes","indexOfPresentChar","findIndex","x","Cell","isRevealing","isCompleted","_ref$position","position","isFilled","shouldReveal","animationDelay","bg-white dark:bg-slate-900 border-slate-200 dark:border-slate-600","border-black dark:border-slate-100","absent shadowed bg-slate-400 dark:bg-slate-700 text-white border-slate-400 dark:border-slate-700","correct shadowed bg-orange-500 text-white border-orange-500","present shadowed bg-cyan-500 text-white border-cyan-500","correct shadowed bg-green-500 text-white border-green-500","present shadowed bg-yellow-500 text-white border-yellow-500","cell-fill-animation","cell-reveal","style","BaseModal","title","handleClose","Root","dialog","Child","Overlay","tabIndex","aria-pressed","XCircleIcon","Title","DatePickerModal","initialDate","handleSelectDate","lastGameDate","selectedDate","setSelectedDate","formatOptions","locale","registerLocale","excludedDates","BaseModal_BaseModal","react_datepicker_min_default","a","minDate","maxDate","selected","excludeDates","onChange","inline","popperClassName","renderCustomHeader","decreaseMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled","format","disabled","ChevronLeftIcon","ChevronRightIcon","InfoModal","Cell_Cell","copyTextToClipboard","navigator","clipboard","writeText","textArea","document","createElement","top","left","body","appendChild","focus","select","execCommand","err","error","removeChild","fallbackCopyTextToClipboard","bf","Blowfish","MODE","ECB","PADDING","NULL","setIv","decrypt","encoded","decode","Uint8Array","c","charCodeAt","TYPE","STRING","defaultStats","winDistribution","gamesFailed","currentStreak","bestStreak","totalGames","successRate","loadStats","stats","loadStatsFromLocalStorage","EmigratePanel","data","isCopyButtonEnabled","setIsCopyButtonEnabled","copyButtonText","setCopyButtonText","migrationStats","statistics","emigrationCode","btoa","encode","reduce","byte","String","fromCharCode","htmlFor","id","readOnly","rows","DuplicateIcon","ImmigratePanel","isSaveButtonEnabled","setIsSaveButtonEnabled","textareaClassNames","valid","invalid","allClassNames","toConsumableArray","event","_a","target","Element","textarea","cn","classList","remove","add","handleImmigrationCodeChange","getElementById","confirm","alert","reload","SaveIcon","MigrateStatsModal","isEmigrateVisible","setIsEmigrateVisible","checked","radioGroup","name","EmigratePanel_EmigratePanel","ImmigratePanel_ImmigratePanel","SettingsToggle","settingName","flag","handleFlag","description","toggleHolder","bg-green-400","toggleButton","translate-x-6","SettingsModal","isHardMode","handleHardMode","isDarkMode","handleDarkMode","isHighContrastMode","handleHighContrastMode","SettingsToggle_SettingsToggle","webShareApiDeviceTypes","parser","UAParser","browser","getBrowser","device","getDevice","generateEmojiGrid","guesses","tiles","join","attemptShare","shareData","_b","indexOf","canShare","share","getEmojiTiles","Progress","size","label","isCurrentDayStatRow","currentRowClass","bg-blue-600","bg-gray-600","width","isGameWon","numberOfGuessesMade","Histogram","maxValue","Math","max","apply","Progress_Progress","MigrationIntro","handleMigrateStatsButton","LogoutIcon","StatItem","StatBar","StatBar_StatItem","StatsModal","isGameLost","handleShareToClipboard","handleShareFailure","StatBar_StatBar","MigrationIntro_MigrationIntro","Histogram_Histogram","PlusIcon","lost","textToShare","shareSuccess","then","catch","shareStatus","ShareIcon","inAppBrowserNames","isInAppBrowser","Wordle","prefersDarkMode","showErrorAlert","showSuccessAlert","setIsGameWon","isInfoModalOpen","isStatsModalOpen","isDatePickerModalOpen","isMigrateStatsModalOpen","setIsMigrateStatsModalOpen","_useState13","_useState14","isSettingsModalOpen","_useState15","_useState16","_useState17","_useState18","setIsGameLost","_useState19","_useState20","setIsDarkMode","_useState21","_useState22","setIsHighContrastMode","_useState23","_useState24","_useState25","loaded","gameWasWon","_useState26","_useState27","_useState28","_useState29","_useState30","setIsHardMode","documentElement","winMessage","floor","random","ClockIcon","InfoModal_InfoModal","StatsModal_StatsModal","DatePickerModal_DatePickerModal","MigrateStatsModal_MigrateStatsModal","SettingsModal_SettingsModal","isHard","isDark","AlertContainer_AlertContainer","App","react_router_dist","path","element","screens_Home","screens_Wordle","screens_CreateGame","screens_SharedWordls","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","react_default","StrictMode","AlertContext_AlertProvider","src_App"],"mappings":"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","file":"static/js/main.df28b346.chunk.js","sourcesContent":["import { enUS } from 'date-fns/locale';\n\nexport const MAX_CHALLENGES = 6;\nexport const NEW_CHALLENGE = 2;\n\nexport const ALERT_TIME_MS = 2000;\nexport const LONG_ALERT_TIME_MS = 10000;\nexport const REVEAL_TIME_MS = 350;\nexport const WELCOME_INFO_MODAL_MS = 350;\nexport const DISCOURAGE_INAPP_BROWSERS = true;\nexport const ENABLE_MIGRATE_STATS = true;\nexport const BLOWFISH_KEY = 'xcQUAHsik#Thq&LG*8es2DsZ$3bw^e';\nexport const BLOWFISH_IV = '#45XmF^w';\nexport const ENABLE_ARCHIVED_GAMES = false;\nexport const DATE_LOCALE = enUS;\n","export const GAME_TITLE = 'WordGame';\n\nexport const WIN_MESSAGES = ['Great Job!', 'Awesome', 'Well done!'];\nexport const GAME_COPIED_MESSAGE = 'Game copied to clipboard';\nexport const NOT_ENOUGH_LETTERS_MESSAGE = 'Not enough letters';\nexport const WORD_NOT_FOUND_MESSAGE = 'Word not found';\nexport const HARD_MODE_ALERT_MESSAGE =\n    'Hard Mode can only be enabled at the start!';\nexport const HARD_MODE_DESCRIPTION =\n    'Any revealed hints must be used in subsequent guesses';\nexport const HIGH_CONTRAST_MODE_DESCRIPTION = 'For improved color vision';\nexport const CORRECT_WORD_MESSAGE = solution => `The word was ${solution}`;\nexport const WRONG_SPOT_MESSAGE = (guess, position) =>\n    `Must use ${guess} in position ${position}`;\nexport const NOT_CONTAINED_MESSAGE = letter => `Guess must contain ${letter}`;\nexport const ENTER_TEXT = 'Enter';\nexport const DELETE_TEXT = 'Delete';\nexport const STATISTICS_TITLE = 'Statistics';\nexport const SHARE_GAME_MODAL_TITLE = 'Share your word';\nexport const SHARE_GAME_MODAL_WORD = 'Choose your word!';\n\nexport const GUESS_DISTRIBUTION_TEXT = 'Guess Distribution';\nexport const NEW_WORD_TEXT = 'New word in';\nexport const SHARE_TEXT = 'Share';\nexport const CREATE_FROM_STAT_TEXT = 'Create';\n\nexport const SHARE_FAILURE_TEXT =\n    'Unable to share the results. This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.';\nexport const MIGRATE_BUTTON_TEXT = 'Transfer';\nexport const SHARE_BUTTON_TEXT = 'Share';\n\nexport const MIGRATE_DESCRIPTION_TEXT =\n    'Click here to transfer your statistics to a new device.';\nexport const SHARE_DESCRIPTION_TEXT =\n    'Click here to share your word with your friends.';\nexport const TOTAL_TRIES_TEXT = 'Total tries';\nexport const SUCCESS_RATE_TEXT = 'Success rate';\nexport const CURRENT_STREAK_TEXT = 'Current streak';\nexport const BEST_STREAK_TEXT = 'Best streak';\nexport const DISCOURAGE_INAPP_BROWSER_TEXT =\n    \"You are using an embedded browser and may experience problems sharing or saving your results. We encourage you rather to use your device's default browser.\";\nexport const DATEPICKER_TITLE = 'Choose a past date';\nexport const DATEPICKER_CHOOSE_TEXT = 'Choose';\nexport const DATEPICKER_TODAY_TEXT = 'today';\nexport const ARCHIVE_GAMEDATE_TEXT = 'Game date';\n","import { CalendarIcon, ChartBarIcon, CogIcon } from '@heroicons/react/outline';\nimport * as React from 'react';\nimport { FaInfo } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nimport { ENABLE_ARCHIVED_GAMES } from '../../constants/settings';\nimport { GAME_TITLE } from '../../constants/strings';\n\nexport const Navbar = ({\n    setIsInfoModalOpen,\n    setIsStatsModalOpen,\n    setIsDatePickerModalOpen,\n    setIsSettingsModalOpen,\n}) => {\n    return (\n        <div className=\"navbar\">\n            <div className=\"navbar-content px-5 short:h-auto\">\n                <div className=\"flex\">\n                    <FaInfo\n                        className=\"h-6 w-6 cursor-pointer dark:stroke-white\"\n                        onClick={() => setIsInfoModalOpen(true)}\n                    />\n                    {ENABLE_ARCHIVED_GAMES && (\n                        <CalendarIcon\n                            className=\"ml-3 h-6 w-6 cursor-pointer dark:stroke-white\"\n                            onClick={() => setIsDatePickerModalOpen(true)}\n                        />\n                    )}\n                </div>\n                <Link to=\"/Wgame\">\n                    <p className=\"text-xl font-bold dark:text-white\">\n                        {GAME_TITLE}\n                    </p>\n                </Link>\n\n                <div className=\"right-icons\">\n                    <ChartBarIcon\n                        className=\"mr-3 h-6 w-6 cursor-pointer dark:stroke-white\"\n                        onClick={() => setIsStatsModalOpen(true)}\n                    />\n                    <CogIcon\n                        className=\"h-6 w-6 cursor-pointer dark:stroke-white\"\n                        onClick={() => setIsSettingsModalOpen(true)}\n                    />\n                </div>\n            </div>\n            <hr></hr>\n        </div>\n    );\n};\n","import queryString from 'query-string';\nimport * as React from 'react';\nimport {  useState } from 'react';\nimport Div100vh from 'react-div-100vh';\nimport { default as GraphemeSplitter } from 'grapheme-splitter';\n\n// import { NewWord } from '../components/newWord/NewWord';\nimport { Navbar } from '../components/navbar/Navbar';\n\nimport {  GAME_COPIED_MESSAGE, SHARE_GAME_MODAL_WORD } from '../constants/strings';\n// import { useAlert } from '../context/AlertContext';\n// import { getStoredIsHighContrastMode } from '../lib/localStorage';\n// import { findFirstUnusedReveal, getIsLatestGame, isWinningWord, isWordInWordList, unicodeLength } from '../lib/words';\n// import { loadStats } from '../lib/stats';\n// import { ShareGameModal } from '../components/modals/ShareGameModal';\n// import { shareWord } from '../lib/shareWord';\n\nconst CreateGame = () => {\n    // let [searchParams, setSearchParams] = useSearchParams();\n    const [isInfoModalOpen, setIsInfoModalOpen] = useState(false);\n    const [isStatsModalOpen, setIsStatsModalOpen] = useState(false);\n    const [isShareGameModal, setIsShareGameModal] = useState(false);\n\n    const [isDatePickerModalOpen, setIsDatePickerModalOpen] = useState(false);\n    const [isSettingsModalOpen, setIsSettingsModalOpen] = useState(false);\n    const [isMigrateStatsModalOpen, setIsMigrateStatsModalOpen] = useState(false);\n    // const [isHighContrastMode, setIsHighContrastMode] = useState(getStoredIsHighContrastMode());\n    const prefersDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    // const [isDarkMode, setIsDarkMode] = useState(localStorage.getItem('theme')\n    // ? localStorage.getItem('theme') === 'dark'\n    // : prefersDarkMode\n    //     ? true\n    //     : false);\n    // const [isHardMode, setIsHardMode] = useState(localStorage.getItem('gameMode')\n    // ? localStorage.getItem('gameMode') === 'hard'\n    // : false);\n    //     const [guesses, setGuesses] = useState([])\n\n    // const [guesses, setGuesses] = useState(() => {\n    //     const loaded = loadGameStateFromLocalStorage(isLatestGame);\n    //     console.log('=====loaded===============================');\n        \n    //     console.log('====================================');\n    //     if (\n    //         (loaded === null || loaded === void 0\n    //             ? void 0\n    //             : loaded.solution) !== solution\n    //     ) {\n    //         return [];\n    //     }\n        // const gameWasWon = loaded.guesses.includes(solution);\n        // if (gameWasWon) {\n        //     setIsGameWon(true);\n        // }\n        // if (loaded.guesses.length === NEW_CHALLENGE && !gameWasWon) {\n        //     setIsGameLost(true);\n        //     showErrorAlert(CORRECT_WORD_MESSAGE(solution), {\n        //         persist: true,\n        //     });\n        // }\n        // return loaded.guesses;\n    // });\n    // const isLatestGame = getIsLatestGame();\n    // const [isGameWon, setIsGameWon] = useState(false);\n\n    // const [currentGuess, setCurrentGuess] = useState('');\n    // const [isRevealing, setIsRevealing] = useState(false);\n    // const [currentRowClass, setCurrentRowClass] = useState('');\n    // const [isGameLost, setIsGameLost] = useState(false);\n    // const [stats, setStats] = useState(() => loadStats());\n    // const {\n    //     showError: showErrorAlert,\n    //     showSuccess: showSuccessAlert,\n    // } = useAlert();\n\n    // const currentword = searchParams.get('currentword');\n    // const queryParams = queryString.parse(window);\n  //   const onChar = (value) => {\n   \n  //     if (unicodeLength(`${currentGuess}${value}`) <= 5 &&\n  //         guesses.length < MAX_CHALLENGES &&\n  //         !isGameWon) {\n\n  //         setCurrentGuess(`${currentGuess}${value}`);\n  //         setGuesses([...guesses, currentGuess]);\n       \n\n  //     }\n  // };\n//   const onDelete = () => {\n  \n//     setCurrentGuess(new GraphemeSplitter().splitGraphemes(currentGuess).slice(0, -1).join(''));\n//     setGuesses(new GraphemeSplitter().splitGraphemes(currentGuess).slice(0, -1).join(''));\n\n// };\n// const onEnter = () => {\n\n// if (currentGuess.length <5) {\n//   return;\n// }\n// setIsShareGameModal(true)\n//     // if (isGameWon || isGameLost) {\n//     //     return;\n//     // }\n//     // if (!(unicodeLength(currentGuess) === solution.length)) {\n//     //     setCurrentRowClass('jiggle');\n//     //     return showErrorAlert(NOT_ENOUGH_LETTERS_MESSAGE, {\n//     //         onClose: clearCurrentRowClass,\n//     //     });\n//     // }\n//     // if (!isWordInWordList(currentGuess)) {\n//     //     setCurrentRowClass('jiggle');\n//     //     return showErrorAlert(WORD_NOT_FOUND_MESSAGE, {\n//     //         onClose: clearCurrentRowClass,\n//     //     });\n//     // }\n//     // enforce hard mode - all guesses must contain all previously revealed letters\n//     // if (isHardMode) {\n//     //     const firstMissingReveal = findFirstUnusedReveal(currentGuess, guesses);\n//     //     if (firstMissingReveal) {\n//     //         setCurrentRowClass('jiggle');\n//     //         return showErrorAlert(firstMissingReveal, {\n//     //             onClose: clearCurrentRowClass,\n//     //         });\n//     //     }\n//     // }\n//     // setIsRevealing(true);\n//     // turn this back off after all\n//     // chars have been revealed\n//     // setTimeout(() => {\n//     //     setIsRevealing(false);\n//     // }, REVEAL_TIME_MS * solution.length);\n//     // const winningWord = isWinningWord(currentGuess);\n\n//     // if (unicodeLength(currentGuess) === solution.length &&\n//     //     guesses.length < NEW_CHALLENGE &&\n//     //     !isGameWon) {\n//           // console.log('===enter=================================');\n//           // console.log(currentGuess);\n//           // console.log('====================================');\n//         // setGuesses([...guesses, currentGuess]);\n//         // setCurrentGuess('');\n//         // if (winningWord) {\n//         //     if (isLatestGame) {\n//         //         setStats(addStatsForCompletedGame(stats, guesses.length));\n//         //     }\n//         //     return setIsGameWon(true);\n//         // }\n//         // if (guesses.length === NEW_CHALLENGE - 1) {\n//         //     if (isLatestGame) {\n//         //         setStats(addStatsForCompletedGame(stats, guesses.length + 1));\n//         //     }\n//         //     setIsGameLost(true);\n//         //     showErrorAlert(CORRECT_WORD_MESSAGE(solution), {\n//         //         persist: true,\n//         //         delayMs: REVEAL_TIME_MS * solution.length + 1,\n//         //     });\n//         // }\n//     // }\n// };\n// const clearCurrentRowClass = () => {\n//   setCurrentRowClass('');\n// };\n\n// const handleShare = () => {\n//   const baseURL = `http://ronengoren/wordle?currentword=${currentGuess}`\n//   // shareWord(solution, guesses, isGameLost, isHardMode, isDarkMode, isHighContrastMode, baseURL);\n//    shareWord(baseURL,handleShareFailure,handleShareToClipboard);\n\n// };\n\nconst handleShareFailure = () => {\nconsole.log('handleShareFailure');\n\n};\nconst handleShareToClipboard = () => {\n  \n//  console.log(showSuccessAlert(GAME_COPIED_MESSAGE));\n\n};\n\n    return (\n        <Div100vh>\n            <div className=\"flex h-full flex-col\">\n                <Navbar\n                    setIsInfoModalOpen={setIsInfoModalOpen}\n                    setIsStatsModalOpen={setIsStatsModalOpen}\n                    setIsDatePickerModalOpen={setIsDatePickerModalOpen}\n                    setIsSettingsModalOpen={setIsSettingsModalOpen}\n                />\n                <div className=\"mx-auto flex w-full grow flex-col px-1 pt-2 pb-8 sm:px-6 md:max-w-7xl lg:px-8 short:pb-2 short:pt-2\">\n\n                    <div className=\"flex grow flex-col justify-center pb-6 short:pb-2\">\n                        {/* <NewWord\n                            // solution={solution}\n                            guesses={guesses}\n                            currentGuess={currentGuess}\n                            // isRevealing={isRevealing}\n                            // currentRowClassName={currentRowClass}\n                        /> */}\n                         <div className=\"flex items-center justify-center mx-0.5 text-4xl font-bold rounded dark:text-white\">\n                                <p className=\"text-xl font-bold dark:text-white\">{SHARE_GAME_MODAL_WORD}</p>\n\n                                        </div>\n                    </div>\n                    {/* <CreateGameKeyboard \n                    onChar={onChar} \n                    onDelete={onDelete} \n                    onEnter={onEnter} \n                    // solution={solution} \n                    guesses={guesses} \n                    isRevealing={isRevealing}\n                    /> */}\n                     {/* <ShareGameModal \n                     isOpen={isShareGameModal} \n                     handleClose={() => setIsShareGameModal(false)} \n                     solution={currentGuess} \n                     guesses={guesses} \n                     gameStats={stats} \n                    //  isLatestGame={isLatestGame} \n                     isGameLost={isGameLost} \n                     isGameWon={isGameWon} \n                     handleShareToClipboard={() => showSuccessAlert(GAME_COPIED_MESSAGE)} \n                   \n\n                     handleShareFailure={() => handleShareFailure()} \n\n                    //  handleShareFailure={() => showErrorAlert(SHARE_FAILURE_TEXT, { durationMs: LONG_ALERT_TIME_MS,})} \n                    // handleShare={() => handleShare()} \n\n                    isHardMode={isHardMode} \n                    isDarkMode={isDarkMode} \n                    isHighContrastMode={isHighContrastMode} \n                    numberOfGuessesMade={guesses.length}\n                      /> */}\n                </div>\n                {/* <p>Value of location: {currentword}</p> */}\n            </div>\n        </Div100vh>\n    );\n};\n\nexport default CreateGame;\n","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport Div100vh from 'react-div-100vh';\nimport { Link } from 'react-router-dom';\nimport classnames from 'classnames';\n\nimport { Navbar } from '../components/navbar/Navbar';\n\nconst Home = () => {\n  console.log('=======Home49=============================');\n  const [isInfoModalOpen, setIsInfoModalOpen] = useState(false);\n  const [isStatsModalOpen, setIsStatsModalOpen] = useState(false);\n  const [isDatePickerModalOpen, setIsDatePickerModalOpen] = useState(false);\n  const [isSettingsModalOpen, setIsSettingsModalOpen] = useState(false);\n  const [sentWords, setSentWords] = useState([]);\n\n  const classes = classnames(\n    'xxshort:w-11 xxshort:h-11 short:text-2xl short:w-12 short:h-12 w-14 h-14 border-solid border-2 flex items-center justify-center mx-0.5 text-4xl font-bold rounded dark:text-white',\n    // {\n    //     'bg-white dark:bg-slate-900 border-slate-200 dark:border-slate-600': !status,\n    //     'border-black dark:border-slate-100': value && !status,\n    //     'absent shadowed bg-slate-400 dark:bg-slate-700 text-white border-slate-400 dark:border-slate-700':\n    //         status === 'absent',\n    //     'correct shadowed bg-orange-500 text-white border-orange-500':\n    //         status === 'correct' && isHighContrast,\n    //     'present shadowed bg-cyan-500 text-white border-cyan-500':\n    //         status === 'present' && isHighContrast,\n    //     'correct shadowed bg-green-500 text-white border-green-500':\n    //         status === 'correct' && !isHighContrast,\n    //     'present shadowed bg-yellow-500 text-white border-yellow-500':\n    //         status === 'present' && !isHighContrast,\n    //     'cell-fill-animation': isFilled,\n    //     'cell-reveal': shouldReveal,\n    // },\n  );\n\n  // useEffect(() => {\n  //   const wordArr = getNewWord()\n  //   if (wordArr) {\n  //     setSentWords(wordArr);\n\n  //   }\n\n  // }, []);\n  return (\n    <Div100vh>\n      <div className=\"flex h-full flex-col\">\n        <Navbar\n          setIsInfoModalOpen={setIsInfoModalOpen}\n          setIsStatsModalOpen={setIsStatsModalOpen}\n          setIsDatePickerModalOpen={setIsDatePickerModalOpen}\n          setIsSettingsModalOpen={setIsSettingsModalOpen}\n        />\n        <div className=\"flex justify-center\">\n          <Link to=\"/create_game\">\n\n            <button\n              // disabled={!isCopyButtonEnabled}\n              // onClick={copyEmigrationCodeToClipboard}\n              type=\"button\"\n              className=\"mt-2 inline-flex items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-left text-base font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 disabled:border-gray-200\n          disabled:bg-white disabled:text-gray-900 disabled:focus:outline-none disabled:dark:border-gray-600 disabled:dark:bg-gray-800 disabled:dark:text-gray-400 sm:text-sm\"\n            >\n           \n              Create New Game\n            </button>\n          </Link>\n        </div>\n        <div className=\"flex justify-center\">\n          <Link to=\"/user_wordles\">\n\n            <button\n              // disabled={!isCopyButtonEnabled}\n              // onClick={copyEmigrationCodeToClipboard}\n              type=\"button\"\n              className=\"mt-2 inline-flex items-center justify-center rounded-md border border-transparent bg-indigo-600 px-8 py-2 text-left text-base font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 disabled:border-gray-200\n          disabled:bg-white disabled:text-gray-900 disabled:focus:outline-none disabled:dark:border-gray-600 disabled:dark:bg-gray-800 disabled:dark:text-gray-400 sm:text-sm\"\n            >\n            \n              Your Wordles\n            </button>\n          </Link>\n        </div>\n       \n\n        <Link to={`/wordle`}>Wordsdsdlsdsde</Link>\n\n      </div>\n\n    </Div100vh>\n  );\n};\n\nexport default Home;\n","const gameStateKey = 'gameState';\nconst wordArrKey = 'wordArr';\n\nconst archiveGameStateKey = 'archiveGameState';\nconst highContrastKey = 'highContrast';\nexport const saveGameStateToLocalStorage = (isLatestGame, gameState) => {\n    const key = isLatestGame ? gameStateKey : archiveGameStateKey;\n    localStorage.setItem(key, JSON.stringify(gameState));\n};\nexport const loadGameStateFromLocalStorage = isLatestGame => {\n    const key = isLatestGame ? gameStateKey : archiveGameStateKey;\n    const state = localStorage.getItem(key);\n    return state ? JSON.parse(state) : null;\n};\nconst gameStatKey = 'gameStats';\nexport const saveStatsToLocalStorage = gameStats => {\n    localStorage.setItem(gameStatKey, JSON.stringify(gameStats));\n};\nexport const saveNewWord = newWord => {\n    let wordArr = JSON.parse(localStorage.getItem(wordArrKey)) || [];\n    wordArr.push(newWord);\n\n    localStorage.setItem(wordArrKey, JSON.stringify(wordArr));\n};\nexport const getNewWord = () => {\n    const newWord = JSON.parse(localStorage.getItem(wordArrKey)) || [];\n\n    return newWord;\n};\nexport const loadStatsFromLocalStorage = () => {\n    const stats = localStorage.getItem(gameStatKey);\n    return stats ? JSON.parse(stats) : null;\n};\nexport const setStoredIsHighContrastMode = isHighContrast => {\n    if (isHighContrast) {\n        localStorage.setItem(highContrastKey, '1');\n    } else {\n        localStorage.removeItem(highContrastKey);\n    }\n};\nexport const getStoredIsHighContrastMode = () => {\n    const highContrast = localStorage.getItem(highContrastKey);\n    return highContrast === '1';\n};\n","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport Div100vh from 'react-div-100vh';\nimport { Link } from 'react-router-dom';\nimport classnames from 'classnames';\n\n\nimport { Navbar } from '../components/navbar/Navbar';\n// import { unicodeSplit } from '../lib/words';\nimport { REVEAL_TIME_MS } from '../constants/settings';\nimport { getNewWord } from '../lib/localStorage';\n\nconst SharedWordls = () => {\n  const [isInfoModalOpen, setIsInfoModalOpen] = useState(false);\n  const [isStatsModalOpen, setIsStatsModalOpen] = useState(false);\n  const [isDatePickerModalOpen, setIsDatePickerModalOpen] = useState(false);\n  const [isSettingsModalOpen, setIsSettingsModalOpen] = useState(false);\n  const [sentWords, setSentWords] = useState([]);\n  // const splitGuess = unicodeSplit(guess);\n  const animationDelay = `${ 0 * REVEAL_TIME_MS }ms`;\n\n  const classes = classnames(\n    'xxshort:w-11 xxshort:h-11 short:text-2xl short:w-12 short:h-12 w-14 h-14 border-solid border-2 flex items-center justify-center mx-0.5 text-4xl font-bold rounded dark:text-white',\n    // {\n    //     'bg-white dark:bg-slate-900 border-slate-200 dark:border-slate-600': !status,\n    //     'border-black dark:border-slate-100': value && !status,\n    //     'absent shadowed bg-slate-400 dark:bg-slate-700 text-white border-slate-400 dark:border-slate-700':\n    //         status === 'absent',\n    //     'correct shadowed bg-orange-500 text-white border-orange-500':\n    //         status === 'correct' && isHighContrast,\n    //     'present shadowed bg-cyan-500 text-white border-cyan-500':\n    //         status === 'present' && isHighContrast,\n    //     'correct shadowed bg-green-500 text-white border-green-500':\n    //         status === 'correct' && !isHighContrast,\n    //     'present shadowed bg-yellow-500 text-white border-yellow-500':\n    //         status === 'present' && !isHighContrast,\n    //     'cell-fill-animation': isFilled,\n    //     'cell-reveal': shouldReveal,\n    // },\n  );\n\n  useEffect(() => {\n    const wordArr = getNewWord()\n    if (wordArr) {\n      setSentWords(wordArr);\n\n    }\n\n  }, []);\n  return (\n    <Div100vh>\n      <div className=\"flex h-full flex-col\">\n        <Navbar\n          setIsInfoModalOpen={setIsInfoModalOpen}\n          setIsStatsModalOpen={setIsStatsModalOpen}\n          setIsDatePickerModalOpen={setIsDatePickerModalOpen}\n          setIsSettingsModalOpen={setIsSettingsModalOpen}\n        />\n      \n        <div className=\"flex justify-center\">\n          <h1>Your Wordles:</h1>\n        </div>\n        {/* {sentWords ? sentWords.map((i =>\n          <div key={i} className=\"mx-auto flex pt-2 pb-8 sm:px-6 md:max-w-7xl lg:px-8 short:pb-2 short:pt-2\">\n            {unicodeSplit(i).map((letter, h) => <div\n              key={h}\n              className={classes}\n              style={{ animationDelay }}\n            > <div className=\"letter-container\" style={{ animationDelay }}> <h1>{letter}</h1> </div></div>)}\n\n\n          </div>)) : null} */}\n\n        {/* <Link to=\"/wordle\">Wordle</Link> */}\n\n      </div>\n\n    </Div100vh>\n  );\n};\n\nexport default SharedWordls;\n","import * as React from \"react\";\n\nimport { createContext, useCallback, useContext, useState } from \"react\";\nimport { ALERT_TIME_MS } from \"../constants/settings\";\nexport const AlertContext = createContext({\n  status: \"success\",\n  message: null,\n  isVisible: false,\n  showSuccess: () => null,\n  showError: () => null,\n});\nAlertContext.displayName = \"AlertContext\";\nexport const useAlert = () => useContext(AlertContext);\nexport const AlertProvider = ({ children }) => {\n  const [status, setStatus] = useState(\"success\");\n  const [message, setMessage] = useState(null);\n  const [isVisible, setIsVisible] = useState(false);\n  const show = useCallback(\n    (showStatus, newMessage, options) => {\n      const { delayMs = 0, persist, onClose, durationMs = ALERT_TIME_MS } =\n        options || {};\n      setTimeout(() => {\n        setStatus(showStatus);\n        setMessage(newMessage);\n        setIsVisible(true);\n        if (!persist) {\n          setTimeout(() => {\n            setIsVisible(false);\n            if (onClose) {\n              onClose();\n            }\n          }, durationMs);\n        }\n      }, delayMs);\n    },\n    [setStatus, setMessage, setIsVisible]\n  );\n  const showError = useCallback(\n    (newMessage, options) => {\n      show(\"error\", newMessage, options);\n    },\n    [show]\n  );\n  const showSuccess = useCallback(\n    (newMessage, options) => {\n      show(\"success\", newMessage, options);\n    },\n    [show]\n  );\n  return (\n    <AlertContext.Provider\n      value={{\n        status,\n        message,\n        isVisible,\n        showError,\n        showSuccess,\n      }}\n    >\n      {children}\n    </AlertContext.Provider>\n  );\n};\n","import * as React from \"react\";\nimport { Transition } from '@headlessui/react';\nimport classNames from 'classnames';\nimport { Fragment } from 'react';\nexport const Alert = ({ isOpen, message, variant = 'error', topMost = false, }) => {\n    const classes = classNames('fixed z-20 top-14 left-1/2 transform -translate-x-1/2 max-w-sm shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden', {\n        'bg-rose-500 text-white': variant === 'error',\n        'bg-blue-500 text-white': variant === 'success',\n    });\n    return (<Transition show={isOpen} as={Fragment} enter=\"ease-out duration-300 transition\" enterFrom=\"opacity-0\" enterTo=\"opacity-100\" leave=\"transition ease-in duration-100\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\n      <div className={classes}>\n        <div className=\"p-2\">\n          <p className=\"text-center text-sm font-medium\">{message}</p>\n        </div>\n      </div>\n    </Transition>);\n};","import * as React from \"react\";\nimport { useAlert } from '../../context/AlertContext';\nimport { Alert } from './Alert';\nexport const AlertContainer = () => {\n    const { message, status, isVisible } = useAlert();\n    return <Alert isOpen={isVisible} message={message || ''} variant={status}/>;\n};","// export const WORDS = ['ronen', 'goren', 'barbi', 'shelly'];\nexport const WORD = [];\n\nexport const WORDS = [\n  \"which\",\n  \"there\",\n  \"their\",\n  \"about\",\n  \"would\",\n  \"these\",\n  \"other\",\n  \"words\",\n  \"could\",\n  \"write\",\n  \"first\",\n  \"water\",\n  \"after\",\n  \"where\",\n  \"right\",\n  \"think\",\n  \"three\",\n  \"years\",\n  \"place\",\n  \"sound\",\n  \"great\",\n  \"again\",\n  \"still\",\n  \"every\",\n  \"small\",\n  \"found\",\n  \"those\",\n  \"never\",\n  \"under\",\n  \"might\",\n  \"while\",\n  \"house\",\n  \"world\",\n  \"below\",\n  \"asked\",\n  \"going\",\n  \"large\",\n  \"until\",\n  \"along\",\n  \"shall\",\n  \"being\",\n  \"often\",\n  \"earth\",\n  \"began\",\n  \"since\",\n  \"study\",\n  \"night\",\n  \"light\",\n  \"above\",\n  \"paper\",\n  \"parts\",\n  \"young\",\n  \"story\",\n  \"point\",\n  \"times\",\n  \"heard\",\n  \"whole\",\n  \"white\",\n  \"given\",\n  \"means\",\n  \"music\",\n  \"miles\",\n  \"thing\",\n  \"today\",\n  \"later\",\n  \"using\",\n  \"money\",\n  \"lines\",\n  \"order\",\n  \"group\",\n  \"among\",\n  \"learn\",\n  \"known\",\n  \"space\",\n  \"table\",\n  \"early\",\n  \"trees\",\n  \"short\",\n  \"hands\",\n  \"state\",\n  \"black\",\n  \"shown\",\n  \"stood\",\n  \"front\",\n  \"voice\",\n  \"kinds\",\n  \"makes\",\n  \"comes\",\n  \"close\",\n  \"power\",\n  \"lived\",\n  \"vowel\",\n  \"taken\",\n  \"built\",\n  \"heart\",\n  \"ready\",\n  \"quite\",\n  \"class\",\n  \"bring\",\n  \"round\",\n  \"horse\",\n  \"shows\",\n  \"piece\",\n  \"green\",\n  \"stand\",\n  \"birds\",\n  \"start\",\n  \"river\",\n  \"tried\",\n  \"least\",\n  \"field\",\n  \"whose\",\n  \"girls\",\n  \"leave\",\n  \"added\",\n  \"color\",\n  \"third\",\n  \"hours\",\n  \"moved\",\n  \"plant\",\n  \"doing\",\n  \"names\",\n  \"forms\",\n  \"heavy\",\n  \"ideas\",\n  \"cried\",\n  \"check\",\n  \"floor\",\n  \"begin\",\n  \"woman\",\n  \"alone\",\n  \"plane\",\n  \"spell\",\n  \"watch\",\n  \"carry\",\n  \"wrote\",\n  \"clear\",\n  \"named\",\n  \"books\",\n  \"child\",\n  \"glass\",\n  \"human\",\n  \"takes\",\n  \"party\",\n  \"build\",\n  \"seems\",\n  \"blood\",\n  \"sides\",\n  \"seven\",\n  \"mouth\",\n  \"solve\",\n  \"north\",\n  \"value\",\n  \"death\",\n  \"maybe\",\n  \"happy\",\n  \"tells\",\n  \"gives\",\n  \"looks\",\n  \"shape\",\n  \"lives\",\n  \"steps\",\n  \"areas\",\n  \"sense\",\n  \"speak\",\n  \"force\",\n  \"ocean\",\n  \"speed\",\n  \"women\",\n  \"metal\",\n  \"south\",\n  \"grass\",\n  \"scale\",\n  \"cells\",\n  \"lower\",\n  \"sleep\",\n  \"wrong\",\n  \"pages\",\n  \"ships\",\n  \"needs\",\n  \"rocks\",\n  \"eight\",\n  \"major\",\n  \"level\",\n  \"total\",\n  \"ahead\",\n  \"reach\",\n  \"stars\",\n  \"store\",\n  \"sight\",\n  \"terms\",\n  \"catch\",\n  \"works\",\n  \"board\",\n  \"cover\",\n  \"songs\",\n  \"equal\",\n  \"stone\",\n  \"waves\",\n  \"guess\",\n  \"dance\",\n  \"spoke\",\n  \"break\",\n  \"cause\",\n  \"radio\",\n  \"weeks\",\n  \"lands\",\n  \"basic\",\n  \"liked\",\n  \"trade\",\n  \"fresh\",\n  \"final\",\n  \"fight\",\n  \"meant\",\n  \"drive\",\n  \"spent\",\n  \"local\",\n  \"waxes\",\n  \"knows\",\n  \"train\",\n  \"bread\",\n  \"homes\",\n  \"teeth\",\n  \"coast\",\n  \"thick\",\n  \"brown\",\n  \"clean\",\n  \"quiet\",\n  \"sugar\",\n  \"facts\",\n  \"steel\",\n  \"forth\",\n  \"rules\",\n  \"notes\",\n  \"units\",\n  \"peace\",\n  \"month\",\n  \"verbs\",\n  \"seeds\",\n  \"helps\",\n  \"sharp\",\n  \"visit\",\n  \"woods\",\n  \"chief\",\n  \"walls\",\n  \"cross\",\n  \"wings\",\n  \"grown\",\n  \"cases\",\n  \"foods\",\n  \"crops\",\n  \"fruit\",\n  \"stick\",\n  \"wants\",\n  \"stage\",\n  \"sheep\",\n  \"nouns\",\n  \"plain\",\n  \"drink\",\n  \"bones\",\n  \"apart\",\n  \"turns\",\n  \"moves\",\n  \"touch\",\n  \"angle\",\n  \"based\",\n  \"range\",\n  \"marks\",\n  \"tired\",\n  \"older\",\n  \"farms\",\n  \"spend\",\n  \"shoes\",\n  \"goods\",\n  \"chair\",\n  \"twice\",\n  \"cents\",\n  \"empty\",\n  \"alike\",\n  \"style\",\n  \"broke\",\n  \"pairs\",\n  \"count\",\n  \"enjoy\",\n  \"score\",\n  \"shore\",\n  \"roots\",\n  \"paint\",\n  \"heads\",\n  \"shook\",\n  \"serve\",\n  \"angry\",\n  \"crowd\",\n  \"wheel\",\n  \"quick\",\n  \"dress\",\n  \"share\",\n  \"alive\",\n  \"noise\",\n  \"solid\",\n  \"cloth\",\n  \"signs\",\n  \"hills\",\n  \"types\",\n  \"drawn\",\n  \"worth\",\n  \"truck\",\n  \"piano\",\n  \"upper\",\n  \"loved\",\n  \"usual\",\n  \"faces\",\n  \"drove\",\n  \"cabin\",\n  \"boats\",\n  \"towns\",\n  \"proud\",\n  \"court\",\n  \"model\",\n  \"prime\",\n  \"fifty\",\n  \"plans\",\n  \"yards\",\n  \"prove\",\n  \"tools\",\n  \"price\",\n  \"sheet\",\n  \"smell\",\n  \"boxes\",\n  \"raise\",\n  \"match\",\n  \"truth\",\n  \"roads\",\n  \"threw\",\n  \"enemy\",\n  \"lunch\",\n  \"chart\",\n  \"scene\",\n  \"graph\",\n  \"doubt\",\n  \"guide\",\n  \"winds\",\n  \"block\",\n  \"grain\",\n  \"smoke\",\n  \"mixed\",\n  \"games\",\n  \"wagon\",\n  \"sweet\",\n  \"topic\",\n  \"extra\",\n  \"plate\",\n  \"title\",\n  \"knife\",\n  \"fence\",\n  \"falls\",\n  \"cloud\",\n  \"wheat\",\n  \"plays\",\n  \"enter\",\n  \"broad\",\n  \"steam\",\n  \"atoms\",\n  \"press\",\n  \"lying\",\n  \"basis\",\n  \"clock\",\n  \"taste\",\n  \"grows\",\n  \"thank\",\n  \"storm\",\n  \"agree\",\n  \"brain\",\n  \"track\",\n  \"smile\",\n  \"funny\",\n  \"beach\",\n  \"stock\",\n  \"hurry\",\n  \"saved\",\n  \"sorry\",\n  \"giant\",\n  \"trail\",\n  \"offer\",\n  \"ought\",\n  \"rough\",\n  \"daily\",\n  \"avoid\",\n  \"keeps\",\n  \"throw\",\n  \"allow\",\n  \"cream\",\n  \"laugh\",\n  \"edges\",\n  \"teach\",\n  \"frame\",\n  \"bells\",\n  \"dream\",\n  \"magic\",\n  \"occur\",\n  \"ended\",\n  \"chord\",\n  \"false\",\n  \"skill\",\n  \"holes\",\n  \"dozen\",\n  \"brave\",\n  \"apple\",\n  \"climb\",\n  \"outer\",\n  \"pitch\",\n  \"ruler\",\n  \"holds\",\n  \"fixed\",\n  \"costs\",\n  \"calls\",\n  \"blank\",\n  \"staff\",\n  \"labor\",\n  \"eaten\",\n  \"youth\",\n  \"tones\",\n  \"honor\",\n  \"globe\",\n  \"gases\",\n  \"doors\",\n  \"poles\",\n  \"loose\",\n  \"apply\",\n  \"tears\",\n  \"exact\",\n  \"brush\",\n  \"chest\",\n  \"layer\",\n  \"whale\",\n  \"minor\",\n  \"faith\",\n  \"tests\",\n  \"judge\",\n  \"items\",\n  \"worry\",\n  \"waste\",\n  \"hoped\",\n  \"strip\",\n  \"begun\",\n  \"aside\",\n  \"lakes\",\n  \"bound\",\n  \"depth\",\n  \"candy\",\n  \"event\",\n  \"worse\",\n  \"aware\",\n  \"shell\",\n  \"rooms\",\n  \"ranch\",\n  \"image\",\n  \"snake\",\n  \"aloud\",\n  \"dried\",\n  \"likes\",\n  \"motor\",\n  \"pound\",\n  \"knees\",\n  \"refer\",\n  \"fully\",\n  \"chain\",\n  \"shirt\",\n  \"flour\",\n  \"drops\",\n  \"spite\",\n  \"orbit\",\n  \"banks\",\n  \"shoot\",\n  \"curve\",\n  \"tribe\",\n  \"tight\",\n  \"blind\",\n  \"slept\",\n  \"shade\",\n  \"claim\",\n  \"flies\",\n  \"theme\",\n  \"queen\",\n  \"fifth\",\n  \"union\",\n  \"hence\",\n  \"straw\",\n  \"entry\",\n  \"issue\",\n  \"birth\",\n  \"feels\",\n  \"anger\",\n  \"brief\",\n  \"rhyme\",\n  \"glory\",\n  \"guard\",\n  \"flows\",\n  \"flesh\",\n  \"owned\",\n  \"trick\",\n  \"yours\",\n  \"sizes\",\n  \"noted\",\n  \"width\",\n  \"burst\",\n  \"route\",\n  \"lungs\",\n  \"uncle\",\n  \"bears\",\n  \"royal\",\n  \"kings\",\n  \"forty\",\n  \"trial\",\n  \"cards\",\n  \"brass\",\n  \"opera\",\n  \"chose\",\n  \"owner\",\n  \"vapor\",\n  \"beats\",\n  \"mouse\",\n  \"tough\",\n  \"wires\",\n  \"meter\",\n  \"tower\",\n  \"finds\",\n  \"inner\",\n  \"stuck\",\n  \"arrow\",\n  \"poems\",\n  \"label\",\n  \"swing\",\n  \"solar\",\n  \"truly\",\n  \"tense\",\n  \"beans\",\n  \"split\",\n  \"rises\",\n  \"weigh\",\n  \"hotel\",\n  \"stems\",\n  \"pride\",\n  \"swung\",\n  \"grade\",\n  \"digit\",\n  \"badly\",\n  \"boots\",\n  \"pilot\",\n  \"sales\",\n  \"swept\",\n  \"lucky\",\n  \"prize\",\n  \"stove\",\n  \"tubes\",\n  \"acres\",\n  \"wound\",\n  \"steep\",\n  \"slide\",\n  \"trunk\",\n  \"error\",\n  \"porch\",\n  \"slave\",\n  \"exist\",\n  \"faced\",\n  \"mines\",\n  \"marry\",\n  \"juice\",\n  \"raced\",\n  \"waved\",\n  \"goose\",\n  \"trust\",\n  \"fewer\",\n  \"favor\",\n  \"mills\",\n  \"views\",\n  \"joint\",\n  \"eager\",\n  \"spots\",\n  \"blend\",\n  \"rings\",\n  \"adult\",\n  \"index\",\n  \"nails\",\n  \"horns\",\n  \"balls\",\n  \"flame\",\n  \"rates\",\n  \"drill\",\n  \"trace\",\n  \"skins\",\n  \"waxed\",\n  \"seats\",\n  \"stuff\",\n  \"ratio\",\n  \"minds\",\n  \"dirty\",\n  \"silly\",\n  \"coins\",\n  \"hello\",\n  \"trips\",\n  \"leads\",\n  \"rifle\",\n  \"hopes\",\n  \"bases\",\n  \"shine\",\n  \"bench\",\n  \"moral\",\n  \"fires\",\n  \"meals\",\n  \"shake\",\n  \"shops\",\n  \"cycle\",\n  \"movie\",\n  \"slope\",\n  \"canoe\",\n  \"teams\",\n  \"folks\",\n  \"fired\",\n  \"bands\",\n  \"thumb\",\n  \"shout\",\n  \"canal\",\n  \"habit\",\n  \"reply\",\n  \"ruled\",\n  \"fever\",\n  \"crust\",\n  \"shelf\",\n  \"walks\",\n  \"midst\",\n  \"crack\",\n  \"print\",\n  \"tales\",\n  \"coach\",\n  \"stiff\",\n  \"flood\",\n  \"verse\",\n  \"awake\",\n  \"rocky\",\n  \"march\",\n  \"fault\",\n  \"swift\",\n  \"faint\",\n  \"civil\",\n  \"ghost\",\n  \"feast\",\n  \"blade\",\n  \"limit\",\n  \"germs\",\n  \"reads\",\n  \"ducks\",\n  \"dairy\",\n  \"worst\",\n  \"gifts\",\n  \"lists\",\n  \"stops\",\n  \"rapid\",\n  \"brick\",\n  \"claws\",\n  \"beads\",\n  \"beast\",\n  \"skirt\",\n  \"cakes\",\n  \"lions\",\n  \"frogs\",\n  \"tries\",\n  \"nerve\",\n  \"grand\",\n  \"armed\",\n  \"treat\",\n  \"honey\",\n  \"moist\",\n  \"legal\",\n  \"penny\",\n  \"crown\",\n  \"shock\",\n  \"taxes\",\n  \"sixty\",\n  \"altar\",\n  \"pulls\",\n  \"sport\",\n  \"drums\",\n  \"talks\",\n  \"dying\",\n  \"dates\",\n  \"drank\",\n  \"blows\",\n  \"lever\",\n  \"wages\",\n  \"proof\",\n  \"drugs\",\n  \"tanks\",\n  \"sings\",\n  \"tails\",\n  \"pause\",\n  \"herds\",\n  \"arose\",\n  \"hated\",\n  \"clues\",\n  \"novel\",\n  \"shame\",\n  \"burnt\",\n  \"races\",\n  \"flash\",\n  \"weary\",\n  \"heels\",\n  \"token\",\n  \"coats\",\n  \"spare\",\n  \"shiny\",\n  \"alarm\",\n  \"dimes\",\n  \"sixth\",\n  \"clerk\",\n  \"mercy\",\n  \"sunny\",\n  \"guest\",\n  \"float\",\n  \"shone\",\n  \"pipes\",\n  \"worms\",\n  \"bills\",\n  \"sweat\",\n  \"suits\",\n  \"smart\",\n  \"upset\",\n  \"rains\",\n  \"sandy\",\n  \"rainy\",\n  \"parks\",\n  \"sadly\",\n  \"fancy\",\n  \"rider\",\n  \"unity\",\n  \"bunch\",\n  \"rolls\",\n  \"crash\",\n  \"craft\",\n  \"newly\",\n  \"gates\",\n  \"hatch\",\n  \"paths\",\n  \"funds\",\n  \"wider\",\n  \"grace\",\n  \"grave\",\n  \"tides\",\n  \"admit\",\n  \"shift\",\n  \"sails\",\n  \"pupil\",\n  \"tiger\",\n  \"angel\",\n  \"cruel\",\n  \"agent\",\n  \"drama\",\n  \"urged\",\n  \"patch\",\n  \"nests\",\n  \"vital\",\n  \"sword\",\n  \"blame\",\n  \"weeds\",\n  \"screw\",\n  \"vocal\",\n  \"bacon\",\n  \"chalk\",\n  \"cargo\",\n  \"crazy\",\n  \"acted\",\n  \"goats\",\n  \"arise\",\n  \"witch\",\n  \"loves\",\n  \"queer\",\n  \"dwell\",\n  \"backs\",\n  \"ropes\",\n  \"shots\",\n  \"merry\",\n  \"phone\",\n  \"cheek\",\n  \"peaks\",\n  \"ideal\",\n  \"beard\",\n  \"eagle\",\n  \"creek\",\n  \"cries\",\n  \"ashes\",\n  \"stall\",\n  \"yield\",\n  \"mayor\",\n  \"opens\",\n  \"input\",\n  \"fleet\",\n  \"tooth\",\n  \"cubic\",\n  \"wives\",\n  \"burns\",\n  \"poets\",\n  \"apron\",\n  \"spear\",\n  \"organ\",\n  \"cliff\",\n  \"stamp\",\n  \"paste\",\n  \"rural\",\n  \"baked\",\n  \"chase\",\n  \"slice\",\n  \"slant\",\n  \"knock\",\n  \"noisy\",\n  \"sorts\",\n  \"stays\",\n  \"wiped\",\n  \"blown\",\n  \"piled\",\n  \"clubs\",\n  \"cheer\",\n  \"widow\",\n  \"twist\",\n  \"tenth\",\n  \"hides\",\n  \"comma\",\n  \"sweep\",\n  \"spoon\",\n  \"stern\",\n  \"crept\",\n  \"maple\",\n  \"deeds\",\n  \"rides\",\n  \"muddy\",\n  \"crime\",\n  \"jelly\",\n  \"ridge\",\n  \"drift\",\n  \"dusty\",\n  \"devil\",\n  \"tempo\",\n  \"humor\",\n  \"sends\",\n  \"steal\",\n  \"tents\",\n  \"waist\",\n  \"roses\",\n  \"reign\",\n  \"noble\",\n  \"cheap\",\n  \"dense\",\n  \"linen\",\n  \"geese\",\n  \"woven\",\n  \"posts\",\n  \"hired\",\n  \"wrath\",\n  \"salad\",\n  \"bowed\",\n  \"tires\",\n  \"shark\",\n  \"belts\",\n  \"grasp\",\n  \"blast\",\n  \"polar\",\n  \"fungi\",\n  \"tends\",\n  \"pearl\",\n  \"loads\",\n  \"jokes\",\n  \"veins\",\n  \"frost\",\n  \"hears\",\n  \"loses\",\n  \"hosts\",\n  \"diver\",\n  \"phase\",\n  \"toads\",\n  \"alert\",\n  \"tasks\",\n  \"seams\",\n  \"coral\",\n  \"focus\",\n  \"naked\",\n  \"puppy\",\n  \"jumps\",\n  \"spoil\",\n  \"quart\",\n  \"macro\",\n  \"fears\",\n  \"flung\",\n  \"spark\",\n  \"vivid\",\n  \"brook\",\n  \"steer\",\n  \"spray\",\n  \"decay\",\n  \"ports\",\n  \"socks\",\n  \"urban\",\n  \"goals\",\n  \"grant\",\n  \"minus\",\n  \"films\",\n  \"tunes\",\n  \"shaft\",\n  \"firms\",\n  \"skies\",\n  \"bride\",\n  \"wreck\",\n  \"flock\",\n  \"stare\",\n  \"hobby\",\n  \"bonds\",\n  \"dared\",\n  \"faded\",\n  \"thief\",\n  \"crude\",\n  \"pants\",\n  \"flute\",\n  \"votes\",\n  \"tonal\",\n  \"radar\",\n  \"wells\",\n  \"skull\",\n  \"hairs\",\n  \"argue\",\n  \"wears\",\n  \"dolls\",\n  \"voted\",\n  \"caves\",\n  \"cared\",\n  \"broom\",\n  \"scent\",\n  \"panel\",\n  \"fairy\",\n  \"olive\",\n  \"bends\",\n  \"prism\",\n  \"lamps\",\n  \"cable\",\n  \"peach\",\n  \"ruins\",\n  \"rally\",\n  \"schwa\",\n  \"lambs\",\n  \"sells\",\n  \"cools\",\n  \"draft\",\n  \"charm\",\n  \"limbs\",\n  \"brake\",\n  \"gazed\",\n  \"cubes\",\n  \"delay\",\n  \"beams\",\n  \"fetch\",\n  \"ranks\",\n  \"array\",\n  \"harsh\",\n  \"camel\",\n  \"vines\",\n  \"picks\",\n  \"naval\",\n  \"purse\",\n  \"rigid\",\n  \"crawl\",\n  \"toast\",\n  \"soils\",\n  \"sauce\",\n  \"basin\",\n  \"ponds\",\n  \"twins\",\n  \"wrist\",\n  \"fluid\",\n  \"pools\",\n  \"brand\",\n  \"stalk\",\n  \"robot\",\n  \"reeds\",\n  \"hoofs\",\n  \"buses\",\n  \"sheer\",\n  \"grief\",\n  \"bloom\",\n  \"dwelt\",\n  \"melts\",\n  \"risen\",\n  \"flags\",\n  \"knelt\",\n  \"fiber\",\n  \"roofs\",\n  \"freed\",\n  \"armor\",\n  \"piles\",\n  \"aimed\",\n  \"algae\",\n  \"twigs\",\n  \"lemon\",\n  \"ditch\",\n  \"drunk\",\n  \"rests\",\n  \"chill\",\n  \"slain\",\n  \"panic\",\n  \"cords\",\n  \"tuned\",\n  \"crisp\",\n  \"ledge\",\n  \"dived\",\n  \"swamp\",\n  \"clung\",\n  \"stole\",\n  \"molds\",\n  \"yarns\",\n  \"liver\",\n  \"gauge\",\n  \"breed\",\n  \"stool\",\n  \"gulls\",\n  \"awoke\",\n  \"gross\",\n  \"diary\",\n  \"rails\",\n  \"belly\",\n  \"trend\",\n  \"flask\",\n  \"stake\",\n  \"fried\",\n  \"draws\",\n  \"actor\",\n  \"handy\",\n  \"bowls\",\n  \"haste\",\n  \"scope\",\n  \"deals\",\n  \"knots\",\n  \"moons\",\n  \"essay\",\n  \"thump\",\n  \"hangs\",\n  \"bliss\",\n  \"dealt\",\n  \"gains\",\n  \"bombs\",\n  \"clown\",\n  \"palms\",\n  \"cones\",\n  \"roast\",\n  \"tidal\",\n  \"bored\",\n  \"chant\",\n  \"acids\",\n  \"dough\",\n  \"camps\",\n  \"swore\",\n  \"lover\",\n  \"hooks\",\n  \"males\",\n  \"cocoa\",\n  \"punch\",\n  \"award\",\n  \"reins\",\n  \"ninth\",\n  \"noses\",\n  \"links\",\n  \"drain\",\n  \"fills\",\n  \"nylon\",\n  \"lunar\",\n  \"pulse\",\n  \"flown\",\n  \"elbow\",\n  \"fatal\",\n  \"sites\",\n  \"moths\",\n  \"meats\",\n  \"foxes\",\n  \"mined\",\n  \"attic\",\n  \"fiery\",\n  \"mount\",\n  \"usage\",\n  \"swear\",\n  \"snowy\",\n  \"rusty\",\n  \"scare\",\n  \"traps\",\n  \"relax\",\n  \"react\",\n  \"valid\",\n  \"robin\",\n  \"cease\",\n  \"gills\",\n  \"prior\",\n  \"safer\",\n  \"polio\",\n  \"loyal\",\n  \"swell\",\n  \"salty\",\n  \"marsh\",\n  \"vague\",\n  \"weave\",\n  \"mound\",\n  \"seals\",\n  \"mules\",\n  \"virus\",\n  \"scout\",\n  \"acute\",\n  \"windy\",\n  \"stout\",\n  \"folds\",\n  \"seize\",\n  \"hilly\",\n  \"joins\",\n  \"pluck\",\n  \"stack\",\n  \"lords\",\n  \"dunes\",\n  \"burro\",\n  \"hawks\",\n  \"trout\",\n  \"feeds\",\n  \"scarf\",\n  \"halls\",\n  \"coals\",\n  \"towel\",\n  \"souls\",\n  \"elect\",\n  \"buggy\",\n  \"pumps\",\n  \"loans\",\n  \"spins\",\n  \"files\",\n  \"oxide\",\n  \"pains\",\n  \"photo\",\n  \"rival\",\n  \"flats\",\n  \"syrup\",\n  \"rodeo\",\n  \"sands\",\n  \"moose\",\n  \"pints\",\n  \"curly\",\n  \"comic\",\n  \"cloak\",\n  \"onion\",\n  \"clams\",\n  \"scrap\",\n  \"didst\",\n  \"couch\",\n  \"codes\",\n  \"fails\",\n  \"ounce\",\n  \"lodge\",\n  \"greet\",\n  \"gypsy\",\n  \"utter\",\n  \"paved\",\n  \"zones\",\n  \"fours\",\n  \"alley\",\n  \"tiles\",\n  \"bless\",\n  \"crest\",\n  \"elder\",\n  \"kills\",\n  \"yeast\",\n  \"erect\",\n  \"bugle\",\n  \"medal\",\n  \"roles\",\n  \"hound\",\n  \"snail\",\n  \"alter\",\n  \"ankle\",\n  \"relay\",\n  \"loops\",\n  \"zeros\",\n  \"bites\",\n  \"modes\",\n  \"debts\",\n  \"realm\",\n  \"glove\",\n  \"rayon\",\n  \"swims\",\n  \"poked\",\n  \"stray\",\n  \"lifts\",\n  \"maker\",\n  \"lumps\",\n  \"graze\",\n  \"dread\",\n  \"barns\",\n  \"docks\",\n  \"masts\",\n  \"pours\",\n  \"wharf\",\n  \"curse\",\n  \"plump\",\n  \"robes\",\n  \"seeks\",\n  \"cedar\",\n  \"curls\",\n  \"jolly\",\n  \"myths\",\n  \"cages\",\n  \"gloom\",\n  \"locks\",\n  \"pedal\",\n  \"beets\",\n  \"crows\",\n  \"anode\",\n  \"slash\",\n  \"creep\",\n  \"rowed\",\n  \"chips\",\n  \"fists\",\n  \"wines\",\n  \"cares\",\n  \"valve\",\n  \"newer\",\n  \"motel\",\n  \"ivory\",\n  \"necks\",\n  \"clamp\",\n  \"barge\",\n  \"blues\",\n  \"alien\",\n  \"frown\",\n  \"strap\",\n  \"crews\",\n  \"shack\",\n  \"gonna\",\n  \"saves\",\n  \"stump\",\n  \"ferry\",\n  \"idols\",\n  \"cooks\",\n  \"juicy\",\n  \"glare\",\n  \"carts\",\n  \"alloy\",\n  \"bulbs\",\n  \"lawns\",\n  \"lasts\",\n  \"fuels\",\n  \"oddly\",\n  \"crane\",\n  \"filed\",\n  \"weird\",\n  \"shawl\",\n  \"slips\",\n  \"troop\",\n  \"bolts\",\n  \"suite\",\n  \"sleek\",\n  \"quilt\",\n  \"tramp\",\n  \"blaze\",\n  \"atlas\",\n  \"odors\",\n  \"scrub\",\n  \"crabs\",\n  \"probe\",\n  \"logic\",\n  \"adobe\",\n  \"exile\",\n  \"rebel\",\n  \"grind\",\n  \"sting\",\n  \"spine\",\n  \"cling\",\n  \"desks\",\n  \"grove\",\n  \"leaps\",\n  \"prose\",\n  \"lofty\",\n  \"agony\",\n  \"snare\",\n  \"tusks\",\n  \"bulls\",\n  \"moods\",\n  \"humid\",\n  \"finer\",\n  \"dimly\",\n  \"plank\",\n  \"china\",\n  \"pines\",\n  \"guilt\",\n  \"sacks\",\n  \"brace\",\n  \"quote\",\n  \"lathe\",\n  \"gaily\",\n  \"fonts\",\n  \"scalp\",\n  \"adopt\",\n  \"foggy\",\n  \"ferns\",\n  \"grams\",\n  \"clump\",\n  \"perch\",\n  \"tumor\",\n  \"teens\",\n  \"crank\",\n  \"fable\",\n  \"hedge\",\n  \"genes\",\n  \"sober\",\n  \"boast\",\n  \"tract\",\n  \"cigar\",\n  \"unite\",\n  \"owing\",\n  \"thigh\",\n  \"haiku\",\n  \"swish\",\n  \"dikes\",\n  \"wedge\",\n  \"booth\",\n  \"eased\",\n  \"frail\",\n  \"cough\",\n  \"tombs\",\n  \"darts\",\n  \"forts\",\n  \"choir\",\n  \"pouch\",\n  \"pinch\",\n  \"hairy\",\n  \"buyer\",\n  \"torch\",\n  \"vigor\",\n  \"waltz\",\n  \"heats\",\n  \"herbs\",\n  \"users\",\n  \"flint\",\n  \"click\",\n  \"madam\",\n  \"bleak\",\n  \"blunt\",\n  \"aided\",\n  \"lacks\",\n  \"masks\",\n  \"waded\",\n  \"risks\",\n  \"nurse\",\n  \"chaos\",\n  \"sewed\",\n  \"cured\",\n  \"ample\",\n  \"lease\",\n  \"steak\",\n  \"sinks\",\n  \"merit\",\n  \"bluff\",\n  \"bathe\",\n  \"gleam\",\n  \"bonus\",\n  \"colts\",\n  \"shear\",\n  \"gland\",\n  \"silky\",\n  \"skate\",\n  \"birch\",\n  \"anvil\",\n  \"sleds\",\n  \"groan\",\n  \"maids\",\n  \"meets\",\n  \"speck\",\n  \"hymns\",\n  \"hints\",\n  \"drown\",\n  \"bosom\",\n  \"slick\",\n  \"quest\",\n  \"coils\",\n  \"spied\",\n  \"snows\",\n  \"stead\",\n  \"snack\",\n  \"plows\",\n  \"blond\",\n  \"tamed\",\n  \"thorn\",\n  \"waits\",\n  \"glued\",\n  \"banjo\",\n  \"tease\",\n  \"arena\",\n  \"bulky\",\n  \"carve\",\n  \"stunt\",\n  \"warms\",\n  \"shady\",\n  \"razor\",\n  \"folly\",\n  \"leafy\",\n  \"notch\",\n  \"fools\",\n  \"otter\",\n  \"pears\",\n  \"flush\",\n  \"genus\",\n  \"ached\",\n  \"fives\",\n  \"flaps\",\n  \"spout\",\n  \"smote\",\n  \"fumes\",\n  \"adapt\",\n  \"cuffs\",\n  \"tasty\",\n  \"stoop\",\n  \"clips\",\n  \"disks\",\n  \"sniff\",\n  \"lanes\",\n  \"brisk\",\n  \"imply\",\n  \"demon\",\n  \"super\",\n  \"furry\",\n  \"raged\",\n  \"growl\",\n  \"texts\",\n  \"hardy\",\n  \"stung\",\n  \"typed\",\n  \"hates\",\n  \"wiser\",\n  \"timid\",\n  \"serum\",\n  \"beaks\",\n  \"rotor\",\n  \"casts\",\n  \"baths\",\n  \"glide\",\n  \"plots\",\n  \"trait\",\n  \"resin\",\n  \"slums\",\n  \"lyric\",\n  \"puffs\",\n  \"decks\",\n  \"brood\",\n  \"mourn\",\n  \"aloft\",\n  \"abuse\",\n  \"whirl\",\n  \"edged\",\n  \"ovary\",\n  \"quack\",\n  \"heaps\",\n  \"slang\",\n  \"await\",\n  \"civic\",\n  \"saint\",\n  \"bevel\",\n  \"sonar\",\n  \"aunts\",\n  \"packs\",\n  \"froze\",\n  \"tonic\",\n  \"corps\",\n  \"swarm\",\n  \"frank\",\n  \"repay\",\n  \"gaunt\",\n  \"wired\",\n  \"niece\",\n  \"cello\",\n  \"needy\",\n  \"chuck\",\n  \"stony\",\n  \"media\",\n  \"surge\",\n  \"hurts\",\n  \"repel\",\n  \"husky\",\n  \"dated\",\n  \"hunts\",\n  \"mists\",\n  \"exert\",\n  \"dries\",\n  \"mates\",\n  \"sworn\",\n  \"baker\",\n  \"spice\",\n  \"oasis\",\n  \"boils\",\n  \"spurs\",\n  \"doves\",\n  \"sneak\",\n  \"paces\",\n  \"colon\",\n  \"siege\",\n  \"strum\",\n  \"drier\",\n  \"cacao\",\n  \"humus\",\n  \"bales\",\n  \"piped\",\n  \"nasty\",\n  \"rinse\",\n  \"boxer\",\n  \"shrub\",\n  \"amuse\",\n  \"tacks\",\n  \"cited\",\n  \"slung\",\n  \"delta\",\n  \"laden\",\n  \"larva\",\n  \"rents\",\n  \"yells\",\n  \"spool\",\n  \"spill\",\n  \"crush\",\n  \"jewel\",\n  \"snaps\",\n  \"stain\",\n  \"kicks\",\n  \"tying\",\n  \"slits\",\n  \"rated\",\n  \"eerie\",\n  \"smash\",\n  \"plums\",\n  \"zebra\",\n  \"earns\",\n  \"bushy\",\n  \"scary\",\n  \"squad\",\n  \"tutor\",\n  \"silks\",\n  \"slabs\",\n  \"bumps\",\n  \"evils\",\n  \"fangs\",\n  \"snout\",\n  \"peril\",\n  \"pivot\",\n  \"yacht\",\n  \"lobby\",\n  \"jeans\",\n  \"grins\",\n  \"viola\",\n  \"liner\",\n  \"comet\",\n  \"scars\",\n  \"chops\",\n  \"raids\",\n  \"eater\",\n  \"slate\",\n  \"skips\",\n  \"soles\",\n  \"misty\",\n  \"urine\",\n  \"knobs\",\n  \"sleet\",\n  \"holly\",\n  \"pests\",\n  \"forks\",\n  \"grill\",\n  \"trays\",\n  \"pails\",\n  \"borne\",\n  \"tenor\",\n  \"wares\",\n  \"carol\",\n  \"woody\",\n  \"canon\",\n  \"wakes\",\n  \"kitty\",\n  \"miner\",\n  \"polls\",\n  \"shaky\",\n  \"nasal\",\n  \"scorn\",\n  \"chess\",\n  \"taxis\",\n  \"crate\",\n  \"shyly\",\n  \"tulip\",\n  \"forge\",\n  \"nymph\",\n  \"budge\",\n  \"lowly\",\n  \"abide\",\n  \"depot\",\n  \"oases\",\n  \"asses\",\n  \"sheds\",\n  \"fudge\",\n  \"pills\",\n  \"rivet\",\n  \"thine\",\n  \"groom\",\n  \"lanky\",\n  \"boost\",\n  \"broth\",\n  \"heave\",\n  \"gravy\",\n  \"beech\",\n  \"timed\",\n  \"quail\",\n  \"inert\",\n  \"gears\",\n  \"chick\",\n  \"hinge\",\n  \"trash\",\n  \"clash\",\n  \"sighs\",\n  \"renew\",\n  \"bough\",\n  \"dwarf\",\n  \"slows\",\n  \"quill\",\n  \"shave\",\n  \"spore\",\n  \"sixes\",\n  \"chunk\",\n  \"madly\",\n  \"paced\",\n  \"braid\",\n  \"fuzzy\",\n  \"motto\",\n  \"spies\",\n  \"slack\",\n  \"mucus\",\n  \"magma\",\n  \"awful\",\n  \"discs\",\n  \"erase\",\n  \"posed\",\n  \"asset\",\n  \"cider\",\n  \"taper\",\n  \"theft\",\n  \"churn\",\n  \"satin\",\n  \"slots\",\n  \"taxed\",\n  \"bully\",\n  \"sloth\",\n  \"shale\",\n  \"tread\",\n  \"raked\",\n  \"curds\",\n  \"manor\",\n  \"aisle\",\n  \"bulge\",\n  \"loins\",\n  \"stair\",\n  \"tapes\",\n  \"leans\",\n  \"bunks\",\n  \"squat\",\n  \"towed\",\n  \"lance\",\n  \"panes\",\n  \"sakes\",\n  \"heirs\",\n  \"caste\",\n  \"dummy\",\n  \"pores\",\n  \"fauna\",\n  \"crook\",\n  \"poise\",\n  \"epoch\",\n  \"risky\",\n  \"warns\",\n  \"fling\",\n  \"berry\",\n  \"grape\",\n  \"flank\",\n  \"drags\",\n  \"squid\",\n  \"pelts\",\n  \"icing\",\n  \"irony\",\n  \"irons\",\n  \"barks\",\n  \"whoop\",\n  \"choke\",\n  \"diets\",\n  \"whips\",\n  \"tally\",\n  \"dozed\",\n  \"twine\",\n  \"kites\",\n  \"bikes\",\n  \"ticks\",\n  \"riots\",\n  \"roars\",\n  \"vault\",\n  \"looms\",\n  \"scold\",\n  \"blink\",\n  \"dandy\",\n  \"pupae\",\n  \"sieve\",\n  \"spike\",\n  \"ducts\",\n  \"lends\",\n  \"pizza\",\n  \"brink\",\n  \"widen\",\n  \"plumb\",\n  \"pagan\",\n  \"feats\",\n  \"bison\",\n  \"soggy\",\n  \"scoop\",\n  \"argon\",\n  \"nudge\",\n  \"skiff\",\n  \"amber\",\n  \"sexes\",\n  \"rouse\",\n  \"salts\",\n  \"hitch\",\n  \"exalt\",\n  \"leash\",\n  \"dined\",\n  \"chute\",\n  \"snort\",\n  \"gusts\",\n  \"melon\",\n  \"cheat\",\n  \"reefs\",\n  \"llama\",\n  \"lasso\",\n  \"debut\",\n  \"quota\",\n  \"oaths\",\n  \"prone\",\n  \"mixes\",\n  \"rafts\",\n  \"dives\",\n  \"stale\",\n  \"inlet\",\n  \"flick\",\n  \"pinto\",\n  \"brows\",\n  \"untie\",\n  \"batch\",\n  \"greed\",\n  \"chore\",\n  \"stirs\",\n  \"blush\",\n  \"onset\",\n  \"barbs\",\n  \"volts\",\n  \"beige\",\n  \"swoop\",\n  \"paddy\",\n  \"laced\",\n  \"shove\",\n  \"jerky\",\n  \"poppy\",\n  \"leaks\",\n  \"fares\",\n  \"dodge\",\n  \"godly\",\n  \"squaw\",\n  \"affix\",\n  \"brute\",\n  \"nicer\",\n  \"undue\",\n  \"snarl\",\n  \"merge\",\n  \"doses\",\n  \"showy\",\n  \"daddy\",\n  \"roost\",\n  \"vases\",\n  \"swirl\",\n  \"petty\",\n  \"colds\",\n  \"curry\",\n  \"cobra\",\n  \"genie\",\n  \"flare\",\n  \"messy\",\n  \"cores\",\n  \"soaks\",\n  \"ripen\",\n  \"whine\",\n  \"amino\",\n  \"plaid\",\n  \"spiny\",\n  \"mowed\",\n  \"baton\",\n  \"peers\",\n  \"vowed\",\n  \"pious\",\n  \"swans\",\n  \"exits\",\n  \"afoot\",\n  \"plugs\",\n  \"idiom\",\n  \"chili\",\n  \"rites\",\n  \"serfs\",\n  \"cleft\",\n  \"berth\",\n  \"grubs\",\n  \"annex\",\n  \"dizzy\",\n  \"hasty\",\n  \"latch\",\n  \"wasps\",\n  \"mirth\",\n  \"baron\",\n  \"plead\",\n  \"aloof\",\n  \"aging\",\n  \"pixel\",\n  \"bared\",\n  \"mummy\",\n  \"hotly\",\n  \"auger\",\n  \"buddy\",\n  \"chaps\",\n  \"badge\",\n  \"stark\",\n  \"fairs\",\n  \"gully\",\n  \"mumps\",\n  \"emery\",\n  \"filly\",\n  \"ovens\",\n  \"drone\",\n  \"gauze\",\n  \"idiot\",\n  \"fussy\",\n  \"annoy\",\n  \"shank\",\n  \"gouge\",\n  \"bleed\",\n  \"elves\",\n  \"roped\",\n  \"unfit\",\n  \"baggy\",\n  \"mower\",\n  \"scant\",\n  \"grabs\",\n  \"fleas\",\n  \"lousy\",\n  \"album\",\n  \"sawed\",\n  \"cooky\",\n  \"murky\",\n  \"infer\",\n  \"burly\",\n  \"waged\",\n  \"dingy\",\n  \"brine\",\n  \"kneel\",\n  \"creak\",\n  \"vanes\",\n  \"smoky\",\n  \"spurt\",\n  \"combs\",\n  \"easel\",\n  \"laces\",\n  \"humps\",\n  \"rumor\",\n  \"aroma\",\n  \"horde\",\n  \"swiss\",\n  \"leapt\",\n  \"opium\",\n  \"slime\",\n  \"afire\",\n  \"pansy\",\n  \"mares\",\n  \"soaps\",\n  \"husks\",\n  \"snips\",\n  \"hazel\",\n  \"lined\",\n  \"cafes\",\n  \"naive\",\n  \"wraps\",\n  \"sized\",\n  \"piers\",\n  \"beset\",\n  \"agile\",\n  \"tongs\",\n  \"steed\",\n  \"fraud\",\n  \"booty\",\n  \"valor\",\n  \"downy\",\n  \"witty\",\n  \"mossy\",\n  \"psalm\",\n  \"scuba\",\n  \"tours\",\n  \"polka\",\n  \"milky\",\n  \"gaudy\",\n  \"shrug\",\n  \"tufts\",\n  \"wilds\",\n  \"laser\",\n  \"truss\",\n  \"hares\",\n  \"creed\",\n  \"lilac\",\n  \"siren\",\n  \"tarry\",\n  \"bribe\",\n  \"swine\",\n  \"muted\",\n  \"flips\",\n  \"cures\",\n  \"sinew\",\n  \"boxed\",\n  \"hoops\",\n  \"gasps\",\n  \"hoods\",\n  \"niche\",\n  \"yucca\",\n  \"glows\",\n  \"sewer\",\n  \"whack\",\n  \"fuses\",\n  \"gowns\",\n  \"droop\",\n  \"bucks\",\n  \"pangs\",\n  \"mails\",\n  \"whisk\",\n  \"haven\",\n  \"clasp\",\n  \"sling\",\n  \"stint\",\n  \"urges\",\n  \"champ\",\n  \"piety\",\n  \"chirp\",\n  \"pleat\",\n  \"posse\",\n  \"sunup\",\n  \"menus\",\n  \"howls\",\n  \"quake\",\n  \"knack\",\n  \"plaza\",\n  \"fiend\",\n  \"caked\",\n  \"bangs\",\n  \"erupt\",\n  \"poker\",\n  \"olden\",\n  \"cramp\",\n  \"voter\",\n  \"poses\",\n  \"manly\",\n  \"slump\",\n  \"fined\",\n  \"grips\",\n  \"gaped\",\n  \"purge\",\n  \"hiked\",\n  \"maize\",\n  \"fluff\",\n  \"strut\",\n  \"sloop\",\n  \"prowl\",\n  \"roach\",\n  \"cocks\",\n  \"bland\",\n  \"dials\",\n  \"plume\",\n  \"slaps\",\n  \"soups\",\n  \"dully\",\n  \"wills\",\n  \"foams\",\n  \"solos\",\n  \"skier\",\n  \"eaves\",\n  \"totem\",\n  \"fused\",\n  \"latex\",\n  \"veils\",\n  \"mused\",\n  \"mains\",\n  \"myrrh\",\n  \"racks\",\n  \"galls\",\n  \"gnats\",\n  \"bouts\",\n  \"sisal\",\n  \"shuts\",\n  \"hoses\",\n  \"dryly\",\n  \"hover\",\n  \"gloss\",\n  \"seeps\",\n  \"denim\",\n  \"putty\",\n  \"guppy\",\n  \"leaky\",\n  \"dusky\",\n  \"filth\",\n  \"oboes\",\n  \"spans\",\n  \"fowls\",\n  \"adorn\",\n  \"glaze\",\n  \"haunt\",\n  \"dares\",\n  \"obeys\",\n  \"bakes\",\n  \"abyss\",\n  \"smelt\",\n  \"gangs\",\n  \"aches\",\n  \"trawl\",\n  \"claps\",\n  \"undid\",\n  \"spicy\",\n  \"hoist\",\n  \"fades\",\n  \"vicar\",\n  \"acorn\",\n  \"pussy\",\n  \"gruff\",\n  \"musty\",\n  \"tarts\",\n  \"snuff\",\n  \"hunch\",\n  \"truce\",\n  \"tweed\",\n  \"dryer\",\n  \"loser\",\n  \"sheaf\",\n  \"moles\",\n  \"lapse\",\n  \"tawny\",\n  \"vexed\",\n  \"autos\",\n  \"wager\",\n  \"domes\",\n  \"sheen\",\n  \"clang\",\n  \"spade\",\n  \"sowed\",\n  \"broil\",\n  \"slyly\",\n  \"studs\",\n  \"grunt\",\n  \"donor\",\n  \"slugs\",\n  \"aspen\",\n  \"homer\",\n  \"croak\",\n  \"tithe\",\n  \"halts\",\n  \"avert\",\n  \"havoc\",\n  \"hogan\",\n  \"glint\",\n  \"ruddy\",\n  \"jeeps\",\n  \"flaky\",\n  \"ladle\",\n  \"taunt\",\n  \"snore\",\n  \"fines\",\n  \"props\",\n  \"prune\",\n  \"pesos\",\n  \"radii\",\n  \"pokes\",\n  \"tiled\",\n  \"daisy\",\n  \"heron\",\n  \"villa\",\n  \"farce\",\n  \"binds\",\n  \"cites\",\n  \"fixes\",\n  \"jerks\",\n  \"livid\",\n  \"waked\",\n  \"inked\",\n  \"booms\",\n  \"chews\",\n  \"licks\",\n  \"hyena\",\n  \"scoff\",\n  \"lusty\",\n  \"sonic\",\n  \"smith\",\n  \"usher\",\n  \"tucks\",\n  \"vigil\",\n  \"molts\",\n  \"sects\",\n  \"spars\",\n  \"dumps\",\n  \"scaly\",\n  \"wisps\",\n  \"sores\",\n  \"mince\",\n  \"panda\",\n  \"flier\",\n  \"axles\",\n  \"plied\",\n  \"booby\",\n  \"patio\",\n  \"rabbi\",\n  \"petal\",\n  \"polyp\",\n  \"tints\",\n  \"grate\",\n  \"troll\",\n  \"tolls\",\n  \"relic\",\n  \"phony\",\n  \"bleat\",\n  \"flaws\",\n  \"flake\",\n  \"snags\",\n  \"aptly\",\n  \"drawl\",\n  \"ulcer\",\n  \"soapy\",\n  \"bossy\",\n  \"monks\",\n  \"crags\",\n  \"caged\",\n  \"twang\",\n  \"diner\",\n  \"taped\",\n  \"cadet\",\n  \"grids\",\n  \"spawn\",\n  \"guile\",\n  \"noose\",\n  \"mores\",\n  \"girth\",\n  \"slimy\",\n  \"aides\",\n  \"spasm\",\n  \"burrs\",\n  \"alibi\",\n  \"lymph\",\n  \"saucy\",\n  \"muggy\",\n  \"liter\",\n  \"joked\",\n  \"goofy\",\n  \"exams\",\n  \"enact\",\n  \"stork\",\n  \"lured\",\n  \"toxic\",\n  \"omens\",\n  \"nears\",\n  \"covet\",\n  \"wrung\",\n  \"forum\",\n  \"venom\",\n  \"moody\",\n  \"alder\",\n  \"sassy\",\n  \"flair\",\n  \"guild\",\n  \"prays\",\n  \"wrens\",\n  \"hauls\",\n  \"stave\",\n  \"tilts\",\n  \"pecks\",\n  \"stomp\",\n  \"gales\",\n  \"tempt\",\n  \"capes\",\n  \"mesas\",\n  \"omits\",\n  \"tepee\",\n  \"harry\",\n  \"wring\",\n  \"evoke\",\n  \"limes\",\n  \"cluck\",\n  \"lunge\",\n  \"highs\",\n  \"canes\",\n  \"giddy\",\n  \"lithe\",\n  \"verge\",\n  \"khaki\",\n  \"queue\",\n  \"loath\",\n  \"foyer\",\n  \"outdo\",\n  \"fared\",\n  \"deter\",\n  \"crumb\",\n  \"astir\",\n  \"spire\",\n  \"jumpy\",\n  \"extol\",\n  \"buoys\",\n  \"stubs\",\n  \"lucid\",\n  \"thong\",\n  \"afore\",\n  \"whiff\",\n  \"maxim\",\n  \"hulls\",\n  \"clogs\",\n  \"slats\",\n  \"jiffy\",\n  \"arbor\",\n  \"cinch\",\n  \"igloo\",\n  \"goody\",\n  \"gazes\",\n  \"dowel\",\n  \"calms\",\n  \"bitch\",\n  \"scowl\",\n  \"gulps\",\n  \"coded\",\n  \"waver\",\n  \"mason\",\n  \"lobes\",\n  \"ebony\",\n  \"flail\",\n  \"isles\",\n  \"clods\",\n  \"dazed\",\n  \"adept\",\n  \"oozed\",\n  \"sedan\",\n  \"clays\",\n  \"warts\",\n  \"ketch\",\n  \"skunk\",\n  \"manes\",\n  \"adore\",\n  \"sneer\",\n  \"mango\",\n  \"fiord\",\n  \"flora\",\n  \"roomy\",\n  \"minks\",\n  \"thaws\",\n  \"watts\",\n  \"freer\",\n  \"exult\",\n  \"plush\",\n  \"paled\",\n  \"twain\",\n  \"clink\",\n  \"scamp\",\n  \"pawed\",\n  \"grope\",\n  \"bravo\",\n  \"gable\",\n  \"stink\",\n  \"sever\",\n  \"waned\",\n  \"rarer\",\n  \"regal\",\n  \"wards\",\n  \"fawns\",\n  \"babes\",\n  \"unify\",\n  \"amend\",\n  \"oaken\",\n  \"glade\",\n  \"visor\",\n  \"hefty\",\n  \"nines\",\n  \"throb\",\n  \"pecan\",\n  \"butts\",\n  \"pence\",\n  \"sills\",\n  \"jails\",\n  \"flyer\",\n  \"saber\",\n  \"nomad\",\n  \"miter\",\n  \"beeps\",\n  \"domed\",\n  \"gulfs\",\n  \"curbs\",\n  \"heath\",\n  \"moors\",\n  \"aorta\",\n  \"larks\",\n  \"tangy\",\n  \"wryly\",\n  \"cheep\",\n  \"rages\",\n  \"evade\",\n  \"lures\",\n  \"freak\",\n  \"vogue\",\n  \"tunic\",\n  \"slams\",\n  \"knits\",\n  \"dumpy\",\n  \"mania\",\n  \"spits\",\n  \"firth\",\n  \"hikes\",\n  \"trots\",\n  \"nosed\",\n  \"clank\",\n  \"dogma\",\n  \"bloat\",\n  \"balsa\",\n  \"graft\",\n  \"middy\",\n  \"stile\",\n  \"keyed\",\n  \"finch\",\n  \"sperm\",\n  \"chaff\",\n  \"wiles\",\n  \"amigo\",\n  \"copra\",\n  \"amiss\",\n  \"eying\",\n  \"twirl\",\n  \"lurch\",\n  \"popes\",\n  \"chins\",\n  \"smock\",\n  \"tines\",\n  \"guise\",\n  \"grits\",\n  \"junks\",\n  \"shoal\",\n  \"cache\",\n  \"tapir\",\n  \"atoll\",\n  \"deity\",\n  \"toils\",\n  \"spree\",\n  \"mocks\",\n  \"scans\",\n  \"shorn\",\n  \"revel\",\n  \"raven\",\n  \"hoary\",\n  \"reels\",\n  \"scuff\",\n  \"mimic\",\n  \"weedy\",\n  \"corny\",\n  \"truer\",\n  \"rouge\",\n  \"ember\",\n  \"floes\",\n  \"torso\",\n  \"wipes\",\n  \"edict\",\n  \"sulky\",\n  \"recur\",\n  \"groin\",\n  \"baste\",\n  \"kinks\",\n  \"surer\",\n  \"piggy\",\n  \"moldy\",\n  \"franc\",\n  \"liars\",\n  \"inept\",\n  \"gusty\",\n  \"facet\",\n  \"jetty\",\n  \"equip\",\n  \"leper\",\n  \"slink\",\n  \"soars\",\n  \"cater\",\n  \"dowry\",\n  \"sided\",\n  \"yearn\",\n  \"decoy\",\n  \"taboo\",\n  \"ovals\",\n  \"heals\",\n  \"pleas\",\n  \"beret\",\n  \"spilt\",\n  \"gayly\",\n  \"rover\",\n  \"endow\",\n  \"pygmy\",\n  \"carat\",\n  \"abbey\",\n  \"vents\",\n  \"waken\",\n  \"chimp\",\n  \"fumed\",\n  \"sodas\",\n  \"vinyl\",\n  \"clout\",\n  \"wades\",\n  \"mites\",\n  \"smirk\",\n  \"bores\",\n  \"bunny\",\n  \"surly\",\n  \"frock\",\n  \"foray\",\n  \"purer\",\n  \"milks\",\n  \"query\",\n  \"mired\",\n  \"blare\",\n  \"froth\",\n  \"gruel\",\n  \"navel\",\n  \"paler\",\n  \"puffy\",\n  \"casks\",\n  \"grime\",\n  \"derby\",\n  \"mamma\",\n  \"gavel\",\n  \"teddy\",\n  \"vomit\",\n  \"moans\",\n  \"allot\",\n  \"defer\",\n  \"wield\",\n  \"viper\",\n  \"louse\",\n  \"erred\",\n  \"hewed\",\n  \"abhor\",\n  \"wrest\",\n  \"waxen\",\n  \"adage\",\n  \"ardor\",\n  \"stabs\",\n  \"pored\",\n  \"rondo\",\n  \"loped\",\n  \"fishy\",\n  \"bible\",\n  \"hires\",\n  \"foals\",\n  \"feuds\",\n  \"jambs\",\n  \"thuds\",\n  \"jeers\",\n  \"knead\",\n  \"quirk\",\n  \"rugby\",\n  \"expel\",\n  \"greys\",\n  \"rigor\",\n  \"ester\",\n  \"lyres\",\n  \"aback\",\n  \"glues\",\n  \"lotus\",\n  \"lurid\",\n  \"rungs\",\n  \"hutch\",\n  \"thyme\",\n  \"valet\",\n  \"tommy\",\n  \"yokes\",\n  \"epics\",\n  \"trill\",\n  \"pikes\",\n  \"ozone\",\n  \"caper\",\n  \"chime\",\n  \"frees\",\n  \"famed\",\n  \"leech\",\n  \"smite\",\n  \"neigh\",\n  \"erode\",\n  \"robed\",\n  \"hoard\",\n  \"salve\",\n  \"conic\",\n  \"gawky\",\n  \"craze\",\n  \"jacks\",\n  \"gloat\",\n  \"mushy\",\n  \"rumps\",\n  \"fetus\",\n  \"wince\",\n  \"pinks\",\n  \"shalt\",\n  \"toots\",\n  \"glens\",\n  \"cooed\",\n  \"rusts\",\n  \"stews\",\n  \"shred\",\n  \"parka\",\n  \"chugs\",\n  \"winks\",\n  \"clots\",\n  \"shrew\",\n  \"booed\",\n  \"filmy\",\n  \"juror\",\n  \"dents\",\n  \"gummy\",\n  \"grays\",\n  \"hooky\",\n  \"butte\",\n  \"dogie\",\n  \"poled\",\n  \"reams\",\n  \"fifes\",\n  \"spank\",\n  \"gayer\",\n  \"tepid\",\n  \"spook\",\n  \"taint\",\n  \"flirt\",\n  \"rogue\",\n  \"spiky\",\n  \"opals\",\n  \"miser\",\n  \"cocky\",\n  \"coyly\",\n  \"balmy\",\n  \"slosh\",\n  \"brawl\",\n  \"aphid\",\n  \"faked\",\n  \"hydra\",\n  \"brags\",\n  \"chide\",\n  \"yanks\",\n  \"allay\",\n  \"video\",\n  \"altos\",\n  \"eases\",\n  \"meted\",\n  \"chasm\",\n  \"longs\",\n  \"excel\",\n  \"taffy\",\n  \"impel\",\n  \"savor\",\n  \"koala\",\n  \"quays\",\n  \"dawns\",\n  \"proxy\",\n  \"clove\",\n  \"duets\",\n  \"dregs\",\n  \"tardy\",\n  \"briar\",\n  \"grimy\",\n  \"ultra\",\n  \"meaty\",\n  \"halve\",\n  \"wails\",\n  \"suede\",\n  \"mauve\",\n  \"envoy\",\n  \"arson\",\n  \"coves\",\n  \"gooey\",\n  \"brews\",\n  \"sofas\",\n  \"chums\",\n  \"amaze\",\n  \"zooms\",\n  \"abbot\",\n  \"halos\",\n  \"scour\",\n  \"suing\",\n  \"cribs\",\n  \"sagas\",\n  \"enema\",\n  \"wordy\",\n  \"harps\",\n  \"coupe\",\n  \"molar\",\n  \"flops\",\n  \"weeps\",\n  \"mints\",\n  \"ashen\",\n  \"felts\",\n  \"askew\",\n  \"munch\",\n  \"mewed\",\n  \"divan\",\n  \"vices\",\n  \"jumbo\",\n  \"blobs\",\n  \"blots\",\n  \"spunk\",\n  \"acrid\",\n  \"topaz\",\n  \"cubed\",\n  \"clans\",\n  \"flees\",\n  \"slurs\",\n  \"gnaws\",\n  \"welds\",\n  \"fords\",\n  \"emits\",\n  \"agate\",\n  \"pumas\",\n  \"mends\",\n  \"darks\",\n  \"dukes\",\n  \"plies\",\n  \"canny\",\n  \"hoots\",\n  \"oozes\",\n  \"lamed\",\n  \"fouls\",\n  \"clefs\",\n  \"nicks\",\n  \"mated\",\n  \"skims\",\n  \"brunt\",\n  \"tuber\",\n  \"tinge\",\n  \"fates\",\n  \"ditty\",\n  \"thins\",\n  \"frets\",\n  \"eider\",\n  \"bayou\",\n  \"mulch\",\n  \"fasts\",\n  \"amass\",\n  \"damps\",\n  \"morns\",\n  \"friar\",\n  \"palsy\",\n  \"vista\",\n  \"croon\",\n  \"conch\",\n  \"udder\",\n  \"tacos\",\n  \"skits\",\n  \"mikes\",\n  \"quits\",\n  \"preen\",\n  \"aster\",\n  \"adder\",\n  \"elegy\",\n  \"pulpy\",\n  \"scows\",\n  \"baled\",\n  \"hovel\",\n  \"lavas\",\n  \"crave\",\n  \"optic\",\n  \"welts\",\n  \"busts\",\n  \"knave\",\n  \"razed\",\n  \"shins\",\n  \"totes\",\n  \"scoot\",\n  \"dears\",\n  \"crock\",\n  \"mutes\",\n  \"trims\",\n  \"skein\",\n  \"doted\",\n  \"shuns\",\n  \"veers\",\n  \"fakes\",\n  \"yoked\",\n  \"wooed\",\n  \"hacks\",\n  \"sprig\",\n  \"wands\",\n  \"lulls\",\n  \"seers\",\n  \"snobs\",\n  \"nooks\",\n  \"pined\",\n  \"perky\",\n  \"mooed\",\n  \"frill\",\n  \"dines\",\n  \"booze\",\n  \"tripe\",\n  \"prong\",\n  \"drips\",\n  \"odder\",\n  \"levee\",\n  \"antic\",\n  \"sidle\",\n  \"pithy\",\n  \"corks\",\n  \"yelps\",\n  \"joker\",\n  \"fleck\",\n  \"buffs\",\n  \"scram\",\n  \"tiers\",\n  \"bogey\",\n  \"doled\",\n  \"irate\",\n  \"vales\",\n  \"coped\",\n  \"hails\",\n  \"elude\",\n  \"bulks\",\n  \"aired\",\n  \"vying\",\n  \"stags\",\n  \"strew\",\n  \"cocci\",\n  \"pacts\",\n  \"scabs\",\n  \"silos\",\n  \"dusts\",\n  \"yodel\",\n  \"terse\",\n  \"jaded\",\n  \"baser\",\n  \"jibes\",\n  \"foils\",\n  \"sways\",\n  \"forgo\",\n  \"slays\",\n  \"preys\",\n  \"treks\",\n  \"quell\",\n  \"peeks\",\n  \"assay\",\n  \"lurks\",\n  \"eject\",\n  \"boars\",\n  \"trite\",\n  \"belch\",\n  \"gnash\",\n  \"wanes\",\n  \"lutes\",\n  \"whims\",\n  \"dosed\",\n  \"chewy\",\n  \"snipe\",\n  \"umbra\",\n  \"teems\",\n  \"dozes\",\n  \"kelps\",\n  \"upped\",\n  \"brawn\",\n  \"doped\",\n  \"shush\",\n  \"rinds\",\n  \"slush\",\n  \"moron\",\n  \"voile\",\n  \"woken\",\n  \"fjord\",\n  \"sheik\",\n  \"jests\",\n  \"kayak\",\n  \"slews\",\n  \"toted\",\n  \"saner\",\n  \"drape\",\n  \"patty\",\n  \"raves\",\n  \"sulfa\",\n  \"grist\",\n  \"skied\",\n  \"vixen\",\n  \"civet\",\n  \"vouch\",\n  \"tiara\",\n  \"homey\",\n  \"moped\",\n  \"runts\",\n  \"serge\",\n  \"kinky\",\n  \"rills\",\n  \"corns\",\n  \"brats\",\n  \"pries\",\n  \"amble\",\n  \"fries\",\n  \"loons\",\n  \"tsars\",\n  \"datum\",\n  \"musky\",\n  \"pigmy\",\n  \"gnome\",\n  \"ravel\",\n  \"ovule\",\n  \"icily\",\n  \"liken\",\n  \"lemur\",\n  \"frays\",\n  \"silts\",\n  \"sifts\",\n  \"plods\",\n  \"ramps\",\n  \"tress\",\n  \"earls\",\n  \"dudes\",\n  \"waive\",\n  \"karat\",\n  \"jolts\",\n  \"peons\",\n  \"beers\",\n  \"horny\",\n  \"pales\",\n  \"wreak\",\n  \"lairs\",\n  \"lynch\",\n  \"stank\",\n  \"swoon\",\n  \"idler\",\n  \"abort\",\n  \"blitz\",\n  \"ensue\",\n  \"atone\",\n  \"bingo\",\n  \"roves\",\n  \"kilts\",\n  \"scald\",\n  \"adios\",\n  \"cynic\",\n  \"dulls\",\n  \"memos\",\n  \"elfin\",\n  \"dales\",\n  \"peels\",\n  \"peals\",\n  \"bares\",\n  \"sinus\",\n  \"crone\",\n  \"sable\",\n  \"hinds\",\n  \"shirk\",\n  \"enrol\",\n  \"wilts\",\n  \"roams\",\n  \"duped\",\n  \"cysts\",\n  \"mitts\",\n  \"safes\",\n  \"spats\",\n  \"coops\",\n  \"filet\",\n  \"knell\",\n  \"refit\",\n  \"covey\",\n  \"punks\",\n  \"kilns\",\n  \"fitly\",\n  \"abate\",\n  \"talcs\",\n  \"heeds\",\n  \"duels\",\n  \"wanly\",\n  \"ruffs\",\n  \"gauss\",\n  \"lapel\",\n  \"jaunt\",\n  \"whelp\",\n  \"cleat\",\n  \"gauzy\",\n  \"dirge\",\n  \"edits\",\n  \"wormy\",\n  \"moats\",\n  \"smear\",\n  \"prods\",\n  \"bowel\",\n  \"frisk\",\n  \"vests\",\n  \"bayed\",\n  \"rasps\",\n  \"tames\",\n  \"delve\",\n  \"embed\",\n  \"befit\",\n  \"wafer\",\n  \"ceded\",\n  \"novas\",\n  \"feign\",\n  \"spews\",\n  \"larch\",\n  \"huffs\",\n  \"doles\",\n  \"mamas\",\n  \"hulks\",\n  \"pried\",\n  \"brims\",\n  \"irked\",\n  \"aspic\",\n  \"swipe\",\n  \"mealy\",\n  \"skimp\",\n  \"bluer\",\n  \"slake\",\n  \"dowdy\",\n  \"penis\",\n  \"brays\",\n  \"pupas\",\n  \"egret\",\n  \"flunk\",\n  \"phlox\",\n  \"gripe\",\n  \"peony\",\n  \"douse\",\n  \"blurs\",\n  \"darns\",\n  \"slunk\",\n  \"lefts\",\n  \"chats\",\n  \"inane\",\n  \"vials\",\n  \"stilt\",\n  \"rinks\",\n  \"woofs\",\n  \"wowed\",\n  \"bongs\",\n  \"frond\",\n  \"ingot\",\n  \"evict\",\n  \"singe\",\n  \"shyer\",\n  \"flied\",\n  \"slops\",\n  \"dolts\",\n  \"drool\",\n  \"dells\",\n  \"whelk\",\n  \"hippy\",\n  \"feted\",\n  \"ether\",\n  \"cocos\",\n  \"hives\",\n  \"jibed\",\n  \"mazes\",\n  \"trios\",\n  \"sirup\",\n  \"squab\",\n  \"laths\",\n  \"leers\",\n  \"pasta\",\n  \"rifts\",\n  \"lopes\",\n  \"alias\",\n  \"whirs\",\n  \"diced\",\n  \"slags\",\n  \"lodes\",\n  \"foxed\",\n  \"idled\",\n  \"prows\",\n  \"plait\",\n  \"malts\",\n  \"chafe\",\n  \"cower\",\n  \"toyed\",\n  \"chefs\",\n  \"keels\",\n  \"sties\",\n  \"racer\",\n  \"etude\",\n  \"sucks\",\n  \"sulks\",\n  \"micas\",\n  \"czars\",\n  \"copse\",\n  \"ailed\",\n  \"abler\",\n  \"rabid\",\n  \"golds\",\n  \"croup\",\n  \"snaky\",\n  \"visas\",\n  \"palls\",\n  \"mopes\",\n  \"boned\",\n  \"wispy\",\n  \"raved\",\n  \"swaps\",\n  \"junky\",\n  \"doily\",\n  \"pawns\",\n  \"tamer\",\n  \"poach\",\n  \"baits\",\n  \"damns\",\n  \"gumbo\",\n  \"daunt\",\n  \"prank\",\n  \"hunks\",\n  \"buxom\",\n  \"heres\",\n  \"honks\",\n  \"stows\",\n  \"unbar\",\n  \"idles\",\n  \"routs\",\n  \"sages\",\n  \"goads\",\n  \"remit\",\n  \"copes\",\n  \"deign\",\n  \"culls\",\n  \"girds\",\n  \"haves\",\n  \"lucks\",\n  \"stunk\",\n  \"dodos\",\n  \"shams\",\n  \"snubs\",\n  \"icons\",\n  \"usurp\",\n  \"dooms\",\n  \"hells\",\n  \"soled\",\n  \"comas\",\n  \"paves\",\n  \"maths\",\n  \"perks\",\n  \"limps\",\n  \"wombs\",\n  \"blurb\",\n  \"daubs\",\n  \"cokes\",\n  \"sours\",\n  \"stuns\",\n  \"cased\",\n  \"musts\",\n  \"coeds\",\n  \"cowed\",\n  \"aping\",\n  \"zoned\",\n  \"rummy\",\n  \"fetes\",\n  \"skulk\",\n  \"quaff\",\n  \"rajah\",\n  \"deans\",\n  \"reaps\",\n  \"galas\",\n  \"tills\",\n  \"roved\",\n  \"kudos\",\n  \"toned\",\n  \"pared\",\n  \"scull\",\n  \"vexes\",\n  \"punts\",\n  \"snoop\",\n  \"bails\",\n  \"dames\",\n  \"hazes\",\n  \"lores\",\n  \"marts\",\n  \"voids\",\n  \"ameba\",\n  \"rakes\",\n  \"adzes\",\n  \"harms\",\n  \"rears\",\n  \"satyr\",\n  \"swill\",\n  \"hexes\",\n  \"colic\",\n  \"leeks\",\n  \"hurls\",\n  \"yowls\",\n  \"ivies\",\n  \"plops\",\n  \"musks\",\n  \"papaw\",\n  \"jells\",\n  \"bused\",\n  \"cruet\",\n  \"bided\",\n  \"filch\",\n  \"zests\",\n  \"rooks\",\n  \"laxly\",\n  \"rends\",\n  \"loams\",\n  \"basks\",\n  \"sires\",\n  \"carps\",\n  \"pokey\",\n  \"flits\",\n  \"muses\",\n  \"bawls\",\n  \"shuck\",\n  \"viler\",\n  \"lisps\",\n  \"peeps\",\n  \"sorer\",\n  \"lolls\",\n  \"prude\",\n  \"diked\",\n  \"floss\",\n  \"flogs\",\n  \"scums\",\n  \"dopes\",\n  \"bogie\",\n  \"pinky\",\n  \"leafs\",\n  \"tubas\",\n  \"scads\",\n  \"lowed\",\n  \"yeses\",\n  \"biked\",\n  \"qualm\",\n  \"evens\",\n  \"caned\",\n  \"gawks\",\n  \"whits\",\n  \"wooly\",\n  \"gluts\",\n  \"romps\",\n  \"bests\",\n  \"dunce\",\n  \"crony\",\n  \"joist\",\n  \"tunas\",\n  \"boner\",\n  \"malls\",\n  \"parch\",\n  \"avers\",\n  \"crams\",\n  \"pares\",\n  \"dally\",\n  \"bigot\",\n  \"kales\",\n  \"flays\",\n  \"leach\",\n  \"gushy\",\n  \"pooch\",\n  \"huger\",\n  \"slyer\",\n  \"golfs\",\n  \"mires\",\n  \"flues\",\n  \"loafs\",\n  \"arced\",\n  \"acnes\",\n  \"neons\",\n  \"fiefs\",\n  \"dints\",\n  \"dazes\",\n  \"pouts\",\n  \"cored\",\n  \"yules\",\n  \"lilts\",\n  \"beefs\",\n  \"mutts\",\n  \"fells\",\n  \"cowls\",\n  \"spuds\",\n  \"lames\",\n  \"jawed\",\n  \"dupes\",\n  \"deads\",\n  \"bylaw\",\n  \"noons\",\n  \"nifty\",\n  \"clued\",\n  \"vireo\",\n  \"gapes\",\n  \"metes\",\n  \"cuter\",\n  \"maims\",\n  \"droll\",\n  \"cupid\",\n  \"mauls\",\n  \"sedge\",\n  \"papas\",\n  \"wheys\",\n  \"eking\",\n  \"loots\",\n  \"hilts\",\n  \"meows\",\n  \"beaus\",\n  \"dices\",\n  \"peppy\",\n  \"riper\",\n  \"fogey\",\n  \"gists\",\n  \"yogas\",\n  \"gilts\",\n  \"skews\",\n  \"cedes\",\n  \"zeals\",\n  \"alums\",\n  \"okays\",\n  \"elope\",\n  \"grump\",\n  \"wafts\",\n  \"soots\",\n  \"blimp\",\n  \"hefts\",\n  \"mulls\",\n  \"hosed\",\n  \"cress\",\n  \"doffs\",\n  \"ruder\",\n  \"pixie\",\n  \"waifs\",\n  \"ousts\",\n  \"pucks\",\n  \"biers\",\n  \"gulch\",\n  \"suets\",\n  \"hobos\",\n  \"lints\",\n  \"brans\",\n  \"teals\",\n  \"garbs\",\n  \"pewee\",\n  \"helms\",\n  \"turfs\",\n  \"quips\",\n  \"wends\",\n  \"banes\",\n  \"napes\",\n  \"icier\",\n  \"swats\",\n  \"bagel\",\n  \"hexed\",\n  \"ogres\",\n  \"goner\",\n  \"gilds\",\n  \"pyres\",\n  \"lards\",\n  \"bides\",\n  \"paged\",\n  \"talon\",\n  \"flout\",\n  \"medic\",\n  \"veals\",\n  \"putts\",\n  \"dirks\",\n  \"dotes\",\n  \"tippy\",\n  \"blurt\",\n  \"piths\",\n  \"acing\",\n  \"barer\",\n  \"whets\",\n  \"gaits\",\n  \"wools\",\n  \"dunks\",\n  \"heros\",\n  \"swabs\",\n  \"dirts\",\n  \"jutes\",\n  \"hemps\",\n  \"surfs\",\n  \"okapi\",\n  \"chows\",\n  \"shoos\",\n  \"dusks\",\n  \"parry\",\n  \"decal\",\n  \"furls\",\n  \"cilia\",\n  \"sears\",\n  \"novae\",\n  \"murks\",\n  \"warps\",\n  \"slues\",\n  \"lamer\",\n  \"saris\",\n  \"weans\",\n  \"purrs\",\n  \"dills\",\n  \"togas\",\n  \"newts\",\n  \"meany\",\n  \"bunts\",\n  \"razes\",\n  \"goons\",\n  \"wicks\",\n  \"ruses\",\n  \"vends\",\n  \"geode\",\n  \"drake\",\n  \"judos\",\n  \"lofts\",\n  \"pulps\",\n  \"lauds\",\n  \"mucks\",\n  \"vises\",\n  \"mocha\",\n  \"oiled\",\n  \"roman\",\n  \"ethyl\",\n  \"gotta\",\n  \"fugue\",\n  \"smack\",\n  \"gourd\",\n  \"bumpy\",\n  \"radix\",\n  \"fatty\",\n  \"borax\",\n  \"cubit\",\n  \"cacti\",\n  \"gamma\",\n  \"focal\",\n  \"avail\",\n  \"papal\",\n  \"golly\",\n  \"elite\",\n  \"versa\",\n  \"billy\",\n  \"adieu\",\n  \"annum\",\n  \"howdy\",\n  \"rhino\",\n  \"norms\",\n  \"bobby\",\n  \"axiom\",\n  \"setup\",\n  \"yolks\",\n  \"terns\",\n  \"mixer\",\n  \"genre\",\n  \"knoll\",\n  \"abode\",\n  \"junta\",\n  \"gorge\",\n  \"combo\",\n  \"alpha\",\n  \"overt\",\n  \"kinda\",\n  \"spelt\",\n  \"prick\",\n  \"nobly\",\n  \"ephod\",\n  \"audio\",\n  \"modal\",\n  \"veldt\",\n  \"warty\",\n  \"fluke\",\n  \"bonny\",\n  \"bream\",\n  \"rosin\",\n  \"bolls\",\n  \"doers\",\n  \"downs\",\n  \"beady\",\n  \"motif\",\n  \"humph\",\n  \"fella\",\n  \"mould\",\n  \"crepe\",\n  \"kerns\",\n  \"aloha\",\n  \"glyph\",\n  \"azure\",\n  \"riser\",\n  \"blest\",\n  \"locus\",\n  \"lumpy\",\n  \"beryl\",\n  \"wanna\",\n  \"brier\",\n  \"tuner\",\n  \"rowdy\",\n  \"mural\",\n  \"timer\",\n  \"canst\",\n  \"krill\",\n  \"quoth\",\n  \"lemme\",\n  \"triad\",\n  \"tenon\",\n  \"amply\",\n  \"deeps\",\n  \"padre\",\n  \"leant\",\n  \"pacer\",\n  \"octal\",\n  \"dolly\",\n  \"trans\",\n  \"sumac\",\n  \"foamy\",\n  \"lolly\",\n  \"giver\",\n  \"quipu\",\n  \"codex\",\n  \"manna\",\n  \"unwed\",\n  \"vodka\",\n  \"ferny\",\n  \"salon\",\n  \"duple\",\n  \"boron\",\n  \"revue\",\n  \"crier\",\n  \"alack\",\n  \"inter\",\n  \"dilly\",\n  \"whist\",\n  \"cults\",\n  \"spake\",\n  \"reset\",\n  \"loess\",\n  \"decor\",\n  \"mover\",\n  \"verve\",\n  \"ethic\",\n  \"gamut\",\n  \"lingo\",\n  \"dunno\",\n  \"align\",\n  \"sissy\",\n  \"incur\",\n  \"reedy\",\n  \"avant\",\n  \"piper\",\n  \"waxer\",\n  \"calyx\",\n  \"basil\",\n  \"coons\",\n  \"seine\",\n  \"piney\",\n  \"lemma\",\n  \"trams\",\n  \"winch\",\n  \"whirr\",\n  \"saith\",\n  \"ionic\",\n  \"heady\",\n  \"harem\",\n  \"tummy\",\n  \"sally\",\n  \"shied\",\n  \"dross\",\n  \"farad\",\n  \"saver\",\n  \"tilde\",\n  \"jingo\",\n  \"bower\",\n  \"serif\",\n  \"facto\",\n  \"belle\",\n  \"inset\",\n  \"bogus\",\n  \"caved\",\n  \"forte\",\n  \"sooty\",\n  \"bongo\",\n  \"toves\",\n  \"credo\",\n  \"basal\",\n  \"yella\",\n  \"aglow\",\n  \"glean\",\n  \"gusto\",\n  \"hymen\",\n  \"ethos\",\n  \"terra\",\n  \"brash\",\n  \"scrip\",\n  \"swash\",\n  \"aleph\",\n  \"tinny\",\n  \"itchy\",\n  \"wanta\",\n  \"trice\",\n  \"jowls\",\n  \"gongs\",\n  \"garde\",\n  \"boric\",\n  \"twill\",\n  \"sower\",\n  \"henry\",\n  \"awash\",\n  \"libel\",\n  \"spurn\",\n  \"sabre\",\n  \"rebut\",\n  \"penal\",\n  \"obese\",\n  \"sonny\",\n  \"quirt\",\n  \"mebbe\",\n  \"tacit\",\n  \"greek\",\n  \"xenon\",\n  \"hullo\",\n  \"pique\",\n  \"roger\",\n  \"negro\",\n  \"hadst\",\n  \"gecko\",\n  \"beget\",\n  \"uncut\",\n  \"aloes\",\n  \"louis\",\n  \"quint\",\n  \"clunk\",\n  \"raped\",\n  \"salvo\",\n  \"diode\",\n  \"matey\",\n  \"hertz\",\n  \"xylem\",\n  \"kiosk\",\n  \"apace\",\n  \"cawed\",\n  \"peter\",\n  \"wench\",\n  \"cohos\",\n  \"sorta\",\n  \"gamba\",\n  \"bytes\",\n  \"tango\",\n  \"nutty\",\n  \"axial\",\n  \"aleck\",\n  \"natal\",\n  \"clomp\",\n  \"gored\",\n  \"siree\",\n  \"bandy\",\n  \"gunny\",\n  \"runic\",\n  \"whizz\",\n  \"rupee\",\n  \"fated\",\n  \"wiper\",\n  \"bards\",\n  \"briny\",\n  \"staid\",\n  \"hocks\",\n  \"ochre\",\n  \"yummy\",\n  \"gents\",\n  \"soupy\",\n  \"roper\",\n  \"swath\",\n  \"cameo\",\n  \"edger\",\n  \"spate\",\n  \"gimme\",\n  \"ebbed\",\n  \"breve\",\n  \"theta\",\n  \"deems\",\n  \"dykes\",\n  \"servo\",\n  \"telly\",\n  \"tabby\",\n  \"tares\",\n  \"blocs\",\n  \"welch\",\n  \"ghoul\",\n  \"vitae\",\n  \"cumin\",\n  \"dinky\",\n  \"bronc\",\n  \"tabor\",\n  \"teeny\",\n  \"comer\",\n  \"borer\",\n  \"sired\",\n  \"privy\",\n  \"mammy\",\n  \"deary\",\n  \"gyros\",\n  \"sprit\",\n  \"conga\",\n  \"quire\",\n  \"thugs\",\n  \"furor\",\n  \"bloke\",\n  \"runes\",\n  \"bawdy\",\n  \"cadre\",\n  \"toxin\",\n  \"annul\",\n  \"egged\",\n  \"anion\",\n  \"nodes\",\n  \"picky\",\n  \"stein\",\n  \"jello\",\n  \"audit\",\n  \"echos\",\n  \"fagot\",\n  \"letup\",\n  \"eyrie\",\n  \"fount\",\n  \"caped\",\n  \"axons\",\n  \"amuck\",\n  \"banal\",\n  \"riled\",\n  \"petit\",\n  \"umber\",\n  \"miler\",\n  \"fibre\",\n  \"agave\",\n  \"bated\",\n  \"bilge\",\n  \"vitro\",\n  \"feint\",\n  \"pudgy\",\n  \"mater\",\n  \"manic\",\n  \"umped\",\n  \"pesky\",\n  \"strep\",\n  \"slurp\",\n  \"pylon\",\n  \"puree\",\n  \"caret\",\n  \"temps\",\n  \"newel\",\n  \"yawns\",\n  \"seedy\",\n  \"treed\",\n  \"coups\",\n  \"rangy\",\n  \"brads\",\n  \"mangy\",\n  \"loner\",\n  \"circa\",\n  \"tibia\",\n  \"afoul\",\n  \"mommy\",\n  \"titer\",\n  \"carne\",\n  \"kooky\",\n  \"motes\",\n  \"amity\",\n  \"suave\",\n  \"hippo\",\n  \"curvy\",\n  \"samba\",\n  \"newsy\",\n  \"anise\",\n  \"imams\",\n  \"tulle\",\n  \"aways\",\n  \"liven\",\n  \"hallo\",\n  \"wales\",\n  \"opted\",\n  \"canto\",\n  \"idyll\",\n  \"bodes\",\n  \"curio\",\n  \"wrack\",\n  \"hiker\",\n  \"chive\",\n  \"yokel\",\n  \"dotty\",\n  \"demur\",\n  \"cusps\",\n  \"specs\",\n  \"quads\",\n  \"laity\",\n  \"toner\",\n  \"decry\",\n  \"writs\",\n  \"saute\",\n  \"clack\",\n  \"aught\",\n  \"logos\",\n  \"tipsy\",\n  \"natty\",\n  \"ducal\",\n  \"bidet\",\n  \"bulgy\",\n  \"metre\",\n  \"lusts\",\n  \"unary\",\n  \"goeth\",\n  \"baler\",\n  \"sited\",\n  \"shies\",\n  \"hasps\",\n  \"brung\",\n  \"holed\",\n  \"swank\",\n  \"looky\",\n  \"melee\",\n  \"huffy\",\n  \"loamy\",\n  \"pimps\",\n  \"titan\",\n  \"binge\",\n  \"shunt\",\n  \"femur\",\n  \"libra\",\n  \"seder\",\n  \"honed\",\n  \"annas\",\n  \"coypu\",\n  \"shims\",\n  \"zowie\",\n  \"jihad\",\n  \"savvy\",\n  \"nadir\",\n  \"basso\",\n  \"monic\",\n  \"maned\",\n  \"mousy\",\n  \"omega\",\n  \"laver\",\n  \"prima\",\n  \"picas\",\n  \"folio\",\n  \"mecca\",\n  \"reals\",\n  \"troth\",\n  \"testy\",\n  \"balky\",\n  \"crimp\",\n  \"chink\",\n  \"abets\",\n  \"splat\",\n  \"abaci\",\n  \"vaunt\",\n  \"cutie\",\n  \"pasty\",\n  \"moray\",\n  \"levis\",\n  \"ratty\",\n  \"islet\",\n  \"joust\",\n  \"motet\",\n  \"viral\",\n  \"nukes\",\n  \"grads\",\n  \"comfy\",\n  \"voila\",\n  \"woozy\",\n  \"blued\",\n  \"whomp\",\n  \"sward\",\n  \"metro\",\n  \"skeet\",\n  \"chine\",\n  \"aerie\",\n  \"bowie\",\n  \"tubby\",\n  \"emirs\",\n  \"coati\",\n  \"unzip\",\n  \"slobs\",\n  \"trike\",\n  \"funky\",\n  \"ducat\",\n  \"dewey\",\n  \"skoal\",\n  \"wadis\",\n  \"oomph\",\n  \"taker\",\n  \"minim\",\n  \"getup\",\n  \"stoic\",\n  \"synod\",\n  \"runty\",\n  \"flyby\",\n  \"braze\",\n  \"inlay\",\n  \"venue\",\n  \"louts\",\n  \"peaty\",\n  \"orlon\",\n  \"humpy\",\n  \"radon\",\n  \"beaut\",\n  \"raspy\",\n  \"unfed\",\n  \"crick\",\n  \"nappy\",\n  \"vizor\",\n  \"yipes\",\n  \"rebus\",\n  \"divot\",\n  \"kiwis\",\n  \"vetch\",\n  \"squib\",\n  \"sitar\",\n  \"kiddo\",\n  \"dyers\",\n  \"cotta\",\n  \"matzo\",\n  \"lager\",\n  \"zebus\",\n  \"crass\",\n  \"dacha\",\n  \"kneed\",\n  \"dicta\",\n  \"fakir\",\n  \"knurl\",\n  \"runny\",\n  \"unpin\",\n  \"julep\",\n  \"globs\",\n  \"nudes\",\n  \"sushi\",\n  \"tacky\",\n  \"stoke\",\n  \"kaput\",\n  \"butch\",\n  \"hulas\",\n  \"croft\",\n  \"achoo\",\n  \"genii\",\n  \"nodal\",\n  \"outgo\",\n  \"spiel\",\n  \"viols\",\n  \"fetid\",\n  \"cagey\",\n  \"fudgy\",\n  \"epoxy\",\n  \"leggy\",\n  \"hanky\",\n  \"lapis\",\n  \"felon\",\n  \"beefy\",\n  \"coots\",\n  \"melba\",\n  \"caddy\",\n  \"segue\",\n  \"betel\",\n  \"frizz\",\n  \"drear\",\n  \"kooks\",\n  \"turbo\",\n  \"hoagy\",\n  \"moult\",\n  \"helix\",\n  \"zonal\",\n  \"arias\",\n  \"nosey\",\n  \"paean\",\n  \"lacey\",\n  \"banns\",\n  \"swain\",\n  \"fryer\",\n  \"retch\",\n  \"tenet\",\n  \"gigas\",\n  \"whiny\",\n  \"ogled\",\n  \"rumen\",\n  \"begot\",\n  \"cruse\",\n  \"abuts\",\n  \"riven\",\n  \"balks\",\n  \"sines\",\n  \"sigma\",\n  \"abase\",\n  \"ennui\",\n  \"gores\",\n  \"unset\",\n  \"augur\",\n  \"sated\",\n  \"odium\",\n  \"latin\",\n  \"dings\",\n  \"moire\",\n  \"scion\",\n  \"henna\",\n  \"kraut\",\n  \"dicks\",\n  \"lifer\",\n  \"prigs\",\n  \"bebop\",\n  \"gages\",\n  \"gazer\",\n  \"fanny\",\n  \"gibes\",\n  \"aural\",\n  \"tempi\",\n  \"hooch\",\n  \"rapes\",\n  \"snuck\",\n  \"harts\",\n  \"techs\",\n  \"emend\",\n  \"ninny\",\n  \"guava\",\n  \"scarp\",\n  \"liege\",\n  \"tufty\",\n  \"sepia\",\n  \"tomes\",\n  \"carob\",\n  \"emcee\",\n  \"prams\",\n  \"poser\",\n  \"verso\",\n  \"hubba\",\n  \"joule\",\n  \"baize\",\n  \"blips\",\n  \"scrim\",\n  \"cubby\",\n  \"clave\",\n  \"winos\",\n  \"rearm\",\n  \"liens\",\n  \"lumen\",\n  \"chump\",\n  \"nanny\",\n  \"trump\",\n  \"fichu\",\n  \"chomp\",\n  \"homos\",\n  \"purty\",\n  \"maser\",\n  \"woosh\",\n  \"patsy\",\n  \"shill\",\n  \"rusks\",\n  \"avast\",\n  \"swami\",\n  \"boded\",\n  \"ahhhh\",\n  \"lobed\",\n  \"natch\",\n  \"shish\",\n  \"tansy\",\n  \"snoot\",\n  \"payer\",\n  \"altho\",\n  \"sappy\",\n  \"laxer\",\n  \"hubby\",\n  \"aegis\",\n  \"riles\",\n  \"ditto\",\n  \"jazzy\",\n  \"dingo\",\n  \"quasi\",\n  \"septa\",\n  \"peaky\",\n  \"lorry\",\n  \"heerd\",\n  \"bitty\",\n  \"payee\",\n  \"seamy\",\n  \"apses\",\n  \"imbue\",\n  \"belie\",\n  \"chary\",\n  \"spoof\",\n  \"phyla\",\n  \"clime\",\n  \"babel\",\n  \"wacky\",\n  \"sumps\",\n  \"skids\",\n  \"khans\",\n  \"crypt\",\n  \"inure\",\n  \"nonce\",\n  \"outen\",\n  \"faire\",\n  \"hooey\",\n  \"anole\",\n  \"kazoo\",\n  \"calve\",\n  \"limbo\",\n  \"argot\",\n  \"ducky\",\n  \"faker\",\n  \"vibes\",\n  \"gassy\",\n  \"unlit\",\n  \"nervy\",\n  \"femme\",\n  \"biter\",\n  \"fiche\",\n  \"boors\",\n  \"gaffe\",\n  \"saxes\",\n  \"recap\",\n  \"synch\",\n  \"facie\",\n  \"dicey\",\n  \"ouija\",\n  \"hewer\",\n  \"legit\",\n  \"gurus\",\n  \"edify\",\n  \"tweak\",\n  \"caron\",\n  \"typos\",\n  \"rerun\",\n  \"polly\",\n  \"surds\",\n  \"hamza\",\n  \"nulls\",\n  \"hater\",\n  \"lefty\",\n  \"mogul\",\n  \"mafia\",\n  \"debug\",\n  \"pates\",\n  \"blabs\",\n  \"splay\",\n  \"talus\",\n  \"porno\",\n  \"moola\",\n  \"nixed\",\n  \"kilos\",\n  \"snide\",\n  \"horsy\",\n  \"gesso\",\n  \"jaggy\",\n  \"trove\",\n  \"nixes\",\n  \"creel\",\n  \"pater\",\n  \"iotas\",\n  \"cadge\",\n  \"skyed\",\n  \"hokum\",\n  \"furze\",\n  \"ankhs\",\n  \"curie\",\n  \"nutsy\",\n  \"hilum\",\n  \"remix\",\n  \"angst\",\n  \"burls\",\n  \"jimmy\",\n  \"veiny\",\n  \"tryst\",\n  \"codon\",\n  \"befog\",\n  \"gamed\",\n  \"flume\",\n  \"axman\",\n  \"doozy\",\n  \"lubes\",\n  \"rheas\",\n  \"bozos\",\n  \"butyl\",\n  \"kelly\",\n  \"mynah\",\n  \"jocks\",\n  \"donut\",\n  \"avian\",\n  \"wurst\",\n  \"chock\",\n  \"quash\",\n  \"quals\",\n  \"hayed\",\n  \"bombe\",\n  \"cushy\",\n  \"spacy\",\n  \"puked\",\n  \"leery\",\n  \"thews\",\n  \"prink\",\n  \"amens\",\n  \"tesla\",\n  \"intro\",\n  \"fiver\",\n  \"frump\",\n  \"capos\",\n  \"opine\",\n  \"coder\",\n  \"namer\",\n  \"jowly\",\n  \"pukes\",\n  \"haled\",\n  \"chard\",\n  \"duffs\",\n  \"bruin\",\n  \"reuse\",\n  \"whang\",\n  \"toons\",\n  \"frats\",\n  \"silty\",\n  \"telex\",\n  \"cutup\",\n  \"nisei\",\n  \"neato\",\n  \"decaf\",\n  \"softy\",\n  \"bimbo\",\n  \"adlib\",\n  \"loony\",\n  \"shoed\",\n  \"agues\",\n  \"peeve\",\n  \"noway\",\n  \"gamey\",\n  \"sarge\",\n  \"reran\",\n  \"epact\",\n  \"potty\",\n  \"coned\",\n  \"upend\",\n  \"narco\",\n  \"ikats\",\n  \"whorl\",\n  \"jinks\",\n  \"tizzy\",\n  \"weepy\",\n  \"posit\",\n  \"marge\",\n  \"vegan\",\n  \"clops\",\n  \"numbs\",\n  \"reeks\",\n  \"rubes\",\n  \"rower\",\n  \"biped\",\n  \"tiffs\",\n  \"hocus\",\n  \"hammy\",\n  \"bunco\",\n  \"fixit\",\n  \"tykes\",\n  \"chaws\",\n  \"yucky\",\n  \"hokey\",\n  \"resew\",\n  \"maven\",\n  \"adman\",\n  \"scuzz\",\n  \"slogs\",\n  \"souse\",\n  \"nacho\",\n  \"mimed\",\n  \"melds\",\n  \"boffo\",\n  \"debit\",\n  \"pinup\",\n  \"vagus\",\n  \"gulag\",\n  \"randy\",\n  \"bosun\",\n  \"educe\",\n  \"faxes\",\n  \"auras\",\n  \"pesto\",\n  \"antsy\",\n  \"betas\",\n  \"fizzy\",\n  \"dorky\",\n  \"snits\",\n  \"moxie\",\n  \"thane\",\n  \"mylar\",\n  \"nobby\",\n  \"gamin\",\n  \"gouty\",\n  \"esses\",\n  \"goyim\",\n  \"paned\",\n  \"druid\",\n  \"jades\",\n  \"rehab\",\n  \"gofer\",\n  \"tzars\",\n  \"octet\",\n  \"homed\",\n  \"socko\",\n  \"dorks\",\n  \"eared\",\n  \"anted\",\n  \"elide\",\n  \"fazes\",\n  \"oxbow\",\n  \"dowse\",\n  \"situs\",\n  \"macaw\",\n  \"scone\",\n  \"drily\",\n  \"hyper\",\n  \"salsa\",\n  \"mooch\",\n  \"gated\",\n  \"unjam\",\n  \"lipid\",\n  \"mitre\",\n  \"venal\",\n  \"knish\",\n  \"ritzy\",\n  \"divas\",\n  \"torus\",\n  \"mange\",\n  \"dimer\",\n  \"recut\",\n  \"meson\",\n  \"wined\",\n  \"fends\",\n  \"phage\",\n  \"fiats\",\n  \"caulk\",\n  \"cavil\",\n  \"panty\",\n  \"roans\",\n  \"bilks\",\n  \"hones\",\n  \"botch\",\n  \"estop\",\n  \"sully\",\n  \"sooth\",\n  \"gelds\",\n  \"ahold\",\n  \"raper\",\n  \"pager\",\n  \"fixer\",\n  \"infix\",\n  \"hicks\",\n  \"tuxes\",\n  \"plebe\",\n  \"twits\",\n  \"abash\",\n  \"twixt\",\n  \"wacko\",\n  \"primp\",\n  \"nabla\",\n  \"girts\",\n  \"miffs\",\n  \"emote\",\n  \"xerox\",\n  \"rebid\",\n  \"shahs\",\n  \"rutty\",\n  \"grout\",\n  \"grift\",\n  \"deify\",\n  \"biddy\",\n  \"kopek\",\n  \"semis\",\n  \"bries\",\n  \"acmes\",\n  \"piton\",\n  \"hussy\",\n  \"torts\",\n  \"disco\",\n  \"whore\",\n  \"boozy\",\n  \"gibed\",\n  \"vamps\",\n  \"amour\",\n  \"soppy\",\n  \"gonzo\",\n  \"durst\",\n  \"wader\",\n  \"tutus\",\n  \"perms\",\n  \"catty\",\n  \"glitz\",\n  \"brigs\",\n  \"nerds\",\n  \"barmy\",\n  \"gizmo\",\n  \"owlet\",\n  \"sayer\",\n  \"molls\",\n  \"shard\",\n  \"whops\",\n  \"comps\",\n  \"corer\",\n  \"colas\",\n  \"matte\",\n  \"droid\",\n  \"ploys\",\n  \"vapid\",\n  \"cairn\",\n  \"deism\",\n  \"mixup\",\n  \"yikes\",\n  \"prosy\",\n  \"raker\",\n  \"flubs\",\n  \"whish\",\n  \"reify\",\n  \"craps\",\n  \"shags\",\n  \"clone\",\n  \"hazed\",\n  \"macho\",\n  \"recto\",\n  \"refix\",\n  \"drams\",\n  \"biker\",\n  \"aquas\",\n  \"porky\",\n  \"doyen\",\n  \"exude\",\n  \"goofs\",\n  \"divvy\",\n  \"noels\",\n  \"jived\",\n  \"hulky\",\n  \"cager\",\n  \"harpy\",\n  \"oldie\",\n  \"vivas\",\n  \"admix\",\n  \"codas\",\n  \"zilch\",\n  \"deist\",\n  \"orcas\",\n  \"retro\",\n  \"pilaf\",\n  \"parse\",\n  \"rants\",\n  \"zingy\",\n  \"toddy\",\n  \"chiff\",\n  \"micro\",\n  \"veeps\",\n  \"girly\",\n  \"nexus\",\n  \"demos\",\n  \"bibbs\",\n  \"antes\",\n  \"lulus\",\n  \"gnarl\",\n  \"zippy\",\n  \"ivied\",\n  \"epees\",\n  \"wimps\",\n  \"tromp\",\n  \"grail\",\n  \"yoyos\",\n  \"poufs\",\n  \"hales\",\n  \"roust\",\n  \"cabal\",\n  \"rawer\",\n  \"pampa\",\n  \"mosey\",\n  \"kefir\",\n  \"burgs\",\n  \"unmet\",\n  \"cuspy\",\n  \"boobs\",\n  \"boons\",\n  \"hypes\",\n  \"dynes\",\n  \"nards\",\n  \"lanai\",\n  \"yogis\",\n  \"sepal\",\n  \"quark\",\n  \"toked\",\n  \"prate\",\n  \"ayins\",\n  \"hawed\",\n  \"swigs\",\n  \"vitas\",\n  \"toker\",\n  \"doper\",\n  \"bossa\",\n  \"linty\",\n  \"foist\",\n  \"mondo\",\n  \"stash\",\n  \"kayos\",\n  \"twerp\",\n  \"zesty\",\n  \"capon\",\n  \"wimpy\",\n  \"rewed\",\n  \"fungo\",\n  \"tarot\",\n  \"frosh\",\n  \"kabob\",\n  \"pinko\",\n  \"redid\",\n  \"mimeo\",\n  \"heist\",\n  \"tarps\",\n  \"lamas\",\n  \"sutra\",\n  \"dinar\",\n  \"whams\",\n  \"busty\",\n  \"spays\",\n  \"mambo\",\n  \"nabob\",\n  \"preps\",\n  \"odour\",\n  \"cabby\",\n  \"conks\",\n  \"sluff\",\n  \"dados\",\n  \"houri\",\n  \"swart\",\n  \"balms\",\n  \"gutsy\",\n  \"faxed\",\n  \"egads\",\n  \"pushy\",\n  \"retry\",\n  \"agora\",\n  \"drubs\",\n  \"daffy\",\n  \"chits\",\n  \"mufti\",\n  \"karma\",\n  \"lotto\",\n  \"toffs\",\n  \"burps\",\n  \"deuce\",\n  \"zings\",\n  \"kappa\",\n  \"clads\",\n  \"doggy\",\n  \"duper\",\n  \"scams\",\n  \"ogler\",\n  \"mimes\",\n  \"throe\",\n  \"zetas\",\n  \"waled\",\n  \"promo\",\n  \"blats\",\n  \"muffs\",\n  \"oinks\",\n  \"viand\",\n  \"coset\",\n  \"finks\",\n  \"faddy\",\n  \"minis\",\n  \"snafu\",\n  \"sauna\",\n  \"usury\",\n  \"muxes\",\n  \"craws\",\n  \"stats\",\n  \"condo\",\n  \"coxes\",\n  \"loopy\",\n  \"dorms\",\n  \"ascot\",\n  \"dippy\",\n  \"execs\",\n  \"dopey\",\n  \"envoi\",\n  \"umpty\",\n  \"gismo\",\n  \"fazed\",\n  \"strop\",\n  \"jives\",\n  \"slims\",\n  \"batik\",\n  \"pings\",\n  \"sonly\",\n  \"leggo\",\n  \"pekoe\",\n  \"prawn\",\n  \"luaus\",\n  \"campy\",\n  \"oodle\",\n  \"prexy\",\n  \"proms\",\n  \"touts\",\n  \"ogles\",\n  \"tweet\",\n  \"toady\",\n  \"naiad\",\n  \"hider\",\n  \"nuked\",\n  \"fatso\",\n  \"sluts\",\n  \"obits\",\n  \"narcs\",\n  \"tyros\",\n  \"delis\",\n  \"wooer\",\n  \"hyped\",\n  \"poset\",\n  \"byway\",\n  \"texas\",\n  \"scrod\",\n  \"avows\",\n  \"futon\",\n  \"torte\",\n  \"tuple\",\n  \"carom\",\n  \"kebab\",\n  \"tamps\",\n  \"jilts\",\n  \"duals\",\n  \"artsy\",\n  \"repro\",\n  \"modem\",\n  \"toped\",\n  \"psych\",\n  \"sicko\",\n  \"klutz\",\n  \"tarns\",\n  \"coxed\",\n  \"drays\",\n  \"cloys\",\n  \"anded\",\n  \"piker\",\n  \"aimer\",\n  \"suras\",\n  \"limos\",\n  \"flack\",\n  \"hapax\",\n  \"dutch\",\n  \"mucky\",\n  \"shire\",\n  \"klieg\",\n  \"staph\",\n  \"layup\",\n  \"tokes\",\n  \"axing\",\n  \"toper\",\n  \"duvet\",\n  \"cowry\",\n  \"profs\",\n  \"blahs\",\n  \"addle\",\n  \"sudsy\",\n  \"batty\",\n  \"coifs\",\n  \"suety\",\n  \"gabby\",\n  \"hafta\",\n  \"pitas\",\n  \"gouda\",\n  \"deice\",\n  \"taupe\",\n  \"topes\",\n  \"duchy\",\n  \"nitro\",\n  \"carny\",\n  \"limey\",\n  \"orals\",\n  \"hirer\",\n  \"taxer\",\n  \"roils\",\n  \"ruble\",\n  \"elate\",\n  \"dolor\",\n  \"wryer\",\n  \"snots\",\n  \"quais\",\n  \"coked\",\n  \"gimel\",\n  \"gorse\",\n  \"minas\",\n  \"goest\",\n  \"agape\",\n  \"manta\",\n  \"jings\",\n  \"iliac\",\n  \"admen\",\n  \"offen\",\n  \"cills\",\n  \"offal\",\n  \"lotta\",\n  \"bolas\",\n  \"thwap\",\n  \"alway\",\n  \"boggy\",\n  \"donna\",\n  \"locos\",\n  \"belay\",\n  \"gluey\",\n  \"bitsy\",\n  \"mimsy\",\n  \"hilar\",\n  \"outta\",\n  \"vroom\",\n  \"fetal\",\n  \"raths\",\n  \"renal\",\n  \"dyads\",\n  \"crocs\",\n  \"vires\",\n  \"culpa\",\n  \"kivas\",\n  \"feist\",\n  \"teats\",\n  \"thats\",\n  \"yawls\",\n  \"whens\",\n  \"abaca\",\n  \"ohhhh\",\n  \"aphis\",\n  \"fusty\",\n  \"eclat\",\n  \"perdu\",\n  \"mayst\",\n  \"exeat\",\n  \"molly\",\n  \"supra\",\n  \"wetly\",\n  \"plasm\",\n  \"buffa\",\n  \"semen\",\n  \"pukka\",\n  \"tagua\",\n  \"paras\",\n  \"stoat\",\n  \"secco\",\n  \"carte\",\n  \"haute\",\n  \"molal\",\n  \"shads\",\n  \"forma\",\n  \"ovoid\",\n  \"pions\",\n  \"modus\",\n  \"bueno\",\n  \"rheum\",\n  \"scurf\",\n  \"parer\",\n  \"ephah\",\n  \"doest\",\n  \"sprue\",\n  \"flams\",\n  \"molto\",\n  \"dieth\",\n  \"choos\",\n  \"miked\",\n  \"bronx\",\n  \"goopy\",\n  \"bally\",\n  \"plumy\",\n  \"moony\",\n  \"morts\",\n  \"yourn\",\n  \"bipod\",\n  \"spume\",\n  \"algal\",\n  \"ambit\",\n  \"mucho\",\n  \"spued\",\n  \"dozer\",\n  \"harum\",\n  \"groat\",\n  \"skint\",\n  \"laude\",\n  \"thrum\",\n  \"pappy\",\n  \"oncet\",\n  \"rimed\",\n  \"gigue\",\n  \"limed\",\n  \"plein\",\n  \"redly\",\n  \"humpf\",\n  \"lites\",\n  \"seest\",\n  \"grebe\",\n  \"absit\",\n  \"thanx\",\n  \"pshaw\",\n  \"yawps\",\n  \"plats\",\n  \"payed\",\n  \"areal\",\n  \"tilth\",\n  \"youse\",\n  \"gwine\",\n  \"thees\",\n  \"watsa\",\n  \"lento\",\n  \"spitz\",\n  \"yawed\",\n  \"gipsy\",\n  \"sprat\",\n  \"cornu\",\n  \"amahs\",\n  \"blowy\",\n  \"wahoo\",\n  \"lubra\",\n  \"mecum\",\n  \"whooo\",\n  \"coqui\",\n  \"sabra\",\n  \"edema\",\n  \"mrads\",\n  \"dicot\",\n  \"astro\",\n  \"kited\",\n  \"ouzel\",\n  \"didos\",\n  \"grata\",\n  \"bonne\",\n  \"axmen\",\n  \"klunk\",\n  \"summa\",\n  \"laves\",\n  \"purls\",\n  \"yawny\",\n  \"teary\",\n  \"masse\",\n  \"largo\",\n  \"bazar\",\n  \"pssst\",\n  \"sylph\",\n  \"lulab\",\n  \"toque\",\n  \"fugit\",\n  \"plunk\",\n  \"ortho\",\n  \"lucre\",\n  \"cooch\",\n  \"whipt\",\n  \"folky\",\n  \"tyres\",\n  \"wheee\",\n  \"corky\",\n  \"injun\",\n  \"solon\",\n  \"didot\",\n  \"kerfs\",\n  \"rayed\",\n  \"wassa\",\n  \"chile\",\n  \"begat\",\n  \"nippy\",\n  \"litre\",\n  \"magna\",\n  \"rebox\",\n  \"hydro\",\n  \"milch\",\n  \"brent\",\n  \"gyves\",\n  \"lazed\",\n  \"feued\",\n  \"mavis\",\n  \"inapt\",\n  \"baulk\",\n  \"casus\",\n  \"scrum\",\n  \"wised\",\n  \"fossa\",\n  \"dower\",\n  \"kyrie\",\n  \"bhoys\",\n  \"scuse\",\n  \"feuar\",\n  \"ohmic\",\n  \"juste\",\n  \"ukase\",\n  \"beaux\",\n  \"tusky\",\n  \"orate\",\n  \"musta\",\n  \"lardy\",\n  \"intra\",\n  \"quiff\",\n  \"epsom\",\n  \"neath\",\n  \"ocher\",\n  \"tared\",\n  \"homme\",\n  \"mezzo\",\n  \"corms\",\n  \"psoas\",\n  \"beaky\",\n  \"terry\",\n  \"infra\",\n  \"spivs\",\n  \"tuans\",\n  \"belli\",\n  \"bergs\",\n  \"anima\",\n  \"weirs\",\n  \"mahua\",\n  \"scops\",\n  \"manse\",\n  \"titre\",\n  \"curia\",\n  \"kebob\",\n  \"cycad\",\n  \"talky\",\n  \"fucks\",\n  \"tapis\",\n  \"amide\",\n  \"dolce\",\n  \"sloes\",\n  \"jakes\",\n  \"russe\",\n  \"blash\",\n  \"tutti\",\n  \"pruta\",\n  \"panga\",\n  \"blebs\",\n  \"tench\",\n  \"swarf\",\n  \"herem\",\n  \"missy\",\n  \"merse\",\n  \"pawky\",\n  \"limen\",\n  \"vivre\",\n  \"chert\",\n  \"unsee\",\n  \"tiros\",\n  \"brack\",\n  \"foots\",\n  \"welsh\",\n  \"fosse\",\n  \"knops\",\n  \"ileum\",\n  \"noire\",\n  \"firma\",\n  \"podgy\",\n  \"laird\",\n  \"thunk\",\n  \"shute\",\n  \"rowan\",\n  \"shoji\",\n  \"poesy\",\n  \"uncap\",\n  \"fames\",\n  \"glees\",\n  \"costa\",\n  \"turps\",\n  \"fores\",\n  \"solum\",\n  \"imago\",\n  \"byres\",\n  \"fondu\",\n  \"coney\",\n  \"polis\",\n  \"dictu\",\n  \"kraal\",\n  \"sherd\",\n  \"mumbo\",\n  \"wroth\",\n  \"chars\",\n  \"unbox\",\n  \"vacuo\",\n  \"slued\",\n  \"weest\",\n  \"hades\",\n  \"wiled\",\n  \"syncs\",\n  \"muser\",\n  \"excon\",\n  \"hoars\",\n  \"sibyl\",\n  \"passe\",\n  \"joeys\",\n  \"lotsa\",\n  \"lepta\",\n  \"shays\",\n  \"bocks\",\n  \"endue\",\n  \"darer\",\n  \"nones\",\n  \"ileus\",\n  \"plash\",\n  \"busby\",\n  \"wheal\",\n  \"buffo\",\n  \"yobbo\",\n  \"biles\",\n  \"poxes\",\n  \"rooty\",\n  \"licit\",\n  \"terce\",\n  \"bromo\",\n  \"hayey\",\n  \"dweeb\",\n  \"imbed\",\n  \"saran\",\n  \"bruit\",\n  \"punky\",\n  \"softs\",\n  \"biffs\",\n  \"loppy\",\n  \"agars\",\n  \"aquae\",\n  \"livre\",\n  \"biome\",\n  \"bunds\",\n  \"shews\",\n  \"diems\",\n  \"ginny\",\n  \"degum\",\n  \"polos\",\n  \"desex\",\n  \"unman\",\n  \"dungy\",\n  \"vitam\",\n  \"wedgy\",\n  \"glebe\",\n  \"apers\",\n  \"ridgy\",\n  \"roids\",\n  \"wifey\",\n  \"vapes\",\n  \"whoas\",\n  \"bunko\",\n  \"yolky\",\n  \"ulnas\",\n  \"reeky\",\n  \"bodge\",\n  \"brant\",\n  \"davit\",\n  \"deque\",\n  \"liker\",\n  \"jenny\",\n  \"tacts\",\n  \"fulls\",\n  \"treap\",\n  \"ligne\",\n  \"acked\",\n  \"refry\",\n  \"vower\",\n  \"aargh\",\n  \"churl\",\n  \"momma\",\n  \"gaols\",\n  \"whump\",\n  \"arras\",\n  \"marls\",\n  \"tiler\",\n  \"grogs\",\n  \"memes\",\n  \"midis\",\n  \"tided\",\n  \"haler\",\n  \"duces\",\n  \"twiny\",\n  \"poste\",\n  \"unrig\",\n  \"prise\",\n  \"drabs\",\n  \"quids\",\n  \"facer\",\n  \"spier\",\n  \"baric\",\n  \"geoid\",\n  \"remap\",\n  \"trier\",\n  \"gunks\",\n  \"steno\",\n  \"stoma\",\n  \"airer\",\n  \"ovate\",\n  \"torah\",\n  \"apian\",\n  \"smuts\",\n  \"pocks\",\n  \"yurts\",\n  \"exurb\",\n  \"defog\",\n  \"nuder\",\n  \"bosky\",\n  \"nimbi\",\n  \"mothy\",\n  \"joyed\",\n  \"labia\",\n  \"pards\",\n  \"jammy\",\n  \"bigly\",\n  \"faxer\",\n  \"hoppy\",\n  \"nurbs\",\n  \"cotes\",\n  \"dishy\",\n  \"vised\",\n  \"celeb\",\n  \"pismo\",\n  \"casas\",\n  \"withs\",\n  \"dodgy\",\n  \"scudi\",\n  \"mungs\",\n  \"muons\",\n  \"ureas\",\n  \"ioctl\",\n  \"unhip\",\n  \"krone\",\n  \"sager\",\n  \"verst\",\n  \"expat\",\n  \"gronk\",\n  \"uvula\",\n  \"shawm\",\n  \"bilgy\",\n  \"braes\",\n  \"cento\",\n  \"webby\",\n  \"lippy\",\n  \"gamic\",\n  \"lordy\",\n  \"mazed\",\n  \"tings\",\n  \"shoat\",\n  \"faery\",\n  \"wirer\",\n  \"diazo\",\n  \"carer\",\n  \"rater\",\n  \"greps\",\n  \"rente\",\n  \"zloty\",\n  \"viers\",\n  \"unapt\",\n  \"poops\",\n  \"fecal\",\n  \"kepis\",\n  \"taxon\",\n  \"eyers\",\n  \"wonts\",\n  \"spina\",\n  \"stoae\",\n  \"yenta\",\n  \"pooey\",\n  \"buret\",\n  \"japan\",\n  \"bedew\",\n  \"hafts\",\n  \"selfs\",\n  \"oared\",\n  \"herby\",\n  \"pryer\",\n  \"oakum\",\n  \"dinks\",\n  \"titty\",\n  \"sepoy\",\n  \"penes\",\n  \"fusee\",\n  \"winey\",\n  \"gimps\",\n  \"nihil\",\n  \"rille\",\n  \"giber\",\n  \"ousel\",\n  \"umiak\",\n  \"cuppy\",\n  \"hames\",\n  \"shits\",\n  \"azine\",\n  \"glads\",\n  \"tacet\",\n  \"bumph\",\n  \"coyer\",\n  \"honky\",\n  \"gamer\",\n  \"gooky\",\n  \"waspy\",\n  \"sedgy\",\n  \"bents\",\n  \"varia\",\n  \"djinn\",\n  \"junco\",\n  \"pubic\",\n  \"wilco\",\n  \"lazes\",\n  \"idyls\",\n  \"lupus\",\n  \"rives\",\n  \"snood\",\n  \"schmo\",\n  \"spazz\",\n  \"finis\",\n  \"noter\",\n  \"pavan\",\n  \"orbed\",\n  \"bates\",\n  \"pipet\",\n  \"baddy\",\n  \"goers\",\n  \"shako\",\n  \"stets\",\n  \"sebum\",\n  \"seeth\",\n  \"lobar\",\n  \"raver\",\n  \"ajuga\",\n  \"riced\",\n  \"velds\",\n  \"dribs\",\n  \"ville\",\n  \"dhows\",\n  \"unsew\",\n  \"halma\",\n  \"krona\",\n  \"limby\",\n  \"jiffs\",\n  \"treys\",\n  \"bauds\",\n  \"pffft\",\n  \"mimer\",\n  \"plebs\",\n  \"caner\",\n  \"jiber\",\n  \"cuppa\",\n  \"washy\",\n  \"chuff\",\n  \"unarm\",\n  \"yukky\",\n  \"styes\",\n  \"waker\",\n  \"flaks\",\n  \"maces\",\n  \"rimes\",\n  \"gimpy\",\n  \"guano\",\n  \"liras\",\n  \"kapok\",\n  \"scuds\",\n  \"bwana\",\n  \"oring\",\n  \"aider\",\n  \"prier\",\n  \"klugy\",\n  \"monte\",\n  \"golem\",\n  \"velar\",\n  \"firer\",\n  \"pieta\",\n  \"umbel\",\n  \"campo\",\n  \"unpeg\",\n  \"fovea\",\n  \"abeam\",\n  \"boson\",\n  \"asker\",\n  \"goths\",\n  \"vocab\",\n  \"vined\",\n  \"trows\",\n  \"tikis\",\n  \"loper\",\n  \"indie\",\n  \"boffs\",\n  \"spang\",\n  \"grapy\",\n  \"tater\",\n  \"ichor\",\n  \"kilty\",\n  \"lochs\",\n  \"supes\",\n  \"degas\",\n  \"flics\",\n  \"torsi\",\n  \"beths\",\n  \"weber\",\n  \"resaw\",\n  \"lawny\",\n  \"coven\",\n  \"mujik\",\n  \"relet\",\n  \"therm\",\n  \"heigh\",\n  \"shnor\",\n  \"trued\",\n  \"zayin\",\n  \"liest\",\n  \"barfs\",\n  \"bassi\",\n  \"qophs\",\n  \"roily\",\n  \"flabs\",\n  \"punny\",\n  \"okras\",\n  \"hanks\",\n  \"dipso\",\n  \"nerfs\",\n  \"fauns\",\n  \"calla\",\n  \"pseud\",\n  \"lurer\",\n  \"magus\",\n  \"obeah\",\n  \"atria\",\n  \"twink\",\n  \"palmy\",\n  \"pocky\",\n  \"pends\",\n  \"recta\",\n  \"plonk\",\n  \"slaws\",\n  \"keens\",\n  \"nicad\",\n  \"pones\",\n  \"inker\",\n  \"whews\",\n  \"groks\",\n  \"mosts\",\n  \"trews\",\n  \"ulnar\",\n  \"gyppy\",\n  \"cocas\",\n  \"expos\",\n  \"eruct\",\n  \"oiler\",\n  \"vacua\",\n  \"dreck\",\n  \"dater\",\n  \"arums\",\n  \"tubal\",\n  \"voxel\",\n  \"dixit\",\n  \"beery\",\n  \"assai\",\n  \"lades\",\n  \"actin\",\n  \"ghoti\",\n  \"buzzy\",\n  \"meads\",\n  \"grody\",\n  \"ribby\",\n  \"clews\",\n  \"creme\",\n  \"email\",\n  \"pyxie\",\n  \"kulak\",\n  \"bocci\",\n  \"rived\",\n  \"duddy\",\n  \"hoper\",\n  \"lapin\",\n  \"wonks\",\n  \"petri\",\n  \"phial\",\n  \"fugal\",\n  \"holon\",\n  \"boomy\",\n  \"duomo\",\n  \"musos\",\n  \"shier\",\n  \"hayer\",\n  \"porgy\",\n  \"hived\",\n  \"litho\",\n  \"fisty\",\n  \"stagy\",\n  \"luvya\",\n  \"maria\",\n  \"smogs\",\n  \"asana\",\n  \"yogic\",\n  \"slomo\",\n  \"fawny\",\n  \"amine\",\n  \"wefts\",\n  \"gonad\",\n  \"twirp\",\n  \"brava\",\n  \"plyer\",\n  \"fermi\",\n  \"loges\",\n  \"niter\",\n  \"revet\",\n  \"unate\",\n  \"gyved\",\n  \"totty\",\n  \"zappy\",\n  \"honer\",\n  \"giros\",\n  \"dicer\",\n  \"calks\",\n  \"luxes\",\n  \"monad\",\n  \"cruft\",\n  \"quoin\",\n  \"fumer\",\n  \"amped\",\n  \"shlep\",\n  \"vinca\",\n  \"yahoo\",\n  \"vulva\",\n  \"zooey\",\n  \"dryad\",\n  \"nixie\",\n  \"moper\",\n  \"iambs\",\n  \"lunes\",\n  \"nudie\",\n  \"limns\",\n  \"weals\",\n  \"nohow\",\n  \"miaow\",\n  \"gouts\",\n  \"mynas\",\n  \"mazer\",\n  \"kikes\",\n  \"oxeye\",\n  \"stoup\",\n  \"jujus\",\n  \"debar\",\n  \"pubes\",\n  \"taels\",\n  \"defun\",\n  \"rands\",\n  \"blear\",\n  \"paver\",\n  \"goosy\",\n  \"sprog\",\n  \"oleos\",\n  \"toffy\",\n  \"pawer\",\n  \"maced\",\n  \"crits\",\n  \"kluge\",\n  \"tubed\",\n  \"sahib\",\n  \"ganef\",\n  \"scats\",\n  \"sputa\",\n  \"vaned\",\n  \"acned\",\n  \"taxol\",\n  \"plink\",\n  \"oweth\",\n  \"tribs\",\n  \"resay\",\n  \"boule\",\n  \"thous\",\n  \"haply\",\n  \"glans\",\n  \"maxis\",\n  \"bezel\",\n  \"antis\",\n  \"porks\",\n  \"quoit\",\n  \"alkyd\",\n  \"glary\",\n  \"beamy\",\n  \"hexad\",\n  \"bonks\",\n  \"tecum\",\n  \"kerbs\",\n  \"filar\",\n  \"frier\",\n  \"redux\",\n  \"abuzz\",\n  \"fader\",\n  \"shoer\",\n  \"couth\",\n  \"trues\",\n  \"guyed\",\n  \"goony\",\n  \"booky\",\n  \"fuzes\",\n  \"hurly\",\n  \"genet\",\n  \"hodad\",\n  \"calix\",\n  \"filer\",\n  \"pawls\",\n  \"iodic\",\n  \"utero\",\n  \"henge\",\n  \"unsay\",\n  \"liers\",\n  \"piing\",\n  \"weald\",\n  \"sexed\",\n  \"folic\",\n  \"poxed\",\n  \"cunts\",\n  \"anile\",\n  \"kiths\",\n  \"becks\",\n  \"tatty\",\n  \"plena\",\n  \"rebar\",\n  \"abled\",\n  \"toyer\",\n  \"attar\",\n  \"teaks\",\n  \"aioli\",\n  \"awing\",\n  \"anent\",\n  \"feces\",\n  \"redip\",\n  \"wists\",\n  \"prats\",\n  \"mesne\",\n  \"muter\",\n  \"smurf\",\n  \"owest\",\n  \"bahts\",\n  \"lossy\",\n  \"ftped\",\n  \"hunky\",\n  \"hoers\",\n  \"slier\",\n  \"sicks\",\n  \"fatly\",\n  \"delft\",\n  \"hiver\",\n  \"himbo\",\n  \"pengo\",\n  \"busks\",\n  \"loxes\",\n  \"zonks\",\n  \"ilium\",\n  \"aport\",\n  \"ikons\",\n  \"mulct\",\n  \"reeve\",\n  \"civvy\",\n  \"canna\",\n  \"barfy\",\n  \"kaiak\",\n  \"scudo\",\n  \"knout\",\n  \"gaper\",\n  \"bhang\",\n  \"pease\",\n  \"uteri\",\n  \"lases\",\n  \"paten\",\n  \"rasae\",\n  \"axels\",\n  \"stoas\",\n  \"ombre\",\n  \"styli\",\n  \"gunky\",\n  \"hazer\",\n  \"kenaf\",\n  \"ahoys\",\n  \"ammos\",\n  \"weeny\",\n  \"urger\",\n  \"kudzu\",\n  \"paren\",\n  \"bolos\",\n  \"fetor\",\n  \"nitty\",\n  \"techy\",\n  \"lieth\",\n  \"somas\",\n  \"darky\",\n  \"villi\",\n  \"gluon\",\n  \"janes\",\n  \"cants\",\n  \"farts\",\n  \"socle\",\n  \"jinns\",\n  \"ruing\",\n  \"slily\",\n  \"ricer\",\n  \"hadda\",\n  \"wowee\",\n  \"rices\",\n  \"nerts\",\n  \"cauls\",\n  \"swive\",\n  \"lilty\",\n  \"micks\",\n  \"arity\",\n  \"pasha\",\n  \"finif\",\n  \"oinky\",\n  \"gutty\",\n  \"tetra\",\n  \"wises\",\n  \"wolds\",\n  \"balds\",\n  \"picot\",\n  \"whats\",\n  \"shiki\",\n  \"bungs\",\n  \"snarf\",\n  \"legos\",\n  \"dungs\",\n  \"stogy\",\n  \"berms\",\n  \"tangs\",\n  \"vails\",\n  \"roods\",\n  \"morel\",\n  \"sware\",\n  \"elans\",\n  \"latus\",\n  \"gules\",\n  \"razer\",\n  \"doxie\",\n  \"buena\",\n  \"overs\",\n  \"gutta\",\n  \"zincs\",\n  \"nates\",\n  \"kirks\",\n  \"tikes\",\n  \"donee\",\n  \"jerry\",\n  \"mohel\",\n  \"ceder\",\n  \"doges\",\n  \"unmap\",\n  \"folia\",\n  \"rawly\",\n  \"snark\",\n  \"topoi\",\n  \"ceils\",\n  \"immix\",\n  \"yores\",\n  \"diest\",\n  \"bubba\",\n  \"pomps\",\n  \"forky\",\n  \"turdy\",\n  \"lawzy\",\n  \"poohs\",\n  \"worts\",\n  \"gloms\",\n  \"beano\",\n  \"muley\",\n  \"barky\",\n  \"tunny\",\n  \"auric\",\n  \"funks\",\n  \"gaffs\",\n  \"cordy\",\n  \"curdy\",\n  \"lisle\",\n  \"toric\",\n  \"soyas\",\n  \"reman\",\n  \"mungy\",\n  \"carpy\",\n  \"apish\",\n  \"oaten\",\n  \"gappy\",\n  \"aurae\",\n  \"bract\",\n  \"rooky\",\n  \"axled\",\n  \"burry\",\n  \"sizer\",\n  \"proem\",\n  \"turfy\",\n  \"impro\",\n  \"mashy\",\n  \"miens\",\n  \"nonny\",\n  \"olios\",\n  \"grook\",\n  \"sates\",\n  \"agley\",\n  \"corgi\",\n  \"dashy\",\n  \"doser\",\n  \"dildo\",\n  \"apsos\",\n  \"xored\",\n  \"laker\",\n  \"playa\",\n  \"selah\",\n  \"malty\",\n  \"dulse\",\n  \"frigs\",\n  \"demit\",\n  \"whoso\",\n  \"rials\",\n  \"sawer\",\n  \"spics\",\n  \"bedim\",\n  \"snugs\",\n  \"fanin\",\n  \"azoic\",\n  \"icers\",\n  \"suers\",\n  \"wizen\",\n  \"koine\",\n  \"topos\",\n  \"shirr\",\n  \"rifer\",\n  \"feral\",\n  \"laded\",\n  \"lased\",\n  \"turds\",\n  \"swede\",\n  \"easts\",\n  \"cozen\",\n  \"unhit\",\n  \"pally\",\n  \"aitch\",\n  \"sedum\",\n  \"coper\",\n  \"ruche\",\n  \"geeks\",\n  \"swags\",\n  \"etext\",\n  \"algin\",\n  \"offed\",\n  \"ninja\",\n  \"holer\",\n  \"doter\",\n  \"toter\",\n  \"besot\",\n  \"dicut\",\n  \"macer\",\n  \"peens\",\n  \"pewit\",\n  \"redox\",\n  \"poler\",\n  \"yecch\",\n  \"fluky\",\n  \"doeth\",\n  \"twats\",\n  \"cruds\",\n  \"bebug\",\n  \"bider\",\n  \"stele\",\n  \"hexer\",\n  \"wests\",\n  \"gluer\",\n  \"pilau\",\n  \"abaft\",\n  \"whelm\",\n  \"lacer\",\n  \"inode\",\n  \"tabus\",\n  \"gator\",\n  \"cuing\",\n  \"refly\",\n  \"luted\",\n  \"cukes\",\n  \"bairn\",\n  \"bight\",\n  \"arses\",\n  \"crump\",\n  \"loggy\",\n  \"blini\",\n  \"spoor\",\n  \"toyon\",\n  \"harks\",\n  \"wazoo\",\n  \"fenny\",\n  \"naves\",\n  \"keyer\",\n  \"tufas\",\n  \"morph\",\n  \"rajas\",\n  \"typal\",\n  \"spiff\",\n  \"oxlip\",\n  \"unban\",\n  \"mussy\",\n  \"finny\",\n  \"rimer\",\n  \"login\",\n  \"molas\",\n  \"cirri\",\n  \"huzza\",\n  \"agone\",\n  \"unsex\",\n  \"unwon\",\n  \"peats\",\n  \"toile\",\n  \"zombi\",\n  \"dewed\",\n  \"nooky\",\n  \"alkyl\",\n  \"ixnay\",\n  \"dovey\",\n  \"holey\",\n  \"cuber\",\n  \"amyls\",\n  \"podia\",\n  \"chino\",\n  \"apnea\",\n  \"prims\",\n  \"lycra\",\n  \"johns\",\n  \"primo\",\n  \"fatwa\",\n  \"egger\",\n  \"hempy\",\n  \"snook\",\n  \"hying\",\n  \"fuzed\",\n  \"barms\",\n  \"crink\",\n  \"moots\",\n  \"yerba\",\n  \"rhumb\",\n  \"unarc\",\n  \"direr\",\n  \"munge\",\n  \"eland\",\n  \"nares\",\n  \"wrier\",\n  \"noddy\",\n  \"atilt\",\n  \"jukes\",\n  \"ender\",\n  \"thens\",\n  \"unfix\",\n  \"doggo\",\n  \"zooks\",\n  \"diddy\",\n  \"shmoo\",\n  \"brusk\",\n  \"prest\",\n  \"curer\",\n  \"pasts\",\n  \"kelpy\",\n  \"bocce\",\n  \"kicky\",\n  \"taros\",\n  \"lings\",\n  \"dicky\",\n  \"nerdy\",\n  \"abend\",\n  \"stela\",\n  \"biggy\",\n  \"laved\",\n  \"baldy\",\n  \"pubis\",\n  \"gooks\",\n  \"wonky\",\n  \"stied\",\n  \"hypos\",\n  \"assed\",\n  \"spumy\",\n  \"osier\",\n  \"roble\",\n  \"rumba\",\n  \"biffy\",\n  \"pupal\",\n];\n","import { startOfToday, startOfYesterday } from 'date-fns';\n\nexport const getToday = () => startOfToday();\nexport const getYesterday = () => startOfYesterday();\n","import {\n  addDays,\n  differenceInDays,\n  formatISO,\n  parseISO,\n  startOfDay,\n} from \"date-fns\";\nimport { default as GraphemeSplitter } from \"grapheme-splitter\";\nimport queryString from \"query-string\";\nimport { ENABLE_ARCHIVED_GAMES } from \"../constants/settings\";\nimport {\n  NOT_CONTAINED_MESSAGE,\n  WRONG_SPOT_MESSAGE,\n} from \"../constants/strings\";\nimport { VALID_GUESSES } from \"../constants/validGuesses\";\nimport { WORDS, WORD } from \"../constants/wordlist\";\nimport { getToday } from \"./dateutils\";\nimport { getGuessStatuses } from \"./statuses\";\n// 1 January 2022 Game Epoch\nexport const firstGameDate = new Date(2022, 0);\nexport const periodInDays = 1;\nexport const isWordInWordList = (word) => {\n  return (\n    WORDS.includes(localeAwareLowerCase(word)) ||\n    VALID_GUESSES.includes(localeAwareLowerCase(word))\n  );\n};\nexport const isWinningWord = (word) => {\n  return solution === word;\n};\n// build a set of previously revealed letters - present and correct\n// guess must use correct letters in that space and any other revealed letters\n// also check if all revealed instances of a letter are used (i.e. two C's)\nexport const findFirstUnusedReveal = (word, guesses) => {\n  if (guesses.length === 0) {\n    return false;\n  }\n  const lettersLeftArray = [];\n  const guess = guesses[guesses.length - 1];\n  const statuses = getGuessStatuses(solution, guess);\n  const splitWord = unicodeSplit(word);\n  const splitGuess = unicodeSplit(guess);\n  for (let i = 0; i < splitGuess.length; i++) {\n    if (statuses[i] === \"correct\" || statuses[i] === \"present\") {\n      lettersLeftArray.push(splitGuess[i]);\n    }\n    if (statuses[i] === \"correct\" && splitWord[i] !== splitGuess[i]) {\n      return WRONG_SPOT_MESSAGE(splitGuess[i], i + 1);\n    }\n  }\n  // check for the first unused letter, taking duplicate letters\n  // into account - see issue #198\n  let n;\n  for (const letter of splitWord) {\n    n = lettersLeftArray.indexOf(letter);\n    if (n !== -1) {\n      lettersLeftArray.splice(n, 1);\n    }\n  }\n  if (lettersLeftArray.length > 0) {\n    return NOT_CONTAINED_MESSAGE(lettersLeftArray[0]);\n  }\n  return false;\n};\nexport const unicodeSplit = (word) => {\n  return new GraphemeSplitter().splitGraphemes(word);\n};\nexport const unicodeLength = (word) => {\n  return unicodeSplit(word).length;\n};\nexport const localeAwareLowerCase = (text) => {\n  if (!text) {\n    return;\n  }\n    return process.env.REACT_APP_LOCALE_STRING\n    ? text.toLocaleLowerCase(process.env.REACT_APP_LOCALE_STRING)\n    : text.toLowerCase();\n \n};\nexport const localeAwareUpperCase = (text) => {\n  if (!text) {\n    return;\n  }\n\n return process.env.REACT_APP_LOCALE_STRING\n    ? text.toLocaleUpperCase(process.env.REACT_APP_LOCALE_STRING)\n    : text.toUpperCase();\n};\nexport const getLastGameDate = (today) => {\n  const t = startOfDay(today);\n  let daysSinceLastGame = differenceInDays(firstGameDate, t) % periodInDays;\n  return addDays(t, -daysSinceLastGame);\n};\nexport const getNextGameDate = (today) => {\n  return addDays(getLastGameDate(today), periodInDays);\n};\nexport const isValidGameDate = (date) => {\n  if (date < firstGameDate || date > getToday()) {\n    return false;\n  }\n  return differenceInDays(firstGameDate, date) % periodInDays === 0;\n};\nexport const getIndex = (gameDate) => {\n  let start = firstGameDate;\n  let index = -1;\n  do {\n    index++;\n    start = addDays(start, periodInDays);\n  } while (start <= gameDate);\n  return index;\n};\nexport const getWordOfDay = (index) => {\n\n  if (index < 0) {\n    throw new Error(\"Invalid index\");\n  }\n  const queryString = window.location.search;\n  // if (!queryString) {\n  //  return;\n  // }\n \n  console.log('=====queryString===============================');\n  console.log(queryString);\n  console.log('====================================');\n  const urlParams = new URLSearchParams(queryString);\n  console.log('=====urlParams===============================');\n  console.log(urlParams);\n  console.log('====================================');\n  const currentEncWord = urlParams.get('getword')\n  console.log('=====currentEncWord===============================');\n  console.log(currentEncWord);\n  console.log('====================================');\n  var decodedData = window.atob(currentEncWord); // decode the string\n  console.log('=====decodedData===============================');\n  console.log(decodedData);\n  console.log('====================================');\n\n  \nlet WordBefore = WORD.length\n\n  WORD.push(decodedData.toLowerCase())\n  WORDS.push(decodedData.toLowerCase())\nif (WORD.length > WordBefore) {\n  return localeAwareUpperCase(WORD[index % WORD.length]);\n}\n\n \n};\nexport const getSolution = (gameDate) => {\n \n  const nextGameDate = getNextGameDate(gameDate);\n \n  const index = getIndex(gameDate);\n \n  const wordOfTheDay = getWordOfDay(index);\n  console.log(\"nextGameDate\");\n  console.log(nextGameDate);\n  console.log(\"index\");\n  console.log(index);\n  console.log(\"wordOfTheDay\");\n  console.log(wordOfTheDay);\n\n  return {\n    solution: wordOfTheDay,\n    solutionGameDate: gameDate,\n    solutionIndex: index,\n    tomorrow: nextGameDate.valueOf(),\n  };\n};\nexport const getGameDate = () => {\n \n  if (getIsLatestGame()) {\n    return getToday();\n  }\n  const parsed = queryString.parse(window.location.search);\n  try {\n    const d = startOfDay(parseISO(parsed.d.toString()));\n    if (d >= getToday() || d < firstGameDate) {\n      setGameDate(getToday());\n    }\n    return d;\n  } catch (e) {\n    console.log(e);\n    return getToday();\n  }\n};\nexport const setGameDate = (d) => {\n  try {\n    if (d < getToday()) {\n      window.location.href = \"/?d=\" + formatISO(d, { representation: \"date\" });\n      return;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n  window.location.href = \"/\";\n};\nexport const getIsLatestGame = () => {\n \n  if (!ENABLE_ARCHIVED_GAMES) {\n    return true;\n  }\n  const parsed = queryString.parse(window.location.search);\n\n  return parsed === null || !(\"d\" in parsed);\n};\nexport const {\n  solution,\n  solutionGameDate,\n  solutionIndex,\n  tomorrow,\n} = getSolution(getGameDate());\n","import { unicodeSplit } from \"./words\";\nexport const getStatuses = (solution, guesses) => {\n  const charObj = {};\n  const splitSolution = unicodeSplit(solution);\n  guesses.forEach((word) => {\n    unicodeSplit(word).forEach((letter, i) => {\n      if (!splitSolution.includes(letter)) {\n        // make status absent\n        return (charObj[letter] = \"absent\");\n      }\n      if (letter === splitSolution[i]) {\n        //make status correct\n        return (charObj[letter] = \"correct\");\n      }\n      if (charObj[letter] !== \"correct\") {\n        //make status present\n        return (charObj[letter] = \"present\");\n      }\n    });\n  });\n  return charObj;\n};\nexport const getGuessStatuses = (solution, guess) => {\n  const splitSolution = unicodeSplit(solution);\n  const splitGuess = unicodeSplit(guess);\n  const solutionCharsTaken = splitSolution.map((_) => false);\n  const statuses = Array.from(Array(guess.length));\n  // handle all correct cases first\n  splitGuess.forEach((letter, i) => {\n    if (letter === splitSolution[i]) {\n      statuses[i] = \"correct\";\n      solutionCharsTaken[i] = true;\n      return;\n    }\n  });\n  splitGuess.forEach((letter, i) => {\n    if (statuses[i]) return;\n    if (!splitSolution.includes(letter)) {\n      // handles the absent case\n      statuses[i] = \"absent\";\n      return;\n    }\n    // now we are left with \"present\"s\n    const indexOfPresentChar = splitSolution.findIndex(\n      (x, index) => x === letter && !solutionCharsTaken[index]\n    );\n    if (indexOfPresentChar > -1) {\n      statuses[i] = \"present\";\n      solutionCharsTaken[indexOfPresentChar] = true;\n      return;\n    } else {\n      statuses[i] = \"absent\";\n      return;\n    }\n  });\n  return statuses;\n};\n","import * as React from \"react\";\nimport classnames from \"classnames\";\nimport { REVEAL_TIME_MS } from \"../../constants/settings\";\nimport { getStoredIsHighContrastMode } from \"../../lib/localStorage\";\nexport const Cell = ({\n  value,\n  status,\n  isRevealing,\n  isCompleted,\n  position = 0,\n}) => {\n  const isFilled = value && !isCompleted;\n  const shouldReveal = isRevealing && isCompleted;\n  const animationDelay = `${position * REVEAL_TIME_MS}ms`;\n  const isHighContrast = getStoredIsHighContrastMode();\n  const classes = classnames(\n    \"xxshort:w-11 xxshort:h-11 short:text-2xl short:w-12 short:h-12 w-14 h-14 border-solid border-2 flex items-center justify-center mx-0.5 text-4xl font-bold rounded dark:text-white\",\n    {\n      \"bg-white dark:bg-slate-900 border-slate-200 dark:border-slate-600\": !status,\n      \"border-black dark:border-slate-100\": value && !status,\n      \"absent shadowed bg-slate-400 dark:bg-slate-700 text-white border-slate-400 dark:border-slate-700\":\n        status === \"absent\",\n      \"correct shadowed bg-orange-500 text-white border-orange-500\":\n        status === \"correct\" && isHighContrast,\n      \"present shadowed bg-cyan-500 text-white border-cyan-500\":\n        status === \"present\" && isHighContrast,\n      \"correct shadowed bg-green-500 text-white border-green-500\":\n        status === \"correct\" && !isHighContrast,\n      \"present shadowed bg-yellow-500 text-white border-yellow-500\":\n        status === \"present\" && !isHighContrast,\n      \"cell-fill-animation\": isFilled,\n      \"cell-reveal\": shouldReveal,\n    }\n  );\n  return (\n    <div className={classes} style={{ animationDelay }}>\n      <div className=\"letter-container\" style={{ animationDelay }}>\n        {value}\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { Dialog, Transition } from '@headlessui/react';\nimport { XCircleIcon } from '@heroicons/react/outline';\nimport { Fragment } from 'react';\nexport const BaseModal = ({ title, children, isOpen, handleClose }) => {\n    return (<Transition.Root show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"fixed inset-0 z-10 overflow-y-auto\" onClose={handleClose}>\n        <div className=\"flex min-h-full items-center justify-center py-10 px-4 text-center sm:p-0\">\n          <Transition.Child as={Fragment} enter=\"ease-out duration-300\" enterFrom=\"opacity-0\" enterTo=\"opacity-100\" leave=\"ease-in duration-200\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\n            <Dialog.Overlay className=\"fixed inset-0 min-h-screen bg-gray-500 bg-opacity-75 transition-opacity\"/>\n          </Transition.Child>\n          <Transition.Child as={Fragment} enter=\"ease-out duration-300\" enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\" enterTo=\"opacity-100 translate-y-0 sm:scale-100\" leave=\"ease-in duration-200\" leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\" leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\">\n            <div className=\"inline-block transform overflow-hidden rounded-lg bg-white px-4 pt-5 pb-4 text-left align-bottom shadow-xl transition-all dark:bg-gray-800 sm:my-8 sm:w-full sm:max-w-sm sm:p-6 sm:align-middle\">\n              <button onClick={() => handleClose()} tabIndex={0} aria-pressed=\"false\" className=\"absolute right-4 top-4\">\n                <XCircleIcon className=\"h-6 w-6 cursor-pointer dark:stroke-white\"/>\n              </button>\n              <div>\n                <div className=\"text-center\">\n                  <Dialog.Title as=\"h3\" className=\"text-lg font-medium leading-6 text-gray-900 dark:text-gray-100\">\n                    {title}\n                  </Dialog.Title>\n                  <div className=\"mt-2\">{children}</div>\n                </div>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>);\n};\n","import * as React from \"react\";\nimport { ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/outline';\nimport { addDays, format, startOfDay } from 'date-fns';\nimport { useState } from 'react';\nimport DatePicker, { registerLocale } from 'react-datepicker';\nimport { DATE_LOCALE } from '../../constants/settings';\nimport { DATEPICKER_CHOOSE_TEXT, DATEPICKER_TITLE, DATEPICKER_TODAY_TEXT, } from '../../constants/strings';\nimport { getToday, getYesterday } from '../../lib/dateutils';\nimport { firstGameDate, getLastGameDate, isValidGameDate, periodInDays, } from '../../lib/words';\nimport { BaseModal } from './BaseModal';\nexport const DatePickerModal = ({ isOpen, initialDate, handleSelectDate, handleClose, }) => {\n    const lastGameDate = getLastGameDate(getYesterday());\n    const [selectedDate, setSelectedDate] = useState(() => {\n        if (initialDate == null || initialDate > lastGameDate) {\n            return lastGameDate;\n        }\n        return initialDate;\n    });\n    const headingDateFormat = 'MMMM yyyy';\n    const buttonDateFormat = 'd MMM yyyy';\n    const formatOptions = { locale: DATE_LOCALE };\n    registerLocale('locale', DATE_LOCALE);\n    const excludedDates = [];\n    if (periodInDays > 1) {\n        let date = firstGameDate;\n        for (date = firstGameDate; date < getToday(); date = addDays(date, 1)) {\n            if (!isValidGameDate(date)) {\n                excludedDates.push(date);\n            }\n        }\n    }\n    return (<BaseModal title={DATEPICKER_TITLE} isOpen={isOpen} handleClose={handleClose}>\n      <div className=\"mx-auto flex max-w-2xl items-center justify-center space-x-4 py-5 text-left sm:w-48\">\n        <DatePicker locale=\"locale\" minDate={firstGameDate} maxDate={getYesterday()} selected={selectedDate} excludeDates={excludedDates} onChange={(date) => setSelectedDate(startOfDay(date))} inline popperClassName=\"react-datepicker-left\" renderCustomHeader={({ date, decreaseMonth, increaseMonth, prevMonthButtonDisabled, nextMonthButtonDisabled, }) => (<div className=\"flex items-center justify-between px-2 py-2\">\n              <span className=\"text-lg text-gray-700 dark:text-gray-100\">\n                {format(date, headingDateFormat, formatOptions)}\n              </span>\n\n              <div className=\"space-x-2\">\n                <button onClick={decreaseMonth} disabled={prevMonthButtonDisabled} type=\"button\" className={`\n                            ${prevMonthButtonDisabled &&\n                'cursor-not-allowed opacity-50'}\n                            inline-flex rounded border border-gray-300 bg-white p-1 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-0\n                            dark:border-gray-600 dark:bg-slate-700 dark:text-gray-200 dark:focus:ring-blue-600\n                        `}>\n                  <ChevronLeftIcon className=\"h-5 w-5 text-gray-600 dark:text-gray-300\"/>\n                </button>\n\n                <button onClick={increaseMonth} disabled={nextMonthButtonDisabled} type=\"button\" className={`\n                            ${nextMonthButtonDisabled &&\n                'cursor-not-allowed opacity-50'}\n                            inline-flex rounded border border-gray-300 bg-white p-1 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-0\n                            dark:border-gray-600 dark:bg-slate-700 dark:text-gray-200 dark:focus:ring-blue-600\n                        `}>\n                  <ChevronRightIcon className=\"h-5 w-5 text-gray-600 dark:text-gray-300\"/>\n                </button>\n              </div>\n            </div>)}/>\n      </div>\n      <div className=\"mt-5 flex columns-2 items-center items-stretch justify-center gap-2 text-center dark:text-white sm:mt-6\">\n        <button type=\"button\" disabled={!isValidGameDate(getToday())} className=\"mt-2 inline-flex w-full items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-center text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 disabled:border-gray-200 disabled:bg-gray-500 disabled:bg-white disabled:text-gray-900\n          disabled:focus:outline-none disabled:dark:border-gray-600 disabled:dark:bg-gray-800 disabled:dark:text-gray-400 sm:text-base sm:text-base\" onClick={() => handleSelectDate(getToday())}>\n          {DATEPICKER_CHOOSE_TEXT} {DATEPICKER_TODAY_TEXT}\n        </button>\n        <button type=\"button\" className=\"mt-2 inline-flex w-full items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-center text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 \" disabled={selectedDate >= getToday()} onClick={() => handleSelectDate(selectedDate)}>\n          {DATEPICKER_CHOOSE_TEXT}\n          <br />\n          {format(selectedDate, buttonDateFormat, formatOptions)}\n        </button>\n      </div>\n    </BaseModal>);\n};","import * as React from \"react\";\nimport { Cell } from '../grid/Cell';\nimport { BaseModal } from './BaseModal';\nexport const InfoModal = ({ isOpen, handleClose }) => {\n    return (<BaseModal title=\"How to play\" isOpen={isOpen} handleClose={handleClose}>\n      <p className=\"text-sm text-gray-500 dark:text-gray-300\">\n        Guess the word in 6 tries. After each guess, the color of the tiles will\n        change to show how close your guess was to the word.\n      </p>\n\n      <div className=\"mb-1 mt-4 flex justify-center\">\n        <Cell isRevealing={true} isCompleted={true} value=\"W\" status=\"correct\"/>\n        <Cell value=\"E\" isCompleted={true}/>\n        <Cell value=\"A\" isCompleted={true}/>\n        <Cell value=\"R\" isCompleted={true}/>\n        <Cell value=\"Y\" isCompleted={true}/>\n      </div>\n      <p className=\"text-sm text-gray-500 dark:text-gray-300\">\n        The letter W is in the word and in the correct spot.\n      </p>\n\n      <div className=\"mb-1 mt-4 flex justify-center\">\n        <Cell value=\"P\" isCompleted={true}/>\n        <Cell value=\"I\" isCompleted={true}/>\n        <Cell isRevealing={true} isCompleted={true} value=\"L\" status=\"present\"/>\n        <Cell value=\"O\" isCompleted={true}/>\n        <Cell value=\"T\" isCompleted={true}/>\n      </div>\n      <p className=\"text-sm text-gray-500 dark:text-gray-300\">\n        The letter L is in the word but in the wrong spot.\n      </p>\n\n      <div className=\"mb-1 mt-4 flex justify-center\">\n        <Cell value=\"V\" isCompleted={true}/>\n        <Cell value=\"A\" isCompleted={true}/>\n        <Cell value=\"G\" isCompleted={true}/>\n        <Cell isRevealing={true} isCompleted={true} value=\"U\" status=\"absent\"/>\n        <Cell value=\"E\" isCompleted={true}/>\n      </div>\n      <p className=\"text-sm text-gray-500 dark:text-gray-300\">\n        The letter U is not in the word in any spot.\n      </p>\n\n      <p className=\"mt-6 text-sm italic text-gray-500 dark:text-gray-300\">\n        This is an open source version of the word guessing game we all know and\n        love -{' '}\n        <a href=\"https://github.com/cwackerfuss/react-wordle\" className=\"font-bold underline\">\n          check out the code here\n        </a>{' '}\n      </p>\n    </BaseModal>);\n};\n","const fallbackCopyTextToClipboard = (text) => {\n  var textArea = document.createElement('textarea');\n  textArea.value = text;\n  textArea.style.top = '0';\n  textArea.style.left = '0';\n  textArea.style.position = 'fixed';\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n  try {\n      document.execCommand('copy');\n  }\n  catch (err) {\n      console.error('Fallback: Oops, unable to copy', err);\n  }\n  document.body.removeChild(textArea);\n};\nexport const copyTextToClipboard = (text) => {\n  if (!navigator.clipboard) {\n      fallbackCopyTextToClipboard(text);\n      return;\n  }\n  navigator.clipboard.writeText(text);\n};\n","import Blowfish from 'egoroof-blowfish';\nimport { BLOWFISH_IV, BLOWFISH_KEY } from '../constants/settings';\n// https://github.com/egoroof/blowfish/blob/master/README.md\nconst bf = new Blowfish(BLOWFISH_KEY, Blowfish.MODE.ECB, Blowfish.PADDING.NULL);\nbf.setIv(BLOWFISH_IV);\nexport const encrypt = (data) => btoa(bf.encode(data).reduce((data, byte) => data + String.fromCharCode(byte), ''));\nexport const decrypt = (encoded) => {\n    try {\n        return bf.decode(Uint8Array.from(atob(encoded), (c) => c.charCodeAt(0)), Blowfish.TYPE.STRING);\n    }\n    catch (error) {\n        return null;\n    }\n};\n","import { MAX_CHALLENGES } from '../constants/settings';\nimport { loadStatsFromLocalStorage, saveStatsToLocalStorage, } from './localStorage';\n// In stats array elements 0-5 are successes in 1-6 trys\nexport const addStatsForCompletedGame = (gameStats, count) => {\n    // Count is number of incorrect guesses before end.\n    const stats = Object.assign({}, gameStats);\n    stats.totalGames += 1;\n    if (count >= MAX_CHALLENGES) {\n        // A fail situation\n        stats.currentStreak = 0;\n        stats.gamesFailed += 1;\n    }\n    else {\n        stats.winDistribution[count] += 1;\n        stats.currentStreak += 1;\n        if (stats.bestStreak < stats.currentStreak) {\n            stats.bestStreak = stats.currentStreak;\n        }\n    }\n    stats.successRate = getSuccessRate(stats);\n    saveStatsToLocalStorage(stats);\n    return stats;\n};\nconst defaultStats = {\n    winDistribution: Array.from(new Array(MAX_CHALLENGES), () => 0),\n    gamesFailed: 0,\n    currentStreak: 0,\n    bestStreak: 0,\n    totalGames: 0,\n    successRate: 0,\n};\nexport const loadStats = () => {\n    return loadStatsFromLocalStorage() || defaultStats;\n};\nconst getSuccessRate = (gameStats) => {\n    const { totalGames, gamesFailed } = gameStats;\n    return Math.round((100 * (totalGames - gamesFailed)) / Math.max(totalGames, 1));\n};\n","import { DuplicateIcon } from '@heroicons/react/outline';\nimport * as React from 'react';\nimport { useState } from 'react';\n\nimport { copyTextToClipboard } from '../../lib/clipboard';\nimport { encrypt } from '../../lib/encryption';\nimport { loadGameStateFromLocalStorage } from '../../lib/localStorage';\nimport { loadStats } from '../../lib/stats';\n\nexport const EmigratePanel = () => {\n    const [isCopyButtonEnabled, setIsCopyButtonEnabled] = useState(true);\n    const [copyButtonText, setCopyButtonText] = useState('Copy');\n    const stats = loadStats();\n    const gameState = loadGameStateFromLocalStorage(true);\n    const migrationStats = {\n        statistics: stats,\n        gameState: gameState,\n    };\n\n    const emigrationCode = encrypt(JSON.stringify(migrationStats));\n    const copyEmigrationCodeToClipboard = () => {\n        copyTextToClipboard(emigrationCode);\n        setCopyButtonText('Copied!');\n        setIsCopyButtonEnabled(false);\n    };\n    return (\n        <div className=\"text-sm text-gray-500 dark:text-gray-300\">\n            <label\n                htmlFor=\"message\"\n                className=\"mb-2 block text-left text-sm font-medium text-gray-900 dark:text-gray-400\"\n            >\n                Copy your migration code:\n            </label>\n            <textarea\n                id=\"emigration-code\"\n                readOnly={true}\n                rows={8}\n                className=\"block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500\"\n                value={emigrationCode}\n            />\n            <button\n                disabled={!isCopyButtonEnabled}\n                onClick={copyEmigrationCodeToClipboard}\n                type=\"button\"\n                className=\"mt-2 inline-flex items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-left text-base font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 disabled:border-gray-200\n          disabled:bg-white disabled:text-gray-900 disabled:focus:outline-none disabled:dark:border-gray-600 disabled:dark:bg-gray-800 disabled:dark:text-gray-400 sm:text-sm\"\n            >\n                {isCopyButtonEnabled && (\n                    <DuplicateIcon className=\"mr-2 h-6 w-6 cursor-pointer dark:stroke-white\" />\n                )}\n                {copyButtonText}\n            </button>\n        </div>\n    );\n};\n","import { SaveIcon } from '@heroicons/react/outline';\nimport * as React from 'react';\nimport { useState } from 'react';\n\nimport { decrypt } from '../../lib/encryption';\nimport {\n    saveGameStateToLocalStorage,\n    saveStatsToLocalStorage,\n} from '../../lib/localStorage';\n\nexport const ImmigratePanel = () => {\n    const [isSaveButtonEnabled, setIsSaveButtonEnabled] = useState(false);\n    const textareaClassNames = {\n        valid: ['bg-gray-100', 'dark:bg-gray-700'],\n        invalid: ['bg-red-400', 'dark:bg-red-900'],\n    };\n    const allClassNames = [\n        ...textareaClassNames.valid,\n        ...textareaClassNames.invalid,\n    ];\n    const handleImmigrationCodeChange = event => {\n        var _a;\n        if (event.target instanceof Element) {\n            const textarea = event.target;\n            allClassNames.forEach(cn => textarea.classList.remove(cn));\n            setIsSaveButtonEnabled(false);\n            const text = textarea.value;\n            try {\n                const migrationStats = JSON.parse(\n                    (_a = decrypt(text)) !== null && _a !== void 0 ? _a : '',\n                );\n                if (\n                    !migrationStats ||\n                    (!migrationStats.gameState && !migrationStats.statistics)\n                ) {\n                    textareaClassNames.invalid.forEach(cn =>\n                        textarea.classList.add(cn),\n                    );\n                    return;\n                }\n                textareaClassNames.valid.forEach(cn =>\n                    textarea.classList.add(cn),\n                );\n                setIsSaveButtonEnabled(true);\n            } catch (error) {\n                textareaClassNames.invalid.forEach(cn =>\n                    textarea.classList.add(cn),\n                );\n            }\n        }\n    };\n    const handleSaveButton = () => {\n        var _a;\n        const textarea = document.getElementById('immigration-code');\n        if (\n            textarea &&\n            window.confirm(\n                'Are you sure you want to override the statistics on this device? This action is not reversable.',\n            )\n        ) {\n            var migrationStats = JSON.parse(\n                (_a = decrypt(textarea.value)) !== null && _a !== void 0\n                    ? _a\n                    : '',\n            );\n            if (!migrationStats) return;\n            if (migrationStats.gameState) {\n                saveGameStateToLocalStorage(true, migrationStats.gameState);\n            }\n            if (migrationStats.statistics) {\n                saveStatsToLocalStorage(migrationStats.statistics);\n            }\n            alert('The site will now reload.');\n            window.location.reload();\n        }\n    };\n    return (\n        <div className=\"text-sm text-gray-500 dark:text-gray-300\">\n            <label\n                htmlFor=\"message\"\n                className=\"mb-2 block text-left text-sm font-medium text-gray-900 dark:text-gray-400\"\n            >\n                Paste your migration code:\n            </label>\n            <textarea\n                onChange={e => handleImmigrationCodeChange(e)}\n                id=\"immigration-code\"\n                rows={8}\n                className=\"block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500\"\n            ></textarea>\n            <button\n                disabled={!isSaveButtonEnabled}\n                onClick={handleSaveButton}\n                type=\"button\"\n                className=\"mt-2 inline-flex items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-left text-base font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 disabled:border-gray-200 \n          disabled:bg-white disabled:text-gray-900 disabled:focus:outline-none disabled:dark:border-gray-600 disabled:dark:bg-gray-800 disabled:dark:text-gray-400 sm:text-sm\"\n            >\n                {isSaveButtonEnabled && (\n                    <SaveIcon className=\"mr-2 h-6 w-6 cursor-pointer dark:stroke-white\" />\n                )}\n                Save\n            </button>\n        </div>\n    );\n};\n","import * as React from \"react\";\nimport { useState } from 'react';\nimport { EmigratePanel } from '../stats/EmigratePanel';\nimport { ImmigratePanel } from '../stats/ImmigratePanel';\nimport { BaseModal } from './BaseModal';\nexport const MigrateStatsModal = ({ isOpen, handleClose }) => {\n    const [isEmigrateVisible, setIsEmigrateVisible] = useState(true);\n    return (<BaseModal title=\"Transfer your statistics\" isOpen={isOpen} handleClose={handleClose}>\n      <p className=\"mt-4 mb-4 text-sm text-gray-500 dark:text-gray-300\">\n        Copy the migration code on your old device and paste into the input on\n        the new device.\n      </p>\n\n      <div className=\"w-full columns-3 gap-0\">\n        <div className=\"mb-4 flex items-center\">\n          <p className=\"mb-0 flex text-sm font-medium text-gray-900 dark:text-gray-300\">\n            This is my:\n          </p>\n        </div>\n        <div className=\"mb-4 flex items-center\">\n          <input checked={isEmigrateVisible} onChange={() => setIsEmigrateVisible(true)} id=\"emigrate-radio-button\" radioGroup=\"migrate-radio-buttons\" type=\"radio\" value=\"\" name=\"emigrate-radio-button\" className=\"h-4 w-4 border-gray-300 bg-gray-100 text-blue-600 focus:ring-2 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:ring-offset-gray-800 dark:focus:ring-blue-600\"/>\n          <label htmlFor=\"emigrate-radio-button\" className=\"ml-2 text-sm font-medium text-gray-900 dark:text-gray-300\">\n            old device\n          </label>\n        </div>\n        <div className=\"flex items-center\">\n          <input checked={!isEmigrateVisible} onChange={() => setIsEmigrateVisible(false)} id=\"immigrate-radio-button\" radioGroup=\"migrate-radio-buttons\" type=\"radio\" value=\"\" name=\"immigrate-radio-button\" className=\"h-4 w-4 border-gray-300 bg-gray-100 text-blue-600 focus:ring-2 focus:ring-blue-500 dark:border-gray-600 dark:ring-offset-gray-800 dark:focus:ring-blue-600\"/>\n          <label htmlFor=\"immigrate-radio-button\" className=\"ml-2 text-sm font-medium text-gray-900 dark:text-gray-300\">\n            new device\n          </label>\n        </div>\n      </div>\n\n      {isEmigrateVisible && <EmigratePanel />}\n      {!isEmigrateVisible && <ImmigratePanel />}\n    </BaseModal>);\n};","import * as React from \"react\";\nimport classnames from 'classnames';\nexport const SettingsToggle = ({ settingName, flag, handleFlag, description, }) => {\n    const toggleHolder = classnames('w-14 h-8 flex shrink-0 items-center bg-gray-300 rounded-full p-1 duration-300 ease-in-out cursor-pointer', {\n        'bg-green-400': flag,\n    });\n    const toggleButton = classnames('bg-white w-6 h-6 rounded-full shadow-md transform duration-300 ease-in-out cursor-pointer', {\n        'translate-x-6': flag,\n    });\n    return (<>\n      <div className=\"flex justify-between gap-4 py-3\">\n        <div className=\"mt-2 text-left text-gray-500 dark:text-gray-300\">\n          <p className=\"leading-none\">{settingName}</p>\n          {description && (<p className=\"mt-1 text-xs text-gray-500 dark:text-gray-300\">\n              {description}\n            </p>)}\n        </div>\n        <div className={toggleHolder} onClick={() => handleFlag(!flag)}>\n          <div className={toggleButton}/>\n        </div>\n      </div>\n    </>);\n};\n","import * as React from \"react\";\nimport { HARD_MODE_DESCRIPTION, HIGH_CONTRAST_MODE_DESCRIPTION, } from '../../constants/strings';\nimport { BaseModal } from './BaseModal';\nimport { SettingsToggle } from './SettingsToggle';\nexport const SettingsModal = ({ isOpen, handleClose, isHardMode, handleHardMode, isDarkMode, handleDarkMode, isHighContrastMode, handleHighContrastMode, }) => {\n    return (<BaseModal title=\"Settings\" isOpen={isOpen} handleClose={handleClose}>\n      <div className=\"mt-2 flex flex-col divide-y\">\n        <SettingsToggle settingName=\"Hard Mode\" flag={isHardMode} handleFlag={handleHardMode} description={HARD_MODE_DESCRIPTION}/>\n        <SettingsToggle settingName=\"Dark Mode\" flag={isDarkMode} handleFlag={handleDarkMode}/>\n        <SettingsToggle settingName=\"High Contrast Mode\" flag={isHighContrastMode} handleFlag={handleHighContrastMode} description={HIGH_CONTRAST_MODE_DESCRIPTION}/>\n      </div>\n    </BaseModal>);\n};","import { UAParser } from 'ua-parser-js';\nimport { MAX_CHALLENGES } from '../constants/settings';\nimport { GAME_TITLE } from '../constants/strings';\nimport { getGuessStatuses } from './statuses';\nimport { solutionIndex, unicodeSplit } from './words';\nconst webShareApiDeviceTypes = ['mobile', 'smarttv', 'wearable'];\nconst parser = new UAParser();\nconst browser = parser.getBrowser();\nconst device = parser.getDevice();\nexport const shareStatus = (solution, guesses, lost, isHardMode, isDarkMode, isHighContrastMode, handleShareToClipboard, handleShareFailure) => {\n    const textToShare = `${GAME_TITLE} ${solutionIndex} ${lost ? 'X' : guesses.length}/${MAX_CHALLENGES}${isHardMode ? '*' : ''}\\n\\n` +\n        generateEmojiGrid(solution, guesses, getEmojiTiles(isDarkMode, isHighContrastMode));\n    const shareData = { text: textToShare };\n    let shareSuccess = false;\n    try {\n        if (attemptShare(shareData)) {\n            navigator.share(shareData);\n            shareSuccess = true;\n        }\n    }\n    catch (error) {\n        shareSuccess = false;\n    }\n    try {\n        if (!shareSuccess) {\n            if (navigator.clipboard) {\n                navigator.clipboard\n                    .writeText(textToShare)\n                    .then(handleShareToClipboard)\n                    .catch(handleShareFailure);\n            }\n            else {\n                handleShareFailure();\n            }\n        }\n    }\n    catch (error) {\n        handleShareFailure();\n    }\n};\nexport const generateEmojiGrid = (solution, guesses, tiles) => {\n    return guesses\n        .map((guess) => {\n        const status = getGuessStatuses(solution, guess);\n        const splitGuess = unicodeSplit(guess);\n        return splitGuess\n            .map((_, i) => {\n            switch (status[i]) {\n                case 'correct':\n                    return tiles[0];\n                case 'present':\n                    return tiles[1];\n                default:\n                    return tiles[2];\n            }\n        })\n            .join('');\n    })\n        .join('\\n');\n};\nconst attemptShare = (shareData) => {\n    var _a, _b;\n    return (\n    // Deliberately exclude Firefox Mobile, because its Web Share API isn't working correctly\n    ((_a = browser.name) === null || _a === void 0 ? void 0 : _a.toUpperCase().indexOf('FIREFOX')) === -1 &&\n        webShareApiDeviceTypes.indexOf((_b = device.type) !== null && _b !== void 0 ? _b : '') !== -1 &&\n        navigator.canShare &&\n        navigator.canShare(shareData) &&\n        navigator.share);\n};\nconst getEmojiTiles = (isDarkMode, isHighContrastMode) => {\n    let tiles = [];\n    tiles.push(isHighContrastMode ? '🟧' : '🟩');\n    tiles.push(isHighContrastMode ? '🟦' : '🟨');\n    tiles.push(isDarkMode ? '⬛' : '⬜');\n    return tiles;\n};\n","import * as React from \"react\";\nimport classNames from 'classnames';\nexport const Progress = ({ index, size, label, isCurrentDayStatRow, }) => {\n    const currentRowClass = classNames('text-xs font-medium text-blue-100 text-center p-0.5', { 'bg-blue-600': isCurrentDayStatRow, 'bg-gray-600': !isCurrentDayStatRow });\n    return (<div className=\"justify-left m-1 flex\">\n      <div className=\"w-2 items-center justify-center\">{index + 1}</div>\n      <div className=\"ml-2 w-full\">\n        <div style={{ width: `${8 + size}%` }} className={currentRowClass}>\n          {label}\n        </div>\n      </div>\n    </div>);\n};\n","import * as React from \"react\";\nimport { Progress } from './Progress';\nconst isCurrentDayStatRow = (isLatestGame, isGameWon, numberOfGuessesMade, i) => {\n    return isLatestGame && isGameWon && numberOfGuessesMade === i + 1;\n};\nexport const Histogram = ({ gameStats, isLatestGame, isGameWon, numberOfGuessesMade, }) => {\n    const winDistribution = gameStats.winDistribution;\n    const maxValue = Math.max(...winDistribution, 1);\n    return (<div className=\"justify-left m-2 columns-1 text-sm dark:text-white\">\n      {winDistribution.map((value, i) => (<Progress key={i} index={i} isCurrentDayStatRow={isCurrentDayStatRow(isLatestGame, isGameWon, numberOfGuessesMade, i)} size={90 * (value / maxValue)} label={String(value)}/>))}\n    </div>);\n};","import * as React from \"react\";\nimport { LogoutIcon } from '@heroicons/react/outline';\nimport { MIGRATE_BUTTON_TEXT, MIGRATE_DESCRIPTION_TEXT, } from '../../constants/strings';\nexport const MigrationIntro = ({ handleMigrateStatsButton }) => {\n    return (<div className=\"mt-5 columns-2 items-center items-stretch justify-center text-center dark:text-white sm:mt-6\">\n      <div className=\"mt-3 text-xs\">{MIGRATE_DESCRIPTION_TEXT}</div>\n      <button type=\"button\" className=\"mt-2 inline-flex w-full items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-center text-base font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:text-sm\" onClick={handleMigrateStatsButton}>\n        <LogoutIcon className=\"mr-2 h-6 w-6 cursor-pointer dark:stroke-white\"/>\n        {MIGRATE_BUTTON_TEXT}\n      </button>\n    </div>);\n};\n","import * as React from 'react';\n\nimport {\n    BEST_STREAK_TEXT,\n    CURRENT_STREAK_TEXT,\n    SUCCESS_RATE_TEXT,\n    TOTAL_TRIES_TEXT,\n} from '../../constants/strings';\n\nconst StatItem = ({ label, value }) => {\n    return (\n        <div className=\"m-1 w-1/4 items-center justify-center dark:text-white\">\n            <div className=\"text-3xl font-bold\">{value}</div>\n            <div className=\"text-xs\">{label}</div>\n        </div>\n    );\n};\nexport const StatBar = ({ gameStats }) => {\n    return (\n        <div className=\"my-2 flex justify-center\">\n            <StatItem label={TOTAL_TRIES_TEXT} value={gameStats.totalGames} />\n            <StatItem\n                label={SUCCESS_RATE_TEXT}\n                value={`${gameStats.successRate}%`}\n            />\n            <StatItem\n                label={CURRENT_STREAK_TEXT}\n                value={gameStats.currentStreak}\n            />\n            <StatItem label={BEST_STREAK_TEXT} value={gameStats.bestStreak} />\n        </div>\n    );\n};\n","import * as React from \"react\";\nimport { ClockIcon, ShareIcon,PlusIcon } from '@heroicons/react/outline';\nimport { format } from 'date-fns';\nimport Countdown from 'react-countdown';\nimport { DATE_LOCALE, ENABLE_ARCHIVED_GAMES, ENABLE_MIGRATE_STATS, } from '../../constants/settings';\nimport { ARCHIVE_GAMEDATE_TEXT, CREATE_FROM_STAT_TEXT, GUESS_DISTRIBUTION_TEXT, NEW_WORD_TEXT, SHARE_TEXT, STATISTICS_TITLE, } from '../../constants/strings';\nimport { shareStatus } from '../../lib/share';\nimport { solutionGameDate, tomorrow } from '../../lib/words';\nimport { Histogram } from '../stats/Histogram';\nimport { MigrationIntro } from '../stats/MigrationIntro';\nimport { StatBar } from '../stats/StatBar';\nimport { BaseModal } from './BaseModal';\nexport const StatsModal = ({ isOpen, handleClose, solution, guesses, gameStats, isLatestGame, isGameLost, isGameWon, handleShareToClipboard, handleShareFailure, handleMigrateStatsButton, isHardMode, isDarkMode, isHighContrastMode, numberOfGuessesMade, }) => {\n    if (gameStats.totalGames <= 0) {\n        return (<BaseModal title={STATISTICS_TITLE} isOpen={isOpen} handleClose={handleClose}>\n        <StatBar gameStats={gameStats}/>\n        {ENABLE_MIGRATE_STATS && (<MigrationIntro handleMigrateStatsButton={handleMigrateStatsButton}/>)}\n      </BaseModal>);\n    }\n    return (<BaseModal title={STATISTICS_TITLE} isOpen={isOpen} handleClose={handleClose}>\n      <StatBar gameStats={gameStats}/>\n      <h4 className=\"text-lg font-medium leading-6 text-gray-900 dark:text-gray-100\">\n        {GUESS_DISTRIBUTION_TEXT}\n      </h4>\n      <Histogram isLatestGame={isLatestGame} gameStats={gameStats} isGameWon={isGameWon} numberOfGuessesMade={numberOfGuessesMade}/>\n      {(isGameLost || isGameWon) && (<div className=\"mt-5 columns-2 items-center items-stretch justify-center text-center dark:text-white sm:mt-6\">\n          <div className=\"inline-block w-full text-left\">\n            {(!ENABLE_ARCHIVED_GAMES || isLatestGame) && (<div>\n              <button type=\"button\" className=\"mt-2 inline-flex w-full items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-center text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:text-base\" onClick={() => {\n                window.location='/create_game'\n            }}>\n              <PlusIcon className=\"mr-2 h-6 w-6 cursor-pointer dark:stroke-white\"/>\n              {CREATE_FROM_STAT_TEXT}\n            </button>\n                {/* <h5>{NEW_WORD_TEXT}</h5> */}\n                {/* <Countdown className=\"text-lg font-medium text-gray-900 dark:text-gray-100\" date={tomorrow} daysInHours={true}/> */}\n              </div>)}\n            {ENABLE_ARCHIVED_GAMES && !isLatestGame && (<div className=\"mt-2 inline-flex\">\n                <ClockIcon className=\"mr-1 mt-2 mt-1 h-5 w-5 stroke-black dark:stroke-white\"/>\n                <div className=\"mt-1 ml-1 text-center text-sm sm:text-base\">\n                  <strong>{ARCHIVE_GAMEDATE_TEXT}:</strong>\n                  <br />\n                  {format(solutionGameDate, 'd MMMM yyyy', {\n                    locale: DATE_LOCALE,\n                })}\n                </div>\n              </div>)}\n          </div>\n          <div>\n            <button type=\"button\" className=\"mt-2 inline-flex w-full items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-center text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:text-base\" onClick={() => {\n                shareStatus(solution, guesses, isGameLost, isHardMode, isDarkMode, isHighContrastMode, handleShareToClipboard, handleShareFailure);\n            }}>\n              <ShareIcon className=\"mr-2 h-6 w-6 cursor-pointer dark:stroke-white\"/>\n              {SHARE_TEXT}\n            </button>\n          </div>\n        </div>)}\n      {ENABLE_MIGRATE_STATS && (<div>\n          <hr className=\"mt-4 -mb-4 border-gray-500\"/>\n          <MigrationIntro handleMigrateStatsButton={handleMigrateStatsButton}/>\n        </div>)}\n    </BaseModal>);\n};\n","import { UAParser } from 'ua-parser-js';\nconst inAppBrowserNames = [\n    'Facebook',\n    'Instagram',\n    'Line',\n    'Messenger',\n    'Puffin',\n    'Twitter',\n    'WeChat',\n];\nconst parser = new UAParser();\nconst browser = parser.getBrowser();\nexport const isInAppBrowser = () => {\n    var _a;\n    return inAppBrowserNames.indexOf((_a = browser.name) !== null && _a !== void 0 ? _a : '') > -1;\n};\n","import * as React from \"react\";\n\nimport '../App.css';\nimport { ClockIcon } from '@heroicons/react/outline';\nimport { format } from 'date-fns';\nimport { default as GraphemeSplitter } from 'grapheme-splitter';\nimport { useEffect, useState } from 'react';\nimport Div100vh from 'react-div-100vh';\n\n\nimport { AlertContainer } from \"../components/alerts/AlertContainer\";\nimport { Grid } from '../components/grid/Grid';\nimport { Keyboard } from '../components/keyboard/Keyboard';\nimport { DatePickerModal } from '../components/modals/DatePickerModal';\nimport { InfoModal } from '../components/modals/InfoModal';\nimport { MigrateStatsModal } from '../components/modals/MigrateStatsModal';\nimport { SettingsModal } from '../components/modals/SettingsModal';\nimport { StatsModal } from '../components/modals/StatsModal';\nimport { Navbar } from '../components/navbar/Navbar';\nimport { DATE_LOCALE, DISCOURAGE_INAPP_BROWSERS, LONG_ALERT_TIME_MS, MAX_CHALLENGES, REVEAL_TIME_MS, WELCOME_INFO_MODAL_MS, } from '../constants/settings';\nimport { CORRECT_WORD_MESSAGE, DISCOURAGE_INAPP_BROWSER_TEXT, GAME_COPIED_MESSAGE, HARD_MODE_ALERT_MESSAGE, NOT_ENOUGH_LETTERS_MESSAGE, SHARE_FAILURE_TEXT, WIN_MESSAGES, WORD_NOT_FOUND_MESSAGE, } from '../constants/strings';\nimport { useAlert } from '../context/AlertContext';\nimport { isInAppBrowser } from '../lib/browser';\nimport { getStoredIsHighContrastMode, loadGameStateFromLocalStorage, saveGameStateToLocalStorage, setStoredIsHighContrastMode, } from '../lib/localStorage';\nimport { addStatsForCompletedGame, loadStats } from '../lib/stats';\nimport { findFirstUnusedReveal, getGameDate, getIsLatestGame, isWinningWord, isWordInWordList, setGameDate, solution, solutionGameDate, unicodeLength, } from '../lib/words';\nfunction Wordle() {\n  \n\n    const isLatestGame = getIsLatestGame();\n    const gameDate = getGameDate();\n    const prefersDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    const { showError: showErrorAlert, showSuccess: showSuccessAlert } = useAlert();\n    const [currentGuess, setCurrentGuess] = useState('');\n    const [isGameWon, setIsGameWon] = useState(false);\n    const [isInfoModalOpen, setIsInfoModalOpen] = useState(false);\n    const [isStatsModalOpen, setIsStatsModalOpen] = useState(false);\n    const [isDatePickerModalOpen, setIsDatePickerModalOpen] = useState(false);\n    const [isMigrateStatsModalOpen, setIsMigrateStatsModalOpen] = useState(false);\n    const [isSettingsModalOpen, setIsSettingsModalOpen] = useState(false);\n    const [currentRowClass, setCurrentRowClass] = useState('');\n    const [isGameLost, setIsGameLost] = useState(false);\n    const [isDarkMode, setIsDarkMode] = useState(localStorage.getItem('theme')\n        ? localStorage.getItem('theme') === 'dark'\n        : prefersDarkMode\n            ? true\n            : false);\n    const [isHighContrastMode, setIsHighContrastMode] = useState(getStoredIsHighContrastMode());\n    const [isRevealing, setIsRevealing] = useState(false);\n    const [guesses, setGuesses] = useState(() => {\n        const loaded = loadGameStateFromLocalStorage(isLatestGame);\n        if (!loaded.solution) {\n            return [];\n        }\n        const gameWasWon = loaded.guesses.includes(solution);\n        if (gameWasWon) {\n            setIsGameWon(true);\n        }\n        if (loaded.guesses.length === MAX_CHALLENGES && !gameWasWon) {\n            setIsGameLost(true);\n            showErrorAlert(CORRECT_WORD_MESSAGE(solution), {\n                persist: true,\n            });\n        }\n        return loaded.guesses;\n    });\n    const [stats, setStats] = useState(() => loadStats());\n    const [isHardMode, setIsHardMode] = useState(localStorage.getItem('gameMode')\n        ? localStorage.getItem('gameMode') === 'hard'\n        : false);\n    useEffect(() => {\n        // if no game state on load,\n        // show the user the how-to info modal\n        if (!loadGameStateFromLocalStorage(true)) {\n            setTimeout(() => {\n                setIsInfoModalOpen(true);\n            }, WELCOME_INFO_MODAL_MS);\n        }\n    });\n    useEffect(() => {\n        DISCOURAGE_INAPP_BROWSERS &&\n            isInAppBrowser() &&\n            showErrorAlert(DISCOURAGE_INAPP_BROWSER_TEXT, {\n                persist: false,\n                durationMs: 7000,\n            });\n    }, [showErrorAlert]);\n    useEffect(() => {\n        if (isDarkMode) {\n            document.documentElement.classList.add('dark');\n        }\n        else {\n            document.documentElement.classList.remove('dark');\n        }\n        if (isHighContrastMode) {\n            document.documentElement.classList.add('high-contrast');\n        }\n        else {\n            document.documentElement.classList.remove('high-contrast');\n        }\n    }, [isDarkMode, isHighContrastMode]);\n    const handleDarkMode = (isDark) => {\n        setIsDarkMode(isDark);\n        localStorage.setItem('theme', isDark ? 'dark' : 'light');\n    };\n    const handleHardMode = (isHard) => {\n        if (guesses.length === 0 || localStorage.getItem('gameMode') === 'hard') {\n            setIsHardMode(isHard);\n            localStorage.setItem('gameMode', isHard ? 'hard' : 'normal');\n        }\n        else {\n            showErrorAlert(HARD_MODE_ALERT_MESSAGE);\n        }\n    };\n    const handleHighContrastMode = (isHighContrast) => {\n        setIsHighContrastMode(isHighContrast);\n        setStoredIsHighContrastMode(isHighContrast);\n    };\n    const clearCurrentRowClass = () => {\n        setCurrentRowClass('');\n    };\n    useEffect(() => {\n        saveGameStateToLocalStorage(getIsLatestGame(), { guesses, solution });\n    }, [guesses]);\n    useEffect(() => {\n        if (isGameWon) {\n            const winMessage = WIN_MESSAGES[Math.floor(Math.random() * WIN_MESSAGES.length)];\n            const delayMs = REVEAL_TIME_MS * solution.length;\n            showSuccessAlert(winMessage, {\n                delayMs,\n                onClose: () => setIsStatsModalOpen(true),\n            });\n        }\n        if (isGameLost) {\n            setTimeout(() => {\n                setIsStatsModalOpen(true);\n            }, (solution.length + 1) * REVEAL_TIME_MS);\n        }\n    }, [isGameWon, isGameLost, showSuccessAlert]);\n    const onChar = (value) => {\n        if (unicodeLength(`${ currentGuess }${ value }`) <= solution.length &&\n            guesses.length < MAX_CHALLENGES &&\n            !isGameWon) {\n            setCurrentGuess(`${ currentGuess }${ value }`);\n        }\n    };\n    const onDelete = () => {\n        setCurrentGuess(new GraphemeSplitter().splitGraphemes(currentGuess).slice(0, -1).join(''));\n    };\n    const onEnter = () => {\n        if (isGameWon || isGameLost) {\n            return;\n        }\n        if (!(unicodeLength(currentGuess) === solution.length)) {\n            setCurrentRowClass('jiggle');\n            return showErrorAlert(NOT_ENOUGH_LETTERS_MESSAGE, {\n                onClose: clearCurrentRowClass,\n            });\n        }\n        if (!isWordInWordList(currentGuess)) {\n            setCurrentRowClass('jiggle');\n            return showErrorAlert(WORD_NOT_FOUND_MESSAGE, {\n                onClose: clearCurrentRowClass,\n            });\n        }\n        // enforce hard mode - all guesses must contain all previously revealed letters\n        if (isHardMode) {\n            const firstMissingReveal = findFirstUnusedReveal(currentGuess, guesses);\n            if (firstMissingReveal) {\n                setCurrentRowClass('jiggle');\n                return showErrorAlert(firstMissingReveal, {\n                    onClose: clearCurrentRowClass,\n                });\n            }\n        }\n        setIsRevealing(true);\n        // turn this back off after all\n        // chars have been revealed\n        setTimeout(() => {\n            setIsRevealing(false);\n        }, REVEAL_TIME_MS * solution.length);\n        const winningWord = isWinningWord(currentGuess);\n        if (unicodeLength(currentGuess) === solution.length &&\n            guesses.length < MAX_CHALLENGES &&\n            !isGameWon) {\n            setGuesses([...guesses, currentGuess]);\n            setCurrentGuess('');\n            if (winningWord) {\n                if (isLatestGame) {\n                    setStats(addStatsForCompletedGame(stats, guesses.length));\n                }\n                return setIsGameWon(true);\n            }\n            if (guesses.length === MAX_CHALLENGES - 1) {\n                if (isLatestGame) {\n                    setStats(addStatsForCompletedGame(stats, guesses.length + 1));\n                }\n                setIsGameLost(true);\n                showErrorAlert(CORRECT_WORD_MESSAGE(solution), {\n                    persist: true,\n                    delayMs: REVEAL_TIME_MS * solution.length + 1,\n                });\n            }\n        }\n    };\n\n    console.log('======Wordle32=============================');\n    console.log('======solution=============================');\n    console.log(solution)\n    console.log('======guesses=============================');\n    console.log(guesses)\n    return (\n\n        <Div100vh>\n            <div className=\"flex h-full flex-col\">\n                <Navbar setIsInfoModalOpen={setIsInfoModalOpen} setIsStatsModalOpen={setIsStatsModalOpen} setIsDatePickerModalOpen={setIsDatePickerModalOpen} setIsSettingsModalOpen={setIsSettingsModalOpen} />\n\n                {!isLatestGame && (<div className=\"flex items-center justify-center\">\n                    <ClockIcon className=\"h-6 w-6 stroke-gray-600 dark:stroke-gray-300\" />\n                    <p className=\"text-base text-gray-600 dark:text-gray-300\">\n                        {format(gameDate, 'd MMMM yyyy', { locale: DATE_LOCALE })}\n                    </p>\n                </div>)}\n\n                <div className=\"mx-auto flex w-full grow flex-col px-1 pt-2 pb-8 sm:px-6 md:max-w-7xl lg:px-8 short:pb-2 short:pt-2\">\n                    <div className=\"flex grow flex-col justify-center pb-6 short:pb-2\">\n                        {/* <Grid solution={solution} guesses={guesses} currentGuess={currentGuess} isRevealing={isRevealing} currentRowClassName={currentRowClass} /> */}\n                    </div>\n                    {/* <Keyboard onChar={onChar} onDelete={onDelete} onEnter={onEnter} solution={solution} guesses={guesses} isRevealing={isRevealing} /> */}\n                    <InfoModal isOpen={isInfoModalOpen} handleClose={() => setIsInfoModalOpen(false)} />\n                    <StatsModal isOpen={isStatsModalOpen} handleClose={() => setIsStatsModalOpen(false)} solution={solution} guesses={guesses} gameStats={stats} isLatestGame={isLatestGame} isGameLost={isGameLost} isGameWon={isGameWon} handleShareToClipboard={() => showSuccessAlert(GAME_COPIED_MESSAGE)} handleShareFailure={() => showErrorAlert(SHARE_FAILURE_TEXT, {\n                        durationMs: LONG_ALERT_TIME_MS,\n                    })} handleMigrateStatsButton={() => {\n                        setIsStatsModalOpen(false);\n                        setIsMigrateStatsModalOpen(true);\n                    }} isHardMode={isHardMode} isDarkMode={isDarkMode} isHighContrastMode={isHighContrastMode} numberOfGuessesMade={guesses.length} />\n                    <DatePickerModal isOpen={isDatePickerModalOpen} initialDate={solutionGameDate} handleSelectDate={(d) => {\n                        setIsDatePickerModalOpen(false);\n                        setGameDate(d);\n                    }} handleClose={() => setIsDatePickerModalOpen(false)} />\n                    <MigrateStatsModal isOpen={isMigrateStatsModalOpen} handleClose={() => setIsMigrateStatsModalOpen(false)} />\n                    <SettingsModal isOpen={isSettingsModalOpen} handleClose={() => setIsSettingsModalOpen(false)} isHardMode={isHardMode} handleHardMode={handleHardMode} isDarkMode={isDarkMode} handleDarkMode={handleDarkMode} isHighContrastMode={isHighContrastMode} handleHighContrastMode={handleHighContrastMode} />\n                    <AlertContainer />\n                </div>\n            </div>\n        </Div100vh>\n    );\n}\nexport default Wordle;\n","import './App.css';\n\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport Div100vh from 'react-div-100vh';\nimport { Link, Route, BrowserRouter as Router, Routes } from 'react-router-dom';\n\nimport CreateGame from './screens/CreateGame';\nimport Home from './screens/Home';\nimport SharedWordls from './screens/SharedWordls';\nimport Wordle from './screens/Wordle';\n\nfunction App() {\n    return (\n        <Router>\n            <Routes>\n                <Route path=\"/Wgame\" element={<Home />} />\n                <Route path=\"/wordle\" element={<Wordle />} />\n                <Route path=\"/create_game\" element={<CreateGame />} />\n                <Route path=\"/user_wordles\" element={<SharedWordls />} />\n            </Routes>\n        </Router>\n    );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './assets/main.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport App from './App';\nimport { AlertProvider } from './context/AlertContext';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <React.StrictMode>\n        <AlertProvider>\n            <App />\n        </AlertProvider>\n    </React.StrictMode>,\n);\n\nreportWebVitals();\n"],"sourceRoot":""}